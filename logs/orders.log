2025-06-20 03:52:23,957 - INFO - orders - Application starting up - Orders logging initialized
2025-06-20 03:52:28,846 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-20 03:54:58,937 - INFO - orders - Application starting up - Orders logging initialized
2025-06-20 03:56:26,408 - INFO - orders - Application starting up - Orders logging initialized
2025-06-20 03:57:02,349 - INFO - orders - Cancel stoploss request received - Order ID: 3339718299, User ID: 1
2025-06-20 03:57:02,372 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-20 03:57:02,459 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-20 03:57:02,459 - INFO - orders - Using order model: DemoUserOrder
2025-06-20 03:57:02,478 - INFO - orders - Fetched 1 open orders for user 1
2025-06-20 03:57:02,496 - INFO - orders - Fetched 0 pending orders for user 1
2025-06-20 03:57:02,504 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-06-20 03:57:05,043 - INFO - orders - Cancel stoploss request received - Order ID: 3339718299, User ID: 1
2025-06-20 03:57:05,048 - ERROR - orders - Error cancelling stoploss: 400: No stop loss exists for this order
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 2423, in cancel_stoploss
    raise HTTPException(status_code=400, detail="No stop loss exists for this order")
fastapi.exceptions.HTTPException: 400: No stop loss exists for this order
2025-06-20 03:57:45,859 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-20 03:58:20,213 - INFO - orders - Add stoploss request received - Order ID: 3339718299, User ID: 1
2025-06-20 03:58:20,228 - INFO - orders - Generated stoploss_id: 4273052499 for order 3339718299
2025-06-20 03:58:20,241 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-20 03:58:20,241 - INFO - orders - Non-Barclays user. Adding stoploss to order 3339718299 immediately
2025-06-20 03:58:20,305 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-20 03:58:20,305 - INFO - orders - Using order model: DemoUserOrder
2025-06-20 03:58:20,314 - INFO - orders - Fetched 1 open orders for user 1
2025-06-20 03:58:20,332 - INFO - orders - Fetched 0 pending orders for user 1
2025-06-20 03:58:20,343 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-06-20 03:58:40,726 - INFO - orders - Cancel stoploss request received - Order ID: 3339718299, User ID: 1
2025-06-20 03:58:40,760 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-20 03:58:40,796 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-20 03:58:40,796 - INFO - orders - Using order model: DemoUserOrder
2025-06-20 03:58:40,803 - INFO - orders - Fetched 1 open orders for user 1
2025-06-20 03:58:40,812 - INFO - orders - Fetched 0 pending orders for user 1
2025-06-20 03:58:40,819 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-06-20 03:58:47,104 - INFO - orders - Add stoploss request received - Order ID: 3339718299, User ID: 1
2025-06-20 03:58:47,116 - INFO - orders - Generated stoploss_id: 9495769617 for order 3339718299
2025-06-20 03:58:47,124 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-20 03:58:47,124 - INFO - orders - Non-Barclays user. Adding stoploss to order 3339718299 immediately
2025-06-20 03:58:47,159 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-20 03:58:47,159 - INFO - orders - Using order model: DemoUserOrder
2025-06-20 03:58:47,167 - INFO - orders - Fetched 1 open orders for user 1
2025-06-20 03:58:47,177 - INFO - orders - Fetched 0 pending orders for user 1
2025-06-20 03:58:47,185 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-06-20 03:59:30,163 - INFO - orders - Application starting up - Orders logging initialized
2025-06-20 03:59:32,298 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -100.1000000000000000000000000 JPY to USD for SL/TP profit conversion for order 3339718299 (user_id: 1, position: 3339718299)
2025-06-20 03:59:32,298 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: JPYUSD
2025-06-20 03:59:32,300 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-20 03:59:32,300 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for JPYUSD, trying inverse
2025-06-20 03:59:32,300 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDJPY
2025-06-20 03:59:32,304 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('145.4390000000'), 'o': Decimal('145.4360000000')}
2025-06-20 03:59:32,304 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 145.4390000000
2025-06-20 03:59:32,304 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -100.1000000000000000000000000 JPY / 145.4390000000 = -0.6882610579005631226837368244 USD
2025-06-20 04:00:29,483 - INFO - orders - Application starting up - Orders logging initialized
2025-06-20 04:02:14,695 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-20 04:04:25,051 - INFO - orders - Using adjusted buy price 0.8889100000 for BUY order
2025-06-20 04:04:25,052 - INFO - orders - Order placement request received - Symbol: AUDCAD, Type: BUY, Price: 0.8889100000
2025-06-20 04:04:25,058 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-20 04:04:25,059 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-20 04:04:25,059 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-20 04:04:25,936 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 0.01
2025-06-20 04:04:25,936 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-20 04:04:25,941 - INFO - orders - [ORDER_MARGIN_CALC] Got BUY price for AUDCAD from cache: 0.8889100000
2025-06-20 04:04:25,941 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-20 04:04:25,942 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 0.01 * 100000.00000000 = 1000.0000000000
2025-06-20 04:04:25,942 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (1000.0000000000 * 0.8889100000) / 100.00 = 8.889100000000000000 (rounded to 8.89)
2025-06-20 04:04:25,942 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-20 04:04:25,942 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 0.01 * 10.0000 = 0.100000
2025-06-20 04:04:25,942 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-20 04:04:25,943 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 8.89 CAD
2025-06-20 04:04:25,943 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.89 CAD to USD for margin for AUDCAD BUY order (user_id: 1, position: )
2025-06-20 04:04:25,943 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-20 04:04:25,945 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-20 04:04:25,945 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-20 04:04:25,945 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-20 04:04:25,950 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3705300000'), 'o': Decimal('1.3705100000')}
2025-06-20 04:04:25,950 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3705300000
2025-06-20 04:04:25,951 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.89 CAD / 1.3705300000 = 6.486541702844884825578425864 USD
2025-06-20 04:04:25,951 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 8.89 CAD -> 6.486541702844884825578425864 USD
2025-06-20 04:04:25,951 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=6.486541702844884825578425864, price=0.8889100000, contract_value=1000.0000000000, commission=0.10
2025-06-20 04:04:25,951 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=0.10
2025-06-20 04:04:25,960 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-20 04:04:25,960 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-20 04:04:25,961 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-20 04:04:25,961 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=0.01, StoredMargin=6.486541702844884825578425864
2025-06-20 04:04:25,961 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=648.6541702844884825578425864
2025-06-20 04:04:25,961 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0.01, TotalSellQty=0, NetQty=0.01
2025-06-20 04:04:25,961 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('648.6541702844884825578425864')], HighestMarginPerLot=648.6541702844884825578425864
2025-06-20 04:04:25,961 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=6.49, ContributingOrders=1 (based on individual stored margins)
2025-06-20 04:04:25,962 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=6.49, AdditionalMargin=6.49
2025-06-20 04:04:25,974 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=6.49
2025-06-20 04:04:26,028 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '8661687911', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8889100000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': Decimal('6.486541702844884825578425864'), 'commission': Decimal('0.10'), 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'OPEN'}
2025-06-20 04:04:26,092 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 6.49000000
2025-06-20 04:04:26,125 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-20 04:04:26,648 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-20 04:04:26,653 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-20 04:04:26,653 - INFO - orders - Using order model: DemoUserOrder
2025-06-20 04:04:26,658 - INFO - orders - Fetched 1 open orders for user 1
2025-06-20 04:04:26,665 - INFO - orders - Fetched 0 pending orders for user 1
2025-06-20 04:04:26,670 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-06-20 04:04:41,872 - INFO - orders - Add stoploss request received - Order ID: 8661687911, User ID: 1
2025-06-20 04:04:41,913 - INFO - orders - Generated stoploss_id: 9873555209 for order 8661687911
2025-06-20 04:04:41,924 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-20 04:04:41,925 - INFO - orders - Non-Barclays user. Adding stoploss to order 8661687911 immediately
2025-06-20 04:04:41,997 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-20 04:04:41,997 - INFO - orders - Using order model: DemoUserOrder
2025-06-20 04:04:42,016 - INFO - orders - Fetched 1 open orders for user 1
2025-06-20 04:04:42,029 - INFO - orders - Fetched 0 pending orders for user 1
2025-06-20 04:04:42,037 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-06-20 04:04:43,512 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -0.16000000000000000000000000 CAD to USD for SL/TP profit conversion for order 8661687911 (user_id: 1, position: 8661687911)
2025-06-20 04:04:43,512 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-20 04:04:43,524 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-20 04:04:43,524 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-20 04:04:43,524 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-20 04:04:43,537 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3705300000'), 'o': Decimal('1.3705100000')}
2025-06-20 04:04:43,537 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3705300000
2025-06-20 04:04:43,537 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -0.16000000000000000000000000 CAD / 1.3705300000 = -0.1167431577564883658146848300 USD
2025-06-20 04:28:45,637 - INFO - orders - Application starting up - Orders logging initialized
2025-06-20 04:29:15,963 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-20 04:29:30,410 - INFO - orders - Using adjusted buy price 0.5303800000 for BUY order
2025-06-20 04:29:30,411 - INFO - orders - Order placement request received - Symbol: AUDCHF, Type: BUY, Price: 0.5303800000
2025-06-20 04:29:30,414 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-20 04:29:30,415 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-20 04:29:30,415 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-20 04:29:30,787 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCHF BUY order, quantity: 0.01
2025-06-20 04:29:30,788 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCHF: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-20 04:29:30,798 - INFO - orders - [ORDER_MARGIN_CALC] Got BUY price for AUDCHF from cache: 0.5303800000
2025-06-20 04:29:30,799 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCHF:
2025-06-20 04:29:30,799 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 0.01 * 100000.00000000 = 1000.0000000000
2025-06-20 04:29:30,799 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (1000.0000000000 * 0.5303800000) / 100.00 = 5.303800000000000000 (rounded to 5.30)
2025-06-20 04:29:30,800 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCHF: type=0, value_type=0, rate=10.0000
2025-06-20 04:29:30,800 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 0.01 * 10.0000 = 0.100000
2025-06-20 04:29:30,800 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCHF: CHF
2025-06-20 04:29:30,800 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CHF to USD: 5.30 CHF
2025-06-20 04:29:30,801 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 5.30 CHF to USD for margin for AUDCHF BUY order (user_id: 1, position: )
2025-06-20 04:29:30,801 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CHFUSD
2025-06-20 04:29:30,806 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-20 04:29:30,806 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CHFUSD, trying inverse
2025-06-20 04:29:30,806 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCHF
2025-06-20 04:29:30,810 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('0.8175900000'), 'o': Decimal('0.8175400000')}
2025-06-20 04:29:30,810 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 0.8175900000
2025-06-20 04:29:30,811 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 5.30 CHF / 0.8175900000 = 6.482466762069007693342628946 USD
2025-06-20 04:29:30,811 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 5.30 CHF -> 6.482466762069007693342628946 USD
2025-06-20 04:29:30,811 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCHF BUY: margin=6.482466762069007693342628946, price=0.5303800000, contract_value=1000.0000000000, commission=0.10
2025-06-20 04:29:30,811 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCHF: Calculated commission=0.10
2025-06-20 04:29:30,824 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCHF, Positions count: 0
2025-06-20 04:29:30,824 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCHF. Returning zero margin.
2025-06-20 04:29:30,825 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCHF, Positions count: 1
2025-06-20 04:29:30,825 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCHF, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=0.01, StoredMargin=6.482466762069007693342628946
2025-06-20 04:29:30,825 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCHF, Pos 1: MarginPerLot=648.2466762069007693342628946
2025-06-20 04:29:30,825 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCHF: TotalBuyQty=0.01, TotalSellQty=0, NetQty=0.01
2025-06-20 04:29:30,825 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCHF: AllMarginsPerLot=[Decimal('648.2466762069007693342628946')], HighestMarginPerLot=648.2466762069007693342628946
2025-06-20 04:29:30,826 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCHF: CalculatedTotalMargin=6.48, ContributingOrders=1 (based on individual stored margins)
2025-06-20 04:29:30,826 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCHF: MarginBefore=0.00, MarginAfter=6.48, AdditionalMargin=6.48
2025-06-20 04:29:30,871 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=6.48
2025-06-20 04:29:30,948 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '6380278055', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCHF', 'order_type': 'BUY', 'order_price': Decimal('0.5303800000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': Decimal('6.482466762069007693342628946'), 'commission': Decimal('0.10'), 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'OPEN'}
2025-06-20 04:29:31,015 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 6.48000000
2025-06-20 04:29:31,053 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-20 04:29:31,536 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-20 04:29:31,545 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-20 04:29:31,546 - INFO - orders - Using order model: DemoUserOrder
2025-06-20 04:29:31,559 - INFO - orders - Fetched 1 open orders for user 1
2025-06-20 04:29:31,578 - INFO - orders - Fetched 0 pending orders for user 1
2025-06-20 04:29:31,582 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-06-20 04:29:47,320 - INFO - orders - Add stoploss request received - Order ID: 6380278055, User ID: 1
2025-06-20 04:29:47,344 - INFO - orders - Generated stoploss_id: 8825123139 for order 6380278055
2025-06-20 04:29:47,360 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-20 04:29:47,360 - INFO - orders - Non-Barclays user. Adding stoploss to order 6380278055 immediately
2025-06-20 04:29:47,426 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-20 04:29:47,426 - INFO - orders - Using order model: DemoUserOrder
2025-06-20 04:29:47,447 - INFO - orders - Fetched 1 open orders for user 1
2025-06-20 04:29:47,466 - INFO - orders - Fetched 0 pending orders for user 1
2025-06-20 04:29:47,479 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-06-20 04:31:21,074 - INFO - orders - Cancel stoploss request received - Order ID: 6380278055, User ID: 1
2025-06-20 04:31:21,167 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-20 04:31:21,260 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-20 04:31:21,261 - INFO - orders - Using order model: DemoUserOrder
2025-06-20 04:31:21,269 - INFO - orders - Fetched 1 open orders for user 1
2025-06-20 04:31:21,280 - INFO - orders - Fetched 0 pending orders for user 1
2025-06-20 04:31:21,288 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-06-20 04:31:30,210 - INFO - orders - Add stoploss request received - Order ID: 6380278055, User ID: 1
2025-06-20 04:31:30,238 - INFO - orders - Generated stoploss_id: 8711924663 for order 6380278055
2025-06-20 04:31:30,251 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-20 04:31:30,252 - INFO - orders - Non-Barclays user. Adding stoploss to order 6380278055 immediately
2025-06-20 04:31:30,292 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-20 04:31:30,293 - INFO - orders - Using order model: DemoUserOrder
2025-06-20 04:31:30,309 - INFO - orders - Fetched 1 open orders for user 1
2025-06-20 04:31:30,322 - INFO - orders - Fetched 0 pending orders for user 1
2025-06-20 04:31:30,332 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
