2025-06-03 00:04:00,064 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:04:16,141 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:04:43,511 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:05:05,505 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:05:57,575 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 00:05:57,606 - ERROR - orders - Unexpected error in create_order endpoint: module 'app.crud.crud_order' has no attribute 'get_create_order_function'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 144, in place_order
    create_order_fn = crud_order.get_create_order_function(current_user.user_type)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: module 'app.crud.crud_order' has no attribute 'get_create_order_function'
2025-06-03 00:06:40,876 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:06:56,996 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:07:10,440 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:08:01,285 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:08:10,130 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:08:24,203 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 00:08:24,203 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 00:08:24,203 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 00:08:24,203 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 00:08:24,204 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('10000.00000000'), 'margin': Decimal('0E-8')}
2025-06-03 00:08:24,204 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 00:08:24,210 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 00:08:24,210 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 00:08:24,211 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 00:08:24,211 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:08:24,211 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:08:24,211 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 00:08:24,222 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 00:08:24,222 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 00:08:24,222 - DEBUG - orders - Standard margin calculation for AUDCAD: 8.9000000000000000
2025-06-03 00:08:24,222 - DEBUG - orders - Converting margin from CAD to USD. Amount: 8.9000000000000000
2025-06-03 00:08:24,222 - ERROR - orders - Unexpected error during margin calculation for user 1, symbol AUDCAD, order_type BUY: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\margin_calculator.py", line 251, in calculate_single_order_margin
    adjusted_prices = await get_adjusted_market_price_cache(redis_client, user_group_name, direct_conversion_symbol)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 00:08:24,225 - ERROR - orders - Margin calculation returned None values for user 1, symbol AUDCAD
2025-06-03 00:08:24,225 - ERROR - orders - Error in process_new_order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values
2025-06-03 00:08:24,227 - ERROR - orders - Error processing order for user 1: Failed to process order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 199, in process_new_order
    raise OrderProcessingError(f"Failed to process order: {str(e)}")
app.services.order_processing.OrderProcessingError: Failed to process order: Margin calculation returned invalid values
2025-06-03 00:09:42,830 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:09:56,452 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:10:01,262 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:10:19,411 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:10:40,461 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:10:55,444 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 00:10:55,445 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 00:10:55,445 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 00:10:55,445 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 00:10:55,448 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('10000.00000000'), 'margin': Decimal('0E-8')}
2025-06-03 00:10:55,448 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 00:10:55,460 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 00:10:55,461 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 00:10:55,462 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 00:10:55,462 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:10:55,463 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:10:55,463 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 00:10:55,485 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 00:10:55,485 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 00:10:55,485 - DEBUG - orders - Standard margin calculation for AUDCAD: 8.9000000000000000
2025-06-03 00:10:55,486 - DEBUG - orders - Converting margin from CAD to USD. Amount: 8.9000000000000000
2025-06-03 00:10:55,486 - DEBUG - orders - Attempting direct conversion using symbol: CADUSD
2025-06-03 00:10:55,486 - ERROR - orders - Unexpected error during margin calculation for user 1, symbol AUDCAD, order_type BUY: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\margin_calculator.py", line 252, in calculate_single_order_margin
    adjusted_prices = await get_adjusted_market_price_cache(redis_client, user_group_name, direct_conversion_symbol)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 00:10:55,497 - ERROR - orders - Margin calculation returned None values for user 1, symbol AUDCAD
2025-06-03 00:10:55,498 - ERROR - orders - Error in process_new_order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values
2025-06-03 00:10:55,500 - ERROR - orders - Error processing order for user 1: Failed to process order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 199, in process_new_order
    raise OrderProcessingError(f"Failed to process order: {str(e)}")
app.services.order_processing.OrderProcessingError: Failed to process order: Margin calculation returned invalid values
2025-06-03 00:12:44,360 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:13:06,912 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:13:13,210 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 00:13:13,211 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 00:13:13,211 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 00:13:13,211 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 00:13:13,213 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('10000.00000000'), 'margin': Decimal('0E-8')}
2025-06-03 00:13:13,213 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 00:13:13,223 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 00:13:13,224 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 00:13:13,225 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 00:13:13,225 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:13:13,225 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:13:13,226 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 00:13:13,244 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 00:13:13,245 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 00:13:13,245 - DEBUG - orders - Standard margin calculation for AUDCAD: 8.9000000000000000
2025-06-03 00:13:13,245 - DEBUG - orders - Converting margin from CAD to USD. Amount: 8.9000000000000000
2025-06-03 00:13:13,245 - DEBUG - orders - Attempting direct conversion using symbol: CADUSD
2025-06-03 00:13:13,247 - DEBUG - orders - No direct conversion rate found for CADUSD
2025-06-03 00:13:13,247 - DEBUG - orders - Attempting indirect conversion using symbol: USDCAD
2025-06-03 00:13:13,249 - DEBUG - orders - No indirect conversion rate found for USDCAD
2025-06-03 00:13:13,249 - DEBUG - orders - Calling _convert_to_usd with: amount=8.9000000000000000, from_currency=CAD, user_id=1, position_id=margin_calc_for_AUDCAD_BUY
2025-06-03 00:13:13,249 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd CALLED for 'Order Margin'. Amount: 8.9000000000000000, FromCurrency: CAD.
2025-06-03 00:13:13,250 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - Attempting direct with CADUSD. Rate: None
2025-06-03 00:13:13,252 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - Attempting indirect with USDCAD. Rate: None
2025-06-03 00:13:13,252 - WARNING - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - FAILED to find valid adjusted conversion rate from CAD to USD for Order Margin. Order Margin will remain 8.9000000000000000 CAD.
2025-06-03 00:13:13,252 - DEBUG - orders - Conversion result: 8.9000000000000000 CAD -> 8.90 USD
2025-06-03 00:13:13,253 - ERROR - orders - Failed to convert margin from CAD to USD for user 1, symbol AUDCAD. Original amount: 8.9000000000000000, Converted amount: 8.90
2025-06-03 00:13:13,253 - ERROR - orders - Margin calculation returned None values for user 1, symbol AUDCAD
2025-06-03 00:13:13,253 - ERROR - orders - Error in process_new_order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values
2025-06-03 00:13:13,256 - ERROR - orders - Error processing order for user 1: Failed to process order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 199, in process_new_order
    raise OrderProcessingError(f"Failed to process order: {str(e)}")
app.services.order_processing.OrderProcessingError: Failed to process order: Margin calculation returned invalid values
2025-06-03 00:15:29,954 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:29,954 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:29,954 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:32,170 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:32,171 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:32,171 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:34,360 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:34,360 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:34,360 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:36,689 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:36,689 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:36,689 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:38,995 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:38,995 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:38,995 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:41,303 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:41,303 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:41,303 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:43,508 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:43,508 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:43,509 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:45,847 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:45,847 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:45,847 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:48,117 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:48,117 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:48,117 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:50,444 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:50,444 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:50,445 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:52,762 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:52,763 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:52,763 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:55,113 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:55,113 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:55,113 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:57,270 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:57,270 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:57,270 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:59,539 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:59,539 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:59,539 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:01,868 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:01,868 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:01,868 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:04,117 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:04,117 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:04,117 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:06,514 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:06,514 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:06,514 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:08,808 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:08,808 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:08,808 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:11,148 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:11,148 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:11,148 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:13,391 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:13,391 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:13,391 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:15,643 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:15,643 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:15,644 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:17,932 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:17,932 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:17,932 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:20,236 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:20,236 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:20,236 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:22,632 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:22,632 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:22,632 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:24,862 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:24,862 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:24,862 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:27,237 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:27,237 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:27,237 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:29,482 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:29,482 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:29,482 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:31,727 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:31,727 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:31,727 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:34,090 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:34,090 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:34,090 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:36,449 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:36,449 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:36,449 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:38,620 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:38,620 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:38,620 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:40,930 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:40,930 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:40,930 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:43,192 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:43,192 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:43,192 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:45,516 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:45,516 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:45,516 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:47,801 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:47,801 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:47,801 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:50,105 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:50,105 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:50,105 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:52,522 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:52,522 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:52,523 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:54,700 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:54,700 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:54,700 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:57,026 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:57,026 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:57,026 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:59,414 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:59,414 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:59,415 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:01,622 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:01,622 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:01,622 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:03,978 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:03,978 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:03,978 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:06,246 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:06,246 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:06,246 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:08,507 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:08,507 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:08,507 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:10,858 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:10,858 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:10,858 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:13,190 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:13,190 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:13,190 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:15,416 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:15,416 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:15,416 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:17,718 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:17,718 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:17,718 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:19,993 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:19,993 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:19,993 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:22,341 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:22,342 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:22,342 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:24,623 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:24,623 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:24,623 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:26,893 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:26,893 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:26,893 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:31,021 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:18:05,858 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:05,858 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:05,858 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:05,971 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:05,971 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:05,971 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:08,334 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:08,335 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:08,335 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:10,669 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:10,669 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:10,669 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:12,379 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 00:18:12,379 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 00:18:12,379 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 00:18:12,379 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 00:18:12,380 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('100000.00000000'), 'margin': Decimal('0E-8')}
2025-06-03 00:18:12,380 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 00:18:12,388 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 00:18:12,388 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 00:18:12,389 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 00:18:12,389 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:18:12,389 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:18:12,389 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 00:18:12,403 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 00:18:12,405 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 00:18:12,406 - DEBUG - orders - Standard margin calculation for AUDCAD: 8.9000000000000000
2025-06-03 00:18:12,406 - DEBUG - orders - Converting margin from CAD to USD. Amount: 8.9000000000000000
2025-06-03 00:18:12,406 - DEBUG - orders - Attempting direct conversion using symbol: CADUSD
2025-06-03 00:18:12,407 - DEBUG - orders - No direct conversion rate found for CADUSD
2025-06-03 00:18:12,407 - DEBUG - orders - Attempting indirect conversion using symbol: USDCAD
2025-06-03 00:18:12,408 - DEBUG - orders - No indirect conversion rate found for USDCAD
2025-06-03 00:18:12,408 - DEBUG - orders - Calling _convert_to_usd with: amount=8.9000000000000000, from_currency=CAD, user_id=1, position_id=margin_calc_for_AUDCAD_BUY
2025-06-03 00:18:12,409 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd CALLED for 'Order Margin'. Amount: 8.9000000000000000, FromCurrency: CAD.
2025-06-03 00:18:12,409 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - Attempting direct with CADUSD. Rate: None
2025-06-03 00:18:12,410 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - Attempting indirect with USDCAD. Rate: None
2025-06-03 00:18:12,410 - WARNING - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - FAILED to find valid adjusted conversion rate from CAD to USD for Order Margin. Order Margin will remain 8.9000000000000000 CAD.
2025-06-03 00:18:12,410 - DEBUG - orders - Conversion result: 8.9000000000000000 CAD -> 8.90 USD
2025-06-03 00:18:12,410 - ERROR - orders - Failed to convert margin from CAD to USD for user 1, symbol AUDCAD. Original amount: 8.9000000000000000, Converted amount: 8.90
2025-06-03 00:18:12,411 - ERROR - orders - Margin calculation returned None values for user 1, symbol AUDCAD
2025-06-03 00:18:12,411 - ERROR - orders - Error in process_new_order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values
2025-06-03 00:18:12,415 - ERROR - orders - Error processing order for user 1: Failed to process order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 199, in process_new_order
    raise OrderProcessingError(f"Failed to process order: {str(e)}")
app.services.order_processing.OrderProcessingError: Failed to process order: Margin calculation returned invalid values
2025-06-03 00:18:12,963 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:12,963 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:12,963 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:15,290 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:15,290 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:15,290 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:17,569 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:17,569 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:17,569 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:19,765 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:19,765 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:19,765 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:22,021 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:22,021 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:22,021 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:24,426 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:24,426 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:24,427 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:26,657 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:26,657 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:26,657 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:28,928 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:28,928 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:28,928 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:31,240 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:31,240 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:31,240 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:33,527 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:33,527 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:33,528 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:35,848 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:35,848 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:35,848 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:38,130 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:38,130 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:38,130 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:40,475 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:40,475 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:40,475 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:42,821 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:42,822 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:42,822 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:45,088 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:45,088 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:45,088 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:47,324 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:47,324 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:47,324 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:49,630 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:49,630 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:49,630 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:51,987 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:51,987 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:51,988 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:54,417 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:54,417 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:54,417 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:56,702 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:56,702 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:56,702 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:58,985 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:58,985 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:58,985 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:19:01,295 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:19:01,295 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:19:01,295 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:19:03,576 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:19:03,576 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:19:03,576 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:19:07,928 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:19:24,572 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 00:19:24,572 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 00:19:24,572 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 00:19:24,572 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 00:19:24,573 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('100000.00000000'), 'margin': Decimal('0E-8')}
2025-06-03 00:19:24,573 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 00:19:24,579 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 00:19:24,579 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 00:19:24,579 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 00:19:24,579 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:19:24,580 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:19:24,580 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 00:19:24,592 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 00:19:24,592 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 00:19:24,592 - DEBUG - orders - Standard margin calculation for AUDCAD: 8.9000000000000000
2025-06-03 00:19:24,593 - DEBUG - orders - Converting margin from CAD to USD. Amount: 8.9000000000000000
2025-06-03 00:19:24,593 - DEBUG - orders - Attempting direct conversion using symbol: CADUSD
2025-06-03 00:19:24,593 - DEBUG - orders - No direct conversion rate found for CADUSD
2025-06-03 00:19:24,593 - DEBUG - orders - Attempting indirect conversion using symbol: USDCAD
2025-06-03 00:19:24,594 - DEBUG - orders - No indirect conversion rate found for USDCAD
2025-06-03 00:19:24,594 - DEBUG - orders - Calling _convert_to_usd with: amount=8.9000000000000000, from_currency=CAD, user_id=1, position_id=margin_calc_for_AUDCAD_BUY
2025-06-03 00:19:24,594 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd CALLED for 'Order Margin'. Amount: 8.9000000000000000, FromCurrency: CAD.
2025-06-03 00:19:24,594 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - Attempting direct with CADUSD. Rate: None
2025-06-03 00:19:24,594 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - Attempting indirect with USDCAD. Rate: None
2025-06-03 00:19:24,594 - WARNING - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - FAILED to find valid adjusted conversion rate from CAD to USD for Order Margin. Order Margin will remain 8.9000000000000000 CAD.
2025-06-03 00:19:24,594 - DEBUG - orders - Conversion result: 8.9000000000000000 CAD -> 8.90 USD
2025-06-03 00:19:24,594 - ERROR - orders - Failed to convert margin from CAD to USD for user 1, symbol AUDCAD. Original amount: 8.9000000000000000, Converted amount: 8.90
2025-06-03 00:19:24,595 - ERROR - orders - Margin calculation returned None values for user 1, symbol AUDCAD
2025-06-03 00:19:24,595 - ERROR - orders - Error in process_new_order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values
2025-06-03 00:19:24,596 - ERROR - orders - Error processing order for user 1: Failed to process order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 199, in process_new_order
    raise OrderProcessingError(f"Failed to process order: {str(e)}")
app.services.order_processing.OrderProcessingError: Failed to process order: Margin calculation returned invalid values
2025-06-03 00:22:41,982 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:23:48,299 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 00:23:48,299 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 00:23:48,300 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 00:23:48,300 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 00:23:48,303 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('100000.00000000'), 'margin': Decimal('0E-8')}
2025-06-03 00:23:48,303 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 00:23:48,319 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 00:23:48,319 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 00:23:48,321 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 00:23:48,321 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:23:48,321 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:23:48,321 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 00:23:48,361 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 00:23:48,361 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 00:23:48,362 - DEBUG - orders - Standard margin calculation for AUDCAD: 8.9000000000000000
2025-06-03 00:23:48,362 - DEBUG - orders - Converting margin from CAD to USD. Amount: 8.9000000000000000
2025-06-03 00:23:48,362 - DEBUG - orders - Attempting direct conversion using symbol: CADUSD
2025-06-03 00:23:48,365 - DEBUG - orders - No direct conversion rate found for CADUSD
2025-06-03 00:23:48,366 - DEBUG - orders - Attempting indirect conversion using symbol: USDCAD
2025-06-03 00:23:48,368 - DEBUG - orders - No indirect conversion rate found for USDCAD
2025-06-03 00:23:48,368 - DEBUG - orders - Calling _convert_to_usd with: amount=8.9000000000000000, from_currency=CAD, user_id=1, position_id=margin_calc_for_AUDCAD_BUY
2025-06-03 00:23:48,368 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd CALLED for 'Order Margin'. Amount: 8.9000000000000000, FromCurrency: CAD.
2025-06-03 00:23:48,370 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - Attempting direct with CADUSD. Rate: None
2025-06-03 00:23:48,371 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - Attempting indirect with USDCAD. Rate: None
2025-06-03 00:23:48,371 - WARNING - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - FAILED to find valid adjusted conversion rate from CAD to USD for Order Margin. Order Margin will remain 8.9000000000000000 CAD.
2025-06-03 00:23:48,371 - DEBUG - orders - Conversion result: 8.9000000000000000 CAD -> 8.90 USD
2025-06-03 00:23:48,371 - ERROR - orders - Failed to convert margin from CAD to USD for user 1, symbol AUDCAD. Original amount: 8.9000000000000000, Converted amount: 8.90
2025-06-03 00:23:48,371 - ERROR - orders - Margin calculation returned None values for user 1, symbol AUDCAD
2025-06-03 00:23:48,371 - ERROR - orders - Error in process_new_order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values
2025-06-03 00:23:48,373 - ERROR - orders - Error processing order for user 1: Failed to process order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 199, in process_new_order
    raise OrderProcessingError(f"Failed to process order: {str(e)}")
app.services.order_processing.OrderProcessingError: Failed to process order: Margin calculation returned invalid values
2025-06-03 00:25:39,541 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:26:39,876 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 00:26:39,876 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 00:26:39,876 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 00:26:39,876 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 00:26:39,877 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('100000.00000000'), 'margin': Decimal('0E-8')}
2025-06-03 00:26:39,877 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 00:26:39,882 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 00:26:39,882 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 00:26:39,883 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 00:26:39,883 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:26:39,883 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:26:39,883 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 00:26:39,895 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 00:26:39,895 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 00:26:39,895 - DEBUG - orders - Standard margin calculation for AUDCAD: 8.9000000000000000
2025-06-03 00:26:39,895 - WARNING - orders - TEMPORARILY SKIPPING CURRENCY CONVERSION FROM CAD TO USD. Using original amount: 8.9000000000000000
2025-06-03 00:26:39,895 - INFO - orders - Margin calculated for user 1, symbol AUDCAD, order_type BUY: Margin_USD=8.90, PriceBasisForMargin=0.89, AdjustedExecPrice/LimitPrice=0.89000, Contract_Units=1000.00000000, SymbolType=1
2025-06-03 00:26:39,951 - INFO - orders - Successfully created order for user 1: 2274538506
2025-06-03 00:26:51,747 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:26:51,747 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:26:51,748 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:26:53,773 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:26:53,773 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:26:53,781 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:26:56,114 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:26:56,149 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:26:56,154 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:26:58,353 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:26:58,353 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:26:58,358 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:00,695 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:00,695 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:00,698 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:02,922 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:02,922 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:02,925 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:05,324 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:05,325 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:05,330 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:07,655 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:07,655 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:07,661 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:09,917 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:09,917 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:09,923 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:12,209 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:12,209 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:12,216 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:14,585 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:14,585 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:14,591 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:16,799 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:16,799 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:16,803 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:19,070 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:19,071 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:19,075 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:21,357 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:21,357 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:21,360 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:23,587 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:23,587 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:23,589 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:25,918 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:25,918 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:25,920 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:28,266 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:28,267 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:28,268 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:30,578 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:30,578 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:30,580 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:33,004 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:33,004 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:33,011 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:35,219 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:35,219 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:35,222 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:37,482 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:37,483 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:37,486 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:39,730 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:39,731 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:39,733 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:41,978 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:41,979 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:41,980 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:44,305 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:44,305 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:44,307 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:46,605 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:46,605 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:46,607 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:48,993 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:48,993 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:48,995 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:51,214 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:51,214 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:51,217 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:53,500 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:53,500 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:53,502 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:55,862 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:55,862 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:55,864 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:58,105 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:58,105 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:58,106 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:00,363 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:00,363 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:00,364 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:02,718 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:02,718 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:02,720 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:04,968 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:04,969 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:04,970 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:07,317 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:07,317 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:07,319 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:09,571 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:09,571 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:09,573 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:11,915 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:11,915 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:11,918 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:14,305 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:14,305 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:14,307 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:16,475 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:16,476 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:16,478 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:18,896 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:18,896 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:18,898 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:21,078 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:21,078 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:21,080 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:23,392 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:23,392 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:23,395 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:25,743 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:25,743 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:25,745 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:28,133 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:28,133 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:28,136 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:30,371 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:30,371 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:30,373 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:32,587 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:32,587 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:32,589 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:34,955 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:34,956 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:34,957 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:37,213 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:37,213 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:37,214 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:39,480 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:39,480 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:39,482 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:41,845 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:41,845 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:41,847 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:44,134 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:44,134 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:44,136 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:46,428 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:46,428 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:46,430 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:48,791 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:48,791 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:48,793 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:51,049 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:51,049 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:51,052 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:53,427 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:53,427 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:53,429 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:55,629 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:55,629 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:55,631 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:57,931 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:57,931 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:57,933 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:00,241 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:00,241 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:00,243 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:02,541 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:02,541 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:02,544 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:04,830 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:04,830 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:04,832 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:07,130 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:07,130 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:07,132 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:09,470 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:09,470 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:09,472 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:11,706 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:11,706 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:11,708 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:14,089 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:14,089 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:14,091 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:16,321 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:16,321 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:16,323 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:18,593 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:18,593 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:18,597 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:20,890 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:20,890 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:20,892 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:23,314 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:23,314 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:23,316 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:25,558 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:25,558 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:25,560 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:27,806 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:27,806 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:27,808 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:30,153 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:30,153 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:30,155 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:32,413 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:32,413 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:32,415 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:34,783 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:34,783 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:34,785 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:37,022 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:37,022 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:37,024 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:39,294 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:39,294 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:39,296 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:41,619 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:41,619 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:41,622 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:43,916 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:43,916 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:43,918 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:46,246 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:46,246 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:46,249 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:48,537 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:48,537 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:48,539 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:50,845 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:50,845 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:50,848 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:53,153 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:53,153 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:53,155 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:55,436 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:55,436 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:55,438 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:57,741 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:57,741 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:57,746 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:00,716 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:00,717 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:00,719 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:02,390 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:02,390 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:02,392 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:04,735 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:04,735 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:04,737 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:07,024 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:07,024 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:07,026 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:09,330 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:09,331 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:09,333 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:11,638 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:11,638 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:11,639 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:13,922 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:13,922 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:13,924 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:16,216 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:16,216 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:16,219 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:18,526 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:18,527 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:18,529 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:22,817 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:30:52,907 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:52,907 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:30:52,907 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:52,974 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:52,974 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:52,979 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:55,368 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:55,369 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:55,372 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:57,667 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:57,667 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:57,672 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:00,008 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:00,009 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:00,015 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:02,249 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:02,249 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:02,253 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:04,641 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:04,642 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:04,647 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:06,854 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:06,854 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:06,858 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:09,242 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:09,242 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:09,248 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:11,449 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:11,449 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:11,452 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:13,996 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:13,996 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:14,002 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:16,135 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:16,135 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:16,138 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:18,419 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:18,419 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:18,425 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:20,681 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:20,681 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:20,685 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:22,914 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:22,914 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:22,917 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:25,258 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:25,258 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:25,260 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:27,491 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:27,491 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:27,493 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:29,918 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:29,918 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:29,920 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:32,102 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:32,102 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:32,104 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:34,454 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:34,454 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:34,456 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:36,704 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:36,704 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:36,706 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:39,069 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:39,069 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:39,072 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:41,312 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:41,312 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:41,314 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:43,690 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:43,690 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:43,691 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:45,933 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:45,933 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:45,935 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:48,221 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:48,221 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:48,222 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:50,527 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:50,527 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:50,529 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:52,912 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:52,912 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:52,914 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:55,176 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:55,176 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:55,178 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:57,430 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:57,430 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:57,432 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:59,708 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:59,708 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:59,710 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:02,130 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:02,130 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:02,131 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:04,342 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:04,342 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:04,344 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:06,643 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:06,643 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:06,646 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:08,913 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:08,913 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:08,915 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:11,401 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:11,401 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:11,402 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:13,612 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:13,612 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:13,614 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:15,950 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:15,950 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:15,952 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:18,302 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:18,302 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:18,304 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:20,560 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:20,560 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:20,562 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:22,801 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:22,801 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:22,802 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:25,145 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:25,145 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:25,147 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:27,354 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:27,354 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:27,356 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:29,762 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:29,762 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:29,764 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:31,992 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:31,992 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:31,994 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:34,306 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:34,306 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:34,308 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:36,634 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:36,634 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:36,636 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:38,976 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:38,976 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:38,977 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:41,187 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:41,187 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:41,189 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:43,497 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:43,497 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:43,499 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:45,749 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:45,749 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:45,752 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:48,078 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:48,078 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:48,080 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:50,404 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:50,404 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:50,406 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:52,688 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:52,688 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:52,690 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:55,035 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:55,036 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:55,037 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:57,323 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:57,323 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:57,326 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:59,627 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:59,628 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:59,632 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:33:01,876 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:33:01,876 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:33:01,878 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:33:04,208 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:33:04,208 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:33:04,210 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:33:06,541 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:33:06,541 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:33:06,544 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:33:08,828 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:33:08,828 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:33:08,832 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:33:11,128 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:33:11,128 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:33:11,131 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:33:17,830 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:34:41,898 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:34:41,898 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:34:41,898 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:34:43,281 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:34:43,281 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866400000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.36000000000000000000000000
2025-06-03 00:34:43,281 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:34:43,286 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:34:45,716 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:34:45,716 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866400000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.36000000000000000000000000
2025-06-03 00:34:45,716 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:34:45,720 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:34:47,893 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:34:47,893 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866400000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.36000000000000000000000000
2025-06-03 00:34:47,894 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:34:47,899 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:34:50,179 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:34:50,179 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866400000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.36000000000000000000000000
2025-06-03 00:34:50,179 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:34:50,184 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:34:52,533 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:34:52,533 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866400000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.36000000000000000000000000
2025-06-03 00:34:52,533 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:34:52,537 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:34:54,839 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:34:54,840 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866000000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.40000000000000000000000000
2025-06-03 00:34:54,840 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:34:54,844 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:34:57,070 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:34:57,071 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8865900000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.41000000000000000000000000
2025-06-03 00:34:57,071 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:34:57,076 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:34:59,514 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:34:59,515 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866100000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.39000000000000000000000000
2025-06-03 00:34:59,515 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:34:59,519 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:01,649 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:01,649 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866000000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.40000000000000000000000000
2025-06-03 00:35:01,649 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:01,653 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:04,049 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:04,049 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866400000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.36000000000000000000000000
2025-06-03 00:35:04,049 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:04,054 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:06,240 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:06,240 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866400000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.36000000000000000000000000
2025-06-03 00:35:06,241 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:06,245 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:08,494 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:08,494 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866000000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.40000000000000000000000000
2025-06-03 00:35:08,495 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:08,496 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:10,802 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:10,802 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8865900000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.41000000000000000000000000
2025-06-03 00:35:10,802 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:10,805 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:13,111 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:13,111 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:13,111 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:13,113 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:15,567 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:15,567 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:15,567 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:15,569 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:17,699 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:17,699 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:17,699 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:17,701 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:20,063 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:20,063 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866400000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.36000000000000000000000000
2025-06-03 00:35:20,063 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:20,065 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:22,314 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:22,314 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866100000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.39000000000000000000000000
2025-06-03 00:35:22,314 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:22,316 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:24,601 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:24,601 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:24,601 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:24,604 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:26,893 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:26,893 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:26,893 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:26,895 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:29,210 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:29,210 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866400000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.36000000000000000000000000
2025-06-03 00:35:29,210 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:29,212 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:31,525 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:31,525 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:31,526 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:31,528 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:33,809 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:33,809 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:33,809 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:33,811 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:36,131 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:36,131 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:36,131 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:36,133 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:38,398 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:38,399 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:38,399 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:38,401 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:40,687 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:40,688 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8865800000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.42000000000000000000000000
2025-06-03 00:35:40,688 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:40,690 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:43,004 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:43,004 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:43,004 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:43,006 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:45,299 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:45,299 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:45,299 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:45,301 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:47,583 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:47,583 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:47,583 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:47,586 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:49,899 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:49,899 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866000000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.40000000000000000000000000
2025-06-03 00:35:49,900 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:49,902 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:52,197 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:52,197 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866400000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.36000000000000000000000000
2025-06-03 00:35:52,197 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:52,201 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:54,484 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:54,484 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8865800000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.42000000000000000000000000
2025-06-03 00:35:54,484 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:54,486 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:56,767 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:56,767 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:56,767 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:56,768 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:59,083 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:59,083 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:59,083 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:59,086 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:36:05,441 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:38:08,138 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:38:10,534 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:10,534 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:38:10,534 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:12,684 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:12,684 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:38:12,684 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:14,995 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:14,995 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88657 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.430000000000000000000000
2025-06-03 00:38:14,995 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:15,001 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:17,293 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:17,293 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88657 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.430000000000000000000000
2025-06-03 00:38:17,294 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:17,296 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:19,661 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:19,661 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88659 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.410000000000000000000000
2025-06-03 00:38:19,661 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:19,666 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:21,957 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:21,957 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88658 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.420000000000000000000000
2025-06-03 00:38:21,957 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:21,962 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:24,236 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:24,237 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88657 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.430000000000000000000000
2025-06-03 00:38:24,237 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:24,241 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:26,563 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:26,563 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88661 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.390000000000000000000000
2025-06-03 00:38:26,563 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:26,569 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:28,885 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:28,885 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:38:28,885 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:31,192 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:31,192 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88659 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.410000000000000000000000
2025-06-03 00:38:31,192 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:31,195 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:33,438 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:33,438 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88662 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.380000000000000000000000
2025-06-03 00:38:33,438 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:33,440 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:35,708 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:35,708 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.400000000000000000000000
2025-06-03 00:38:35,708 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:35,710 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:38,020 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:38,020 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.400000000000000000000000
2025-06-03 00:38:38,020 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:38,024 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:40,313 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:40,313 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88666 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.340000000000000000000000
2025-06-03 00:38:40,313 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:40,317 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:42,679 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:42,679 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88661 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.390000000000000000000000
2025-06-03 00:38:42,679 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:42,681 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:45,060 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:45,060 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88657 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.430000000000000000000000
2025-06-03 00:38:45,060 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:45,065 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:47,251 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:47,252 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88662 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.380000000000000000000000
2025-06-03 00:38:47,252 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:47,257 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:49,580 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:49,580 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88657 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.430000000000000000000000
2025-06-03 00:38:49,580 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:49,585 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:51,935 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:51,936 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88662 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.380000000000000000000000
2025-06-03 00:38:51,936 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:51,941 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:54,146 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:54,146 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88657 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.430000000000000000000000
2025-06-03 00:38:54,146 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:54,150 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:56,492 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:56,492 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88663 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.370000000000000000000000
2025-06-03 00:38:56,492 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:56,497 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:58,775 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:58,776 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88657 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.430000000000000000000000
2025-06-03 00:38:58,776 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:58,781 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:01,045 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:01,045 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88662 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.380000000000000000000000
2025-06-03 00:39:01,045 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:01,050 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:03,350 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:03,351 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88657 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.430000000000000000000000
2025-06-03 00:39:03,351 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:03,352 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:05,632 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:05,632 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88655 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.450000000000000000000000
2025-06-03 00:39:05,632 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:05,638 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:07,911 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:07,911 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88658 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.420000000000000000000000
2025-06-03 00:39:07,911 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:07,913 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:10,225 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:10,225 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88657 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.430000000000000000000000
2025-06-03 00:39:10,225 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:10,228 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:12,587 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:12,587 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88658 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.420000000000000000000000
2025-06-03 00:39:12,587 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:12,589 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:14,926 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:14,926 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88655 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.450000000000000000000000
2025-06-03 00:39:14,926 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:14,928 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:17,157 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:17,157 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88654 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.460000000000000000000000
2025-06-03 00:39:17,157 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:17,160 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:19,457 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:19,457 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88658 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.420000000000000000000000
2025-06-03 00:39:19,457 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:19,459 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:21,779 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:21,779 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:39:21,779 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:24,079 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:24,079 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88663 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.370000000000000000000000
2025-06-03 00:39:24,080 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:24,084 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:26,372 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:26,372 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88664 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.360000000000000000000000
2025-06-03 00:39:26,372 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:26,375 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:28,682 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:28,682 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88664 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.360000000000000000000000
2025-06-03 00:39:28,682 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:28,687 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:31,109 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:31,109 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88662 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.380000000000000000000000
2025-06-03 00:39:31,109 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:31,111 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:33,350 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:33,350 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88666 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.340000000000000000000000
2025-06-03 00:39:33,350 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:33,353 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:35,581 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:35,581 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88661 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.390000000000000000000000
2025-06-03 00:39:35,581 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:35,583 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:37,872 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:37,872 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88663 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.370000000000000000000000
2025-06-03 00:39:37,872 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:37,874 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:40,209 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:40,209 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:39:40,209 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:42,466 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:42,466 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88662 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.380000000000000000000000
2025-06-03 00:39:42,466 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:42,469 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:44,804 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:44,804 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:39:44,804 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:47,094 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:47,094 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:39:47,094 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:49,408 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:49,408 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88664 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.360000000000000000000000
2025-06-03 00:39:49,408 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:49,411 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:51,698 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:51,699 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88665 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.350000000000000000000000
2025-06-03 00:39:51,699 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:51,702 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:53,986 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:53,986 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88662 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.380000000000000000000000
2025-06-03 00:39:53,986 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:53,989 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:56,323 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:56,323 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88662 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.380000000000000000000000
2025-06-03 00:39:56,323 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:56,325 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:58,605 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:58,606 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88663 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.370000000000000000000000
2025-06-03 00:39:58,606 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:58,608 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:00,906 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:00,906 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88658 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.420000000000000000000000
2025-06-03 00:40:00,906 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:00,908 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:03,200 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:03,200 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88654 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.460000000000000000000000
2025-06-03 00:40:03,201 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:03,204 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:05,484 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:05,484 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88668 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.320000000000000000000000
2025-06-03 00:40:05,484 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:05,488 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:07,779 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:07,779 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88654 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.460000000000000000000000
2025-06-03 00:40:07,779 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:07,781 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:10,066 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:10,066 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88664 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.360000000000000000000000
2025-06-03 00:40:10,066 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:10,070 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:12,412 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:12,412 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.300000000000000000000000
2025-06-03 00:40:12,412 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:12,414 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:14,684 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:14,684 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:40:14,684 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:18,953 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:40:41,424 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:41,424 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:40:41,424 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:42,283 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:42,283 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866000000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.40000000000000000000000000
2025-06-03 00:40:42,284 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:42,292 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:44,670 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:44,670 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866800000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.32000000000000000000000000
2025-06-03 00:40:44,670 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:44,674 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:46,912 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:46,913 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866800000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.32000000000000000000000000
2025-06-03 00:40:46,913 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:46,917 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:49,296 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:49,296 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866300000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.37000000000000000000000000
2025-06-03 00:40:49,296 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:49,310 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:51,633 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:51,633 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867000000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.30000000000000000000000000
2025-06-03 00:40:51,633 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:51,639 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:53,893 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:53,893 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866900000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.31000000000000000000000000
2025-06-03 00:40:53,894 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:53,900 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:56,211 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:56,211 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867000000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.30000000000000000000000000
2025-06-03 00:40:56,211 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:56,215 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:58,455 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:58,456 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867000000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.30000000000000000000000000
2025-06-03 00:40:58,456 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:58,462 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:00,840 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:00,840 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866900000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.31000000000000000000000000
2025-06-03 00:41:00,840 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:00,845 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:03,069 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:03,069 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867000000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.30000000000000000000000000
2025-06-03 00:41:03,069 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:03,071 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:05,311 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:05,311 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867100000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.29000000000000000000000000
2025-06-03 00:41:05,311 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:05,313 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:07,681 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:07,681 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866800000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.32000000000000000000000000
2025-06-03 00:41:07,681 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:07,683 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:09,895 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:09,895 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866800000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.32000000000000000000000000
2025-06-03 00:41:09,895 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:09,897 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:12,276 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:12,276 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.28000000000000000000000000
2025-06-03 00:41:12,276 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:12,278 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:14,620 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:14,620 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866600000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.34000000000000000000000000
2025-06-03 00:41:14,620 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:14,622 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:16,872 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:16,872 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866600000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.34000000000000000000000000
2025-06-03 00:41:16,872 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:16,874 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:19,191 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:19,191 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866800000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.32000000000000000000000000
2025-06-03 00:41:19,191 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:19,193 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:21,447 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:21,447 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.28000000000000000000000000
2025-06-03 00:41:21,447 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:21,449 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:23,704 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:23,704 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866900000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.31000000000000000000000000
2025-06-03 00:41:23,704 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:23,706 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:26,023 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:26,024 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867500000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.25000000000000000000000000
2025-06-03 00:41:26,024 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:26,025 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:28,299 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:28,299 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867100000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.29000000000000000000000000
2025-06-03 00:41:28,299 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:28,301 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:30,607 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:30,607 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.28000000000000000000000000
2025-06-03 00:41:30,607 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:30,610 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:32,930 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:32,930 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867100000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.29000000000000000000000000
2025-06-03 00:41:32,930 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:32,934 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:35,204 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:35,204 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867500000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.25000000000000000000000000
2025-06-03 00:41:35,204 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:35,207 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:37,518 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:37,519 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.28000000000000000000000000
2025-06-03 00:41:37,519 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:37,523 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:39,806 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:39,806 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867500000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.25000000000000000000000000
2025-06-03 00:41:39,806 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:39,810 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:42,107 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:42,107 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867400000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.26000000000000000000000000
2025-06-03 00:41:42,107 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:42,110 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:44,412 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:44,412 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867800000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.22000000000000000000000000
2025-06-03 00:41:44,412 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:44,414 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:46,718 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:46,719 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867500000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.25000000000000000000000000
2025-06-03 00:41:46,719 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:46,723 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:49,022 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:49,022 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8868100000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.19000000000000000000000000
2025-06-03 00:41:49,022 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:49,024 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:51,327 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:51,327 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867900000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.21000000000000000000000000
2025-06-03 00:41:51,327 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:51,329 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:53,627 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:53,627 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.28000000000000000000000000
2025-06-03 00:41:53,627 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:53,631 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:55,914 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:55,914 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867900000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.21000000000000000000000000
2025-06-03 00:41:55,914 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:55,917 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:58,182 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:58,182 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867900000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.21000000000000000000000000
2025-06-03 00:41:58,182 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:58,187 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:42:00,540 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:42:00,540 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867900000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.21000000000000000000000000
2025-06-03 00:42:00,540 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:42:00,543 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:42:02,930 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:42:02,930 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867900000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.21000000000000000000000000
2025-06-03 00:42:02,930 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:42:02,931 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:42:05,342 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:42:05,342 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8868100000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.19000000000000000000000000
2025-06-03 00:42:05,342 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:42:05,345 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:42:07,536 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:42:07,536 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8868100000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.19000000000000000000000000
2025-06-03 00:42:07,536 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:42:07,539 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:42:09,846 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:42:09,846 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8868100000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.19000000000000000000000000
2025-06-03 00:42:09,846 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:42:09,849 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:42:13,911 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:42:36,867 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:42:57,603 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:43:16,293 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:55:11,821 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:55:34,428 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:00:52,534 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:11:09,314 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:11:46,237 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:14:13,423 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:15:15,095 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:19:12,630 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:19:35,433 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:21:14,263 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:22:04,496 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:25:05,881 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:25:44,363 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:31:05,951 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:32:03,946 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:32:35,636 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:33:48,596 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 01:33:48,596 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 01:33:48,597 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 01:33:48,597 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 01:33:48,599 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('100000.00000000'), 'margin': Decimal('8.90000000')}
2025-06-03 01:33:48,599 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 01:33:48,609 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 01:33:48,610 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 01:33:48,612 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 01:33:48,612 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 01:33:48,612 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 01:33:48,612 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 01:33:48,636 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 01:33:48,637 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 01:33:48,639 - ERROR - orders - Unexpected error during margin calculation for user 1, symbol AUDCAD, order_type BUY: object dict can't be used in 'await' expression
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\margin_calculator.py", line 210, in calculate_single_order_margin
    raw_market_data = await get_latest_market_data()
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: object dict can't be used in 'await' expression
2025-06-03 01:33:48,642 - ERROR - orders - Margin calculation returned None values for user 1, symbol AUDCAD
2025-06-03 01:33:48,643 - ERROR - orders - Error in process_new_order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values
2025-06-03 01:33:48,654 - ERROR - orders - Error processing order for user 1: Failed to process order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 199, in process_new_order
    raise OrderProcessingError(f"Failed to process order: {str(e)}")
app.services.order_processing.OrderProcessingError: Failed to process order: Margin calculation returned invalid values
2025-06-03 01:37:07,906 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:37:21,444 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:37:27,847 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 01:37:27,848 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 01:37:27,848 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 01:37:27,849 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 01:37:27,851 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('100000.00000000'), 'margin': Decimal('8.90000000')}
2025-06-03 01:37:27,852 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 01:37:27,870 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 01:37:27,871 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 01:37:27,873 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 01:37:27,873 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 01:37:27,874 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 01:37:27,874 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 01:37:27,923 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 01:37:27,923 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 01:37:27,924 - ERROR - orders - Unexpected error during margin calculation for user 1, symbol AUDCAD, order_type BUY: object dict can't be used in 'await' expression
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\margin_calculator.py", line 210, in calculate_single_order_margin
    raw_market_data = await get_latest_market_data()
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: object dict can't be used in 'await' expression
2025-06-03 01:37:27,932 - ERROR - orders - Margin calculation returned None values for user 1, symbol AUDCAD
2025-06-03 01:37:27,933 - ERROR - orders - Error in process_new_order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values
2025-06-03 01:37:27,943 - ERROR - orders - Error processing order for user 1: Failed to process order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 199, in process_new_order
    raise OrderProcessingError(f"Failed to process order: {str(e)}")
app.services.order_processing.OrderProcessingError: Failed to process order: Margin calculation returned invalid values
2025-06-03 01:45:02,585 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:46:40,801 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 01:46:40,801 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 01:46:40,801 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 01:46:40,802 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 01:46:40,803 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('100000.00000000'), 'margin': Decimal('8.90000000')}
2025-06-03 01:46:40,803 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 01:46:40,812 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 01:46:40,812 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 01:46:40,814 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 01:46:40,814 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 01:46:40,814 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 01:46:40,814 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 01:46:40,824 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 01:46:40,825 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 01:46:40,825 - ERROR - orders - Unexpected error during margin calculation for user 1, symbol AUDCAD, order_type BUY: object dict can't be used in 'await' expression
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\margin_calculator.py", line 210, in calculate_single_order_margin
    raw_market_data = await get_latest_market_data()
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: object dict can't be used in 'await' expression
2025-06-03 01:46:40,826 - ERROR - orders - Margin calculation returned None values for user 1, symbol AUDCAD
2025-06-03 01:46:40,826 - ERROR - orders - Error in process_new_order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values
2025-06-03 01:46:40,827 - ERROR - orders - Error processing order for user 1: Failed to process order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 190, in process_new_order
    raise OrderProcessingError(f"Failed to process order: {str(e)}")
app.services.order_processing.OrderProcessingError: Failed to process order: Margin calculation returned invalid values
2025-06-03 02:10:11,537 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 02:10:11,537 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 02:10:11,537 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 02:10:11,537 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 02:10:11,538 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('100000.00000000'), 'margin': Decimal('8.90000000')}
2025-06-03 02:10:11,539 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 02:10:11,546 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 02:10:11,546 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 02:10:11,548 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 02:10:11,548 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 02:10:11,548 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 02:10:11,548 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 02:10:11,554 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 02:10:11,555 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 02:10:11,555 - ERROR - orders - Unexpected error during margin calculation for user 1, symbol AUDCAD, order_type BUY: object dict can't be used in 'await' expression
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\margin_calculator.py", line 210, in calculate_single_order_margin
    raw_market_data = await get_latest_market_data()
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: object dict can't be used in 'await' expression
2025-06-03 02:10:11,556 - ERROR - orders - Margin calculation returned None values for user 1, symbol AUDCAD
2025-06-03 02:10:11,556 - ERROR - orders - Error in process_new_order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values
2025-06-03 02:10:11,557 - ERROR - orders - Error processing order for user 1: Failed to process order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 190, in process_new_order
    raise OrderProcessingError(f"Failed to process order: {str(e)}")
app.services.order_processing.OrderProcessingError: Failed to process order: Margin calculation returned invalid values
2025-06-03 02:12:10,651 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:13:43,021 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:17:45,091 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:18:17,052 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:18:35,377 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:19:44,914 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 02:19:44,915 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 02:19:44,915 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 02:19:44,915 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 02:19:44,917 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('100000.00000000'), 'margin': Decimal('8.90000000')}
2025-06-03 02:19:44,917 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 02:19:44,926 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 02:19:44,926 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 02:19:44,927 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 02:19:44,927 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 02:19:44,927 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 02:19:44,927 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 02:19:44,937 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 02:19:44,938 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 02:19:44,938 - ERROR - orders - Unexpected error during margin calculation for user 1, symbol AUDCAD, order_type BUY: object dict can't be used in 'await' expression
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\margin_calculator.py", line 210, in calculate_single_order_margin
    raw_market_data = await get_latest_market_data()
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: object dict can't be used in 'await' expression
2025-06-03 02:19:44,939 - ERROR - orders - Margin calculation returned None values for user 1, symbol AUDCAD
2025-06-03 02:19:44,939 - ERROR - orders - Error in process_new_order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values
2025-06-03 02:19:44,941 - ERROR - orders - Error processing order for user 1: Failed to process order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 190, in process_new_order
    raise OrderProcessingError(f"Failed to process order: {str(e)}")
app.services.order_processing.OrderProcessingError: Failed to process order: Margin calculation returned invalid values
2025-06-03 02:21:19,829 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:21:41,870 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:22:00,366 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:22:27,811 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:22:37,428 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 02:22:37,428 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 02:22:37,428 - ERROR - orders - Error processing order for user 1: process_new_order() got an unexpected keyword argument 'user'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                      ~~~~~~~~~~~~~~~~~^
        db=db,
        ^^^^^^
    ...<5 lines>...
        get_user_by_id_with_lock_fn=get_user_by_id_with_lock_fn
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: process_new_order() got an unexpected keyword argument 'user'
2025-06-03 02:23:33,001 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:23:55,785 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:24:02,804 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:24:31,523 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 02:24:31,523 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 02:24:31,523 - ERROR - orders - Error processing order for user 1: process_new_order() got an unexpected keyword argument 'user'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                      ~~~~~~~~~~~~~~~~~^
        db=db,
        ^^^^^^
    ...<5 lines>...
        get_user_by_id_with_lock_fn=get_user_by_id_with_lock_fn
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: process_new_order() got an unexpected keyword argument 'user'
2025-06-03 02:38:54,655 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:39:08,925 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 02:39:08,925 - ERROR - orders - Error processing new order: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 99, in process_new_order
    user_data = await get_user_data_cache(redis_client, user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined
2025-06-03 02:39:08,933 - ERROR - orders - Order processing error: name 'get_user_data_cache' is not defined
2025-06-03 02:41:08,886 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:42:11,837 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 02:42:11,837 - ERROR - orders - Error processing new order: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 99, in process_new_order
    user_data = await get_user_data_cache(redis_client, user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined
2025-06-03 02:42:11,843 - ERROR - orders - Order processing error: name 'get_user_data_cache' is not defined
2025-06-03 02:42:40,294 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 02:42:40,294 - ERROR - orders - Error processing new order: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 99, in process_new_order
    user_data = await get_user_data_cache(redis_client, user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined
2025-06-03 02:42:40,303 - ERROR - orders - Order processing error: name 'get_user_data_cache' is not defined
2025-06-03 02:43:47,012 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:44:03,033 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:44:06,066 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 02:44:06,067 - ERROR - orders - Error processing new order: name 'get_latest_market_data' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 105, in process_new_order
    raw_market_data = await get_latest_market_data()
                            ^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_latest_market_data' is not defined
2025-06-03 02:44:06,069 - ERROR - orders - Order processing error: name 'get_latest_market_data' is not defined
2025-06-03 02:48:07,424 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:48:57,443 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 02:48:57,773 - ERROR - orders - Error processing new order: name 'get_group_symbol_settings_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 113, in process_new_order
    group_settings = await get_group_symbol_settings_cache(redis_client, group_name, symbol)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_group_symbol_settings_cache' is not defined
2025-06-03 02:48:57,785 - ERROR - orders - Order processing error: name 'get_group_symbol_settings_cache' is not defined
2025-06-03 02:49:27,201 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:50:30,804 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 02:50:31,172 - ERROR - orders - Error processing new order: name 'set_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 158, in process_new_order
    await set_user_data_cache(redis_client, user_id, {
          ^^^^^^^^^^^^^^^^^^^
NameError: name 'set_user_data_cache' is not defined. Did you mean: 'get_user_data_cache'?
2025-06-03 02:50:31,175 - ERROR - orders - Order processing error: name 'set_user_data_cache' is not defined
2025-06-03 02:50:43,079 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:50:51,416 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 02:50:51,752 - ERROR - orders - Unexpected error in place_order: module 'app.crud.crud_order' has no attribute 'create_user_order'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 145, in place_order
    db_order = await crud_order.create_user_order(db, new_order, order_model)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: module 'app.crud.crud_order' has no attribute 'create_user_order'. Did you mean: 'create_order'?
2025-06-03 02:52:26,440 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:52:33,864 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 02:59:14,424 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:03:46,864 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:04:06,775 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:04:07,085 - ERROR - orders - Error processing new order: calculate_single_order_margin() missing 1 required positional argument: 'redis_client'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 123, in process_new_order
    margin_usd, adjusted_price, contract_value = await calculate_single_order_margin(
                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        symbol=symbol,
        ^^^^^^^^^^^^^^
    ...<5 lines>...
        raw_market_data=raw_market_data
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_single_order_margin() missing 1 required positional argument: 'redis_client'
2025-06-03 03:04:07,086 - ERROR - orders - Order processing error: calculate_single_order_margin() missing 1 required positional argument: 'redis_client'
2025-06-03 03:05:11,620 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:05:24,721 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:11:44,954 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:11:53,540 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:12:00,463 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:13:46,101 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:15:51,649 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:19:05,142 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:19:05,851 - ERROR - orders - Error processing new order: No group settings found for 
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 115, in process_new_order
    raise OrderProcessingError(f"No group settings found for {symbol}")
app.services.order_processing.OrderProcessingError: No group settings found for 
2025-06-03 03:19:05,852 - ERROR - orders - Order processing error: No group settings found for 
2025-06-03 03:19:23,046 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:19:23,336 - ERROR - orders - Error processing new order: No group settings found for 
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 115, in process_new_order
    raise OrderProcessingError(f"No group settings found for {symbol}")
app.services.order_processing.OrderProcessingError: No group settings found for 
2025-06-03 03:19:23,337 - ERROR - orders - Order processing error: No group settings found for 
2025-06-03 03:19:34,319 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:19:34,617 - ERROR - orders - Error processing new order: No group settings found for 
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 115, in process_new_order
    raise OrderProcessingError(f"No group settings found for {symbol}")
app.services.order_processing.OrderProcessingError: No group settings found for 
2025-06-03 03:19:34,617 - ERROR - orders - Order processing error: No group settings found for 
2025-06-03 03:23:36,798 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:24:21,657 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:24:21,962 - ERROR - orders - Error processing new order: No group settings found for 
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 138, in process_new_order
    raise OrderProcessingError(f"No group settings found for {symbol}")
app.services.order_processing.OrderProcessingError: No group settings found for 
2025-06-03 03:24:21,963 - ERROR - orders - Order processing error: No group settings found for 
2025-06-03 03:27:54,318 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:28:31,399 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:28:31,714 - ERROR - orders - Error processing new order: No group settings found for 
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 138, in process_new_order
    raise OrderProcessingError(f"No group settings found for {symbol}")
app.services.order_processing.OrderProcessingError: No group settings found for 
2025-06-03 03:28:31,718 - ERROR - orders - Order processing error: No group settings found for 
2025-06-03 03:31:06,550 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCHF, Type: BUY, Quantity: 0.01
2025-06-03 03:31:06,909 - ERROR - orders - Error processing new order: No group settings found for 
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 138, in process_new_order
    raise OrderProcessingError(f"No group settings found for {symbol}")
app.services.order_processing.OrderProcessingError: No group settings found for 
2025-06-03 03:31:06,910 - ERROR - orders - Order processing error: No group settings found for 
2025-06-03 03:31:18,396 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDJPY, Type: BUY, Quantity: 0.01
2025-06-03 03:31:18,704 - ERROR - orders - Error processing new order: No group settings found for 
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 138, in process_new_order
    raise OrderProcessingError(f"No group settings found for {symbol}")
app.services.order_processing.OrderProcessingError: No group settings found for 
2025-06-03 03:31:18,706 - ERROR - orders - Order processing error: No group settings found for 
2025-06-03 03:31:50,094 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:32:19,500 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDJPY, Type: BUY, Quantity: 0.01
2025-06-03 03:32:19,817 - ERROR - orders - Order processing failed: order_company_name is missing or blank in order_data: {'symbol': 'AUDJPY', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'OPEN', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 03:32:19,817 - ERROR - orders - Error processing new order: Symbol is required for order processing
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 114, in process_new_order
    raise OrderProcessingError("Symbol is required for order processing")
app.services.order_processing.OrderProcessingError: Symbol is required for order processing
2025-06-03 03:32:19,819 - ERROR - orders - Order processing error: Symbol is required for order processing
2025-06-03 03:32:30,542 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:32:30,867 - ERROR - orders - Order processing failed: order_company_name is missing or blank in order_data: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'OPEN', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 03:32:30,874 - ERROR - orders - Error processing new order: Symbol is required for order processing
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 114, in process_new_order
    raise OrderProcessingError("Symbol is required for order processing")
app.services.order_processing.OrderProcessingError: Symbol is required for order processing
2025-06-03 03:32:30,903 - ERROR - orders - Order processing error: Symbol is required for order processing
2025-06-03 03:33:12,619 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:35:37,638 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:35:44,266 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:35:58,290 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:35:58,290 - ERROR - orders - Unexpected error in place_order: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 134, in place_order
    user_data = await get_user_data_cache(redis_client, order_request.user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined. Did you mean: 'set_user_data_cache'?
2025-06-03 03:36:51,033 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:37:04,580 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:37:04,580 - ERROR - orders - Unexpected error in place_order: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 134, in place_order
    user_data = await get_user_data_cache(redis_client, order_request.user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined. Did you mean: 'set_user_data_cache'?
2025-06-03 03:37:42,375 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:37:42,377 - ERROR - orders - Unexpected error in place_order: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 134, in place_order
    user_data = await get_user_data_cache(redis_client, order_request.user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined. Did you mean: 'set_user_data_cache'?
2025-06-03 03:38:10,501 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:38:38,307 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:38:38,338 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 169, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:40:22,519 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:40:30,194 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:40:37,208 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:42:03,144 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:42:12,146 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:42:12,168 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 120, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:42:38,562 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:42:50,740 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:42:50,760 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 119, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:43:29,076 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:44:05,215 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:44:05,240 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 119, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:45:07,533 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:45:11,923 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:45:11,948 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 119, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:46:44,815 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:46:58,917 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:46:58,935 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 119, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:47:17,285 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:47:40,794 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:47:40,808 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 119, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:49:43,498 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:49:49,118 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:49:49,131 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 119, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:52:17,306 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:52:22,424 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:52:22,455 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 119, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:53:23,948 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:53:38,951 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:53:38,972 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 119, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:54:42,437 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:55:20,194 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:55:24,907 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:55:24,947 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 119, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:57:08,818 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:57:20,308 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:57:34,048 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:57:34,060 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 119, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:58:28,136 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:58:32,223 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:58:37,826 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:58:37,845 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 119, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 04:04:00,565 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:04:14,561 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 04:10:19,681 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:11:56,346 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 04:11:57,004 - ERROR - orders - Error processing new order: Insufficient margin
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 140, in process_new_order
    raise OrderProcessingError("Insufficient margin")
app.services.order_processing.OrderProcessingError: Insufficient margin
2025-06-03 04:11:57,005 - ERROR - orders - Order processing error: Insufficient margin
2025-06-03 04:15:05,060 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:15:52,932 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:18:06,537 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:23:26,825 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 04:23:27,546 - ERROR - orders - Error processing new order: Insufficient margin
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 140, in process_new_order
    raise OrderProcessingError("Insufficient margin")
app.services.order_processing.OrderProcessingError: Insufficient margin
2025-06-03 04:23:27,546 - ERROR - orders - Order processing error: Insufficient margin
2025-06-03 04:23:39,763 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 04:23:40,059 - ERROR - orders - Error processing new order: Insufficient margin
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 140, in process_new_order
    raise OrderProcessingError("Insufficient margin")
app.services.order_processing.OrderProcessingError: Insufficient margin
2025-06-03 04:23:40,060 - ERROR - orders - Order processing error: Insufficient margin
2025-06-03 04:23:52,898 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 04:23:53,206 - ERROR - orders - Error processing new order: Insufficient margin
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 140, in process_new_order
    raise OrderProcessingError("Insufficient margin")
app.services.order_processing.OrderProcessingError: Insufficient margin
2025-06-03 04:23:53,207 - ERROR - orders - Order processing error: Insufficient margin
2025-06-03 04:25:23,612 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:27:19,711 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 04:27:20,351 - ERROR - orders - Error processing new order: Insufficient margin
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 140, in process_new_order
    raise OrderProcessingError("Insufficient margin")
app.services.order_processing.OrderProcessingError: Insufficient margin
2025-06-03 04:27:20,353 - ERROR - orders - Order processing error: Insufficient margin
2025-06-03 04:29:01,803 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:30:33,845 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:32:44,849 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:34:14,904 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:35:47,271 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:38:58,706 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 04:38:59,328 - ERROR - orders - Error processing new order: Insufficient margin
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 140, in process_new_order
    raise OrderProcessingError("Insufficient margin")
app.services.order_processing.OrderProcessingError: Insufficient margin
2025-06-03 04:38:59,332 - ERROR - orders - Order processing error: Insufficient margin
2025-06-03 04:41:02,612 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:41:34,090 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 04:42:39,016 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 04:42:48,178 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 04:47:47,115 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:51:40,996 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:52:22,286 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:54:33,706 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 05:00:46,258 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 05:02:23,154 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 05:05:03,678 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 05:18:51,176 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 05:23:57,722 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 05:24:12,078 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 05:24:12,487 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 153, in place_order
    user_data = await get_user_data_cache(redis_client, user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined. Did you mean: 'set_user_data_cache'?
2025-06-03 05:35:20,609 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 05:36:47,388 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 05:36:48,216 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 153, in place_order
    user_data = await get_user_data_cache(redis_client, user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined. Did you mean: 'set_user_data_cache'?
2025-06-03 05:40:09,015 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 05:50:06,078 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 05:53:04,224 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 05:53:22,288 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 05:54:14,068 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 05:54:14,363 - ERROR - orders - Order processing error: Failed to process order: name 'get_order_model' is not defined
2025-06-03 05:54:52,457 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 05:55:10,789 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 05:55:11,213 - ERROR - orders - Order processing error: Failed to process order: module 'app.crud.crud_order' has no attribute 'get_open_orders_by_user_id_and_symbol'
2025-06-03 05:55:50,186 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 05:56:04,655 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 05:56:05,014 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 153, in place_order
    user_data = await get_user_data_cache(redis_client, user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined. Did you mean: 'set_user_data_cache'?
2025-06-03 05:59:24,614 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 05:59:49,813 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 06:00:31,757 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 06:00:32,268 - ERROR - orders - Unexpected error in place_order: (pymysql.err.IntegrityError) (1062, "Duplicate entry '69893717-a874-43e3-bab1-ce153b49f719' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('69893717-a874-43e3-bab1-ce153b49f719', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8857400000', '1', '88574.000000000000000000', '652.3772067820311134417059955', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '69893717-a874-43e3-bab1-ce153b49f719' for key 'demo_user_orders.ix_demo_user_orders_order_id'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 145, in place_order
    db_order = await crud_order.create_order(db, new_order, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 21, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '69893717-a874-43e3-bab1-ce153b49f719' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('69893717-a874-43e3-bab1-ce153b49f719', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8857400000', '1', '88574.000000000000000000', '652.3772067820311134417059955', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-03 07:40:41,116 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 07:51:34,874 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 07:51:35,884 - ERROR - orders - Unexpected error in place_order: (pymysql.err.IntegrityError) (1062, "Duplicate entry '20397ddd-86f6-4b03-a69e-a0e76bdef254' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('20397ddd-86f6-4b03-a69e-a0e76bdef254', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8864000000', '1', '88640.000000000000000000', '653.8245527020225964799673234', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '20397ddd-86f6-4b03-a69e-a0e76bdef254' for key 'demo_user_orders.ix_demo_user_orders_order_id'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 145, in place_order
    db_order = await crud_order.create_order(db, new_order, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 21, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '20397ddd-86f6-4b03-a69e-a0e76bdef254' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('20397ddd-86f6-4b03-a69e-a0e76bdef254', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8864000000', '1', '88640.000000000000000000', '653.8245527020225964799673234', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-03 07:52:13,341 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 07:52:29,218 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 07:52:29,671 - ERROR - orders - Unexpected error in place_order: (pymysql.err.IntegrityError) (1062, "Duplicate entry '04b9bcf9-7423-43a6-b0d5-9e0204367ff9' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('04b9bcf9-7423-43a6-b0d5-9e0204367ff9', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8865600000', '1', '88656.000000000000000000', '653.9889562407451984448286175', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '04b9bcf9-7423-43a6-b0d5-9e0204367ff9' for key 'demo_user_orders.ix_demo_user_orders_order_id'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 145, in place_order
    db_order = await crud_order.create_order(db, new_order, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 21, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '04b9bcf9-7423-43a6-b0d5-9e0204367ff9' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('04b9bcf9-7423-43a6-b0d5-9e0204367ff9', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8865600000', '1', '88656.000000000000000000', '653.9889562407451984448286175', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-03 07:57:05,411 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 07:58:00,943 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 07:58:01,389 - ERROR - orders - Unexpected error in place_order: (pymysql.err.IntegrityError) (1062, "Duplicate entry '6544932240' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('6544932240', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8864300000', '1', '88643.000000000000000000', '654.1422514758572377206488664', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '7497541545', '1344749400', None, '6606570968', '6213308870', '6420856648', '2886046506')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '6544932240' for key 'demo_user_orders.ix_demo_user_orders_order_id'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 145, in place_order
    db_order = await crud_order.create_order(db, new_order, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 21, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '6544932240' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('6544932240', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8864300000', '1', '88643.000000000000000000', '654.1422514758572377206488664', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '7497541545', '1344749400', None, '6606570968', '6213308870', '6420856648', '2886046506')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-03 08:00:46,836 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 08:00:53,451 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 08:00:53,865 - ERROR - orders - Unexpected error in place_order: (pymysql.err.IntegrityError) (1062, "Duplicate entry '6306636063' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('6306636063', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8865600000', '1', '88656.000000000000000000', '654.1846041590660342940532652', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '7169181950', '8981150872', None, '2879824007', '6070090479', '2218366526', '3170722181')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '6306636063' for key 'demo_user_orders.ix_demo_user_orders_order_id'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 144, in place_order
    db_order = await crud_order.create_order(db, new_order, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 21, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '6306636063' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('6306636063', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8865600000', '1', '88656.000000000000000000', '654.1846041590660342940532652', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '7169181950', '8981150872', None, '2879824007', '6070090479', '2218366526', '3170722181')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-03 08:03:40,441 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 08:03:41,545 - ERROR - orders - Unexpected error in place_order: (pymysql.err.IntegrityError) (1062, "Duplicate entry '5167742242' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('5167742242', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8866000000', '1', '88660.000000000000000000', '654.0419882409582305997694878', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '4703816488', '2019803258', None, '7812214892', '7872211289', '3319738771', '7133438765')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '5167742242' for key 'demo_user_orders.ix_demo_user_orders_order_id'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 144, in place_order
    db_order = await crud_order.create_order(db, new_order, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 21, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '5167742242' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('5167742242', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8866000000', '1', '88660.000000000000000000', '654.0419882409582305997694878', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '4703816488', '2019803258', None, '7812214892', '7872211289', '3319738771', '7133438765')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-03 08:03:43,393 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 08:03:44,048 - ERROR - orders - Unexpected error in place_order: (pymysql.err.IntegrityError) (1062, "Duplicate entry '4957011076' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('4957011076', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8867100000', '1', '88671.000000000000000000', '654.1222298411216316764658681', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '9636355165', '6404408281', None, '3734035182', '7166748359', '5274147257', '2837576588')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '4957011076' for key 'demo_user_orders.ix_demo_user_orders_order_id'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 144, in place_order
    db_order = await crud_order.create_order(db, new_order, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 21, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '4957011076' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('4957011076', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8867100000', '1', '88671.000000000000000000', '654.1222298411216316764658681', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '9636355165', '6404408281', None, '3734035182', '7166748359', '5274147257', '2837576588')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-03 08:03:45,965 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 08:03:46,691 - ERROR - orders - Unexpected error in place_order: (pymysql.err.IntegrityError) (1062, "Duplicate entry '9938724726' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('9938724726', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8867400000', '1', '88674.000000000000000000', '654.1632015873710625756846267', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '3275719326', '5539972601', None, '5545776173', '6790739250', '1738962496', '4246087405')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '9938724726' for key 'demo_user_orders.ix_demo_user_orders_order_id'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 144, in place_order
    db_order = await crud_order.create_order(db, new_order, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 21, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '9938724726' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('9938724726', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8867400000', '1', '88674.000000000000000000', '654.1632015873710625756846267', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '3275719326', '5539972601', None, '5545776173', '6790739250', '1738962496', '4246087405')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-03 08:05:13,857 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 08:05:21,045 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 08:05:52,298 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 08:10:50,459 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 08:10:55,799 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 08:10:56,371 - ERROR - orders - Unexpected error in place_order: (pymysql.err.IntegrityError) (1062, "Duplicate entry '8038870577' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('8038870577', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8865500000', '1', '88655.000000000000000000', '653.6383718641324555455917412', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '5711983338', '4092511674', None, '5508900573', '5209831068', '4861756836', '3210755343')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '8038870577' for key 'demo_user_orders.ix_demo_user_orders_order_id'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 144, in place_order
    db_order = await crud_order.create_order(db, new_order, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 21, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '8038870577' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('8038870577', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8865500000', '1', '88655.000000000000000000', '653.6383718641324555455917412', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '5711983338', '4092511674', None, '5508900573', '5209831068', '4861756836', '3210755343')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-03 08:17:08,160 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 08:18:51,988 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 08:22:38,317 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 08:23:07,850 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 08:23:08,989 - ERROR - orders - Unexpected error in place_order: (pymysql.err.IntegrityError) (1062, "Duplicate entry '4315349946' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('4315349946', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8863700000', '1', '88637.000000000000000000', '653.3070952224773149666557341', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '8426339281', '8760326880', None, '3663642978', '8148094201', '1748163218', '8033610687')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '4315349946' for key 'demo_user_orders.ix_demo_user_orders_order_id'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 144, in place_order
    db_order = await crud_order.create_order(db, new_order, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 21, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '4315349946' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('4315349946', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8863700000', '1', '88637.000000000000000000', '653.3070952224773149666557341', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '8426339281', '8760326880', None, '3663642978', '8148094201', '1748163218', '8033610687')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-03 08:27:27,422 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 08:27:35,923 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 08:58:27,614 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 08:58:28,251 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 152, in place_order
    user_data = await get_user_data_cache(redis_client, user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined. Did you mean: 'set_user_data_cache'?
2025-06-03 08:59:02,757 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 08:59:03,157 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 152, in place_order
    user_data = await get_user_data_cache(redis_client, user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined. Did you mean: 'set_user_data_cache'?
2025-06-03 09:04:01,535 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 09:04:20,045 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 09:04:20,444 - ERROR - orders - Unexpected error in place_order: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    user_data = await get_user_data_cache(redis_client, user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined. Did you mean: 'set_user_data_cache'?
2025-06-03 09:08:42,654 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 09:11:00,038 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 09:13:00,953 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 09:13:10,279 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 09:13:16,805 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 09:13:17,254 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 190, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 09:17:56,603 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 09:18:07,525 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 09:18:07,910 - INFO - orders - [MARGIN DEBUG] user_id=1, group_name=Group B, sending_orders=None, user_type=live
2025-06-03 09:18:07,918 - INFO - orders - [MARGIN DEBUG] open_positions count: 1
2025-06-03 09:18:07,918 - INFO - orders - [MARGIN DEBUG] symbols found: {'AUDCAD'}
2025-06-03 09:18:07,919 - INFO - orders - [MARGIN DEBUG] Calculating margin for symbol: AUDCAD with 1 positions
2025-06-03 09:18:07,930 - INFO - orders - [MARGIN DEBUG] Margin for symbol AUDCAD: 0.0
2025-06-03 09:18:07,930 - INFO - orders - [MARGIN DEBUG] Total margin to update for user 1: 0.0
2025-06-03 09:18:07,953 - INFO - orders - [MARGIN DEBUG] Margin updated in DB for user 1
2025-06-03 09:18:07,978 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 198, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 10:35:07,982 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 10:35:08,590 - INFO - orders - [MARGIN DEBUG] user_id=1, group_name=Group B, sending_orders=None, user_type=demo
2025-06-03 10:35:08,595 - INFO - orders - [MARGIN DEBUG] open_positions count: 1
2025-06-03 10:35:08,595 - INFO - orders - [MARGIN DEBUG] symbols found: {'AUDCAD'}
2025-06-03 10:35:08,595 - INFO - orders - [MARGIN DEBUG] Calculating margin for symbol: AUDCAD with 1 positions
2025-06-03 10:35:08,602 - INFO - orders - [MARGIN DEBUG] Margin for symbol AUDCAD: 0.0
2025-06-03 10:35:08,602 - INFO - orders - [MARGIN DEBUG] Total margin to update for user 1: 0.0
2025-06-03 10:35:08,618 - INFO - orders - [MARGIN DEBUG] Margin updated in DB for user 1
2025-06-03 10:35:08,633 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 198, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 12:12:33,674 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:13:37,747 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:14:21,288 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:15:51,063 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 12:15:51,065 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 12:15:52,245 - INFO - orders - [MARGIN DEBUG] user_id=1, group_name=Group B, sending_orders=None, user_type=demo, is_barclays_live_user_flag_check=False
2025-06-03 12:15:52,255 - INFO - orders - [MARGIN DEBUG] open_positions count: 2
2025-06-03 12:15:52,255 - INFO - orders - [MARGIN DEBUG] symbols found: {'AUDCAD'}
2025-06-03 12:15:52,255 - INFO - orders - [MARGIN DEBUG] Calculating margin for symbol: AUDCAD with 2 positions
2025-06-03 12:15:52,265 - INFO - orders - [MARGIN DEBUG] Margin for symbol AUDCAD: 0.0
2025-06-03 12:15:52,265 - INFO - orders - [MARGIN DEBUG] Total margin to update for user 1: 0.0
2025-06-03 12:15:52,283 - INFO - orders - [MARGIN DEBUG] Margin updated in DB for user 1
2025-06-03 12:15:52,303 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 208, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 12:27:15,122 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:27:19,589 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:27:58,709 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:32:47,802 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:32:59,824 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:34:30,433 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:34:48,744 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 12:34:48,748 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 12:34:49,573 - INFO - orders - [MARGIN DEBUG] user_id=1, group_name=Group B, sending_orders=None, user_type=demo, is_barclays_live_user_flag_check=False
2025-06-03 12:34:49,583 - INFO - orders - [MARGIN DEBUG] open_positions count: 1
2025-06-03 12:34:49,584 - INFO - orders - [MARGIN DEBUG] symbols found: {'AUDCAD'}
2025-06-03 12:34:49,584 - INFO - orders - [MARGIN DEBUG] Calculating margin for symbol: AUDCAD with 1 positions
2025-06-03 12:34:49,598 - INFO - orders - [MARGIN DEBUG] Margin for symbol AUDCAD: 0.0
2025-06-03 12:34:49,599 - INFO - orders - [MARGIN DEBUG] Total margin to update for user 1: 0.0
2025-06-03 12:34:49,617 - INFO - orders - [MARGIN DEBUG] Margin updated in DB for user 1
2025-06-03 12:34:49,642 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 208, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 12:40:00,694 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:40:00,695 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:40:04,935 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:40:04,935 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:40:20,569 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 12:40:20,571 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 12:40:21,180 - INFO - orders - [MARGIN DEBUG] user_id=1, group_name=Group B, sending_orders=None, user_type=demo, is_barclays_live_user_flag_check=False
2025-06-03 12:40:21,187 - INFO - orders - [MARGIN DEBUG] open_positions count: 1
2025-06-03 12:40:21,187 - INFO - orders - [MARGIN DEBUG] symbols found: {'AUDCAD'}
2025-06-03 12:40:21,188 - INFO - orders - [MARGIN DEBUG] Calculating margin for symbol: AUDCAD with 1 positions
2025-06-03 12:40:21,194 - INFO - orders - [MARGIN DEBUG] Margin for symbol AUDCAD: 0.0
2025-06-03 12:40:21,194 - INFO - orders - [MARGIN DEBUG] Total margin to update for user 1: 0.0
2025-06-03 12:40:21,218 - INFO - orders - [MARGIN DEBUG] Margin updated in DB for user 1
2025-06-03 12:40:21,234 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 208, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 12:58:01,050 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 12:58:01,052 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 12:58:01,914 - INFO - orders - [MARGIN DEBUG] user_id=1, group_name=Group B, sending_orders=None, user_type=demo, is_barclays_live_user_flag_check=False
2025-06-03 12:58:01,920 - INFO - orders - [MARGIN DEBUG] open_positions count: 1
2025-06-03 12:58:01,920 - INFO - orders - [MARGIN DEBUG] symbols found: {'AUDCAD'}
2025-06-03 12:58:01,920 - INFO - orders - [MARGIN DEBUG] Calculating margin for symbol: AUDCAD with 1 positions
2025-06-03 12:58:01,927 - INFO - orders - [MARGIN DEBUG] Margin for symbol AUDCAD: 0.0
2025-06-03 12:58:01,927 - INFO - orders - [MARGIN DEBUG] Total margin to update for user 1: 0.0
2025-06-03 12:58:01,941 - INFO - orders - [MARGIN DEBUG] Margin updated in DB for user 1
2025-06-03 12:58:01,955 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 208, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 13:01:39,737 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:06:20,791 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 13:06:20,793 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 13:06:21,799 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 181, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 13:20:13,653 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:20:13,655 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:30:14,309 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:30:14,322 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:30:28,151 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:30:28,152 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:38:10,153 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:40:26,051 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 13:40:26,054 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 13:40:26,843 - ERROR - orders - Order processing error: Failed to process order: No module named 'app.models'
2025-06-03 13:40:45,001 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:41:58,195 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:42:07,381 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:42:58,401 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:43:04,884 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 13:43:04,886 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 13:43:04,895 - ERROR - orders - Order processing error: Failed to process order: A transaction is already begun on this Session.
2025-06-03 13:43:45,724 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 13:43:45,725 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 13:43:45,726 - ERROR - orders - Order processing error: Failed to process order: A transaction is already begun on this Session.
2025-06-03 13:44:00,620 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 13:44:00,621 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 13:44:00,624 - ERROR - orders - Order processing error: Failed to process order: A transaction is already begun on this Session.
2025-06-03 13:44:55,181 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:45:17,852 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 13:45:17,854 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 13:45:18,314 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 181, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 13:46:58,652 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:47:26,542 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:48:23,220 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 13:48:23,224 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 13:48:23,764 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 181, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 13:49:23,404 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:49:27,926 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:49:55,619 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 13:49:55,621 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 13:49:56,040 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 0.00
2025-06-03 13:49:56,064 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 191, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 14:00:38,657 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:00:44,714 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 14:00:44,716 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:00:45,234 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 0.00
2025-06-03 14:00:45,271 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 191, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 14:02:25,881 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:02:33,187 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:02:44,230 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:04:24,454 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 14:04:24,455 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:04:25,489 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 0.00
2025-06-03 14:04:25,518 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'symbol' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 195, in place_order
    adjusted_market_prices[symbol] = prices
                           ^^^^^^
NameError: name 'symbol' is not defined
2025-06-03 14:05:43,349 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:06:16,741 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 14:06:16,743 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:06:17,169 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 0.00
2025-06-03 14:06:17,268 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-03 14:09:00,199 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:09:49,485 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 14:09:49,487 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:09:49,842 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.0, MarginAfter=0.0, AdditionalMargin=0.0
2025-06-03 14:09:49,850 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=0.00
2025-06-03 14:09:49,929 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 0.00
2025-06-03 14:09:50,024 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-03 14:11:27,271 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:12:10,773 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:13:27,029 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 14:13:27,033 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:13:28,235 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.0, MarginAfter=0.0, AdditionalMargin=0.0
2025-06-03 14:13:28,264 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=0.00
2025-06-03 14:13:28,389 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 0.00
2025-06-03 14:13:28,566 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-03 14:14:37,261 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:15:25,658 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 14:15:25,660 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:15:26,946 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.0, MarginAfter=0.0, AdditionalMargin=0.0
2025-06-03 14:15:26,954 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=0.00
2025-06-03 14:15:27,008 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 0.00
2025-06-03 14:15:27,069 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-03 14:16:23,142 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:16:58,002 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 14:16:58,004 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:16:58,005 - app.services.order_processing - WARNING - [!!! PNO_ENTRY_TEST !!!] User 1, Symbol: None
2025-06-03 14:16:58,382 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.0, MarginAfter=0.0, AdditionalMargin=0.0
2025-06-03 14:16:58,394 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=0.00
2025-06-03 14:16:58,444 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 0.00
2025-06-03 14:16:58,509 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-03 14:18:36,255 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:19:15,595 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 14:19:15,597 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:19:15,597 - app.services.order_processing - WARNING - [!!! PNO_ENTRY_TEST !!!] User 1, Symbol: None
2025-06-03 14:19:15,897 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 9
2025-06-03 14:19:15,897 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 9
2025-06-03 14:19:15,897 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 47): Type=BUY, Qty=1.00000000, StoredMargin=653.96557002
2025-06-03 14:19:15,897 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=653.96557002
2025-06-03 14:19:15,897 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 48): Type=BUY, Qty=1.00000000, StoredMargin=653.86829926
2025-06-03 14:19:15,897 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=653.86829926
2025-06-03 14:19:15,898 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 49): Type=BUY, Qty=1.00000000, StoredMargin=653.47616965
2025-06-03 14:19:15,898 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=653.47616965
2025-06-03 14:19:15,898 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 50): Type=BUY, Qty=1.00000000, StoredMargin=654.18245410
2025-06-03 14:19:15,899 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=654.1824541
2025-06-03 14:19:15,899 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: 51): Type=BUY, Qty=1.00000000, StoredMargin=654.17516759
2025-06-03 14:19:15,899 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=654.17516759
2025-06-03 14:19:15,899 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6 (ID: 52): Type=BUY, Qty=1.00000000, StoredMargin=654.13621492
2025-06-03 14:19:15,900 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6: MarginPerLot=654.13621492
2025-06-03 14:19:15,900 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7 (ID: 53): Type=BUY, Qty=1.00000000, StoredMargin=654.27996852
2025-06-03 14:19:15,900 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7: MarginPerLot=654.27996852
2025-06-03 14:19:15,900 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8 (ID: 54): Type=BUY, Qty=1.00000000, StoredMargin=654.00001457
2025-06-03 14:19:15,900 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8: MarginPerLot=654.00001457
2025-06-03 14:19:15,900 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9 (ID: 55): Type=BUY, Qty=1.00000000, StoredMargin=654.28257020
2025-06-03 14:19:15,900 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9: MarginPerLot=654.2825702
2025-06-03 14:19:15,901 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=9.00000000, TotalSellQty=0, NetQty=9.00000000
2025-06-03 14:19:15,901 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.96557002'), Decimal('653.86829926'), Decimal('653.47616965'), Decimal('654.1824541'), Decimal('654.17516759'), Decimal('654.13621492'), Decimal('654.27996852'), Decimal('654.00001457'), Decimal('654.2825702')], HighestMarginPerLot=654.2825702
2025-06-03 14:19:15,901 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=5888.54, ContributingOrders=9 (based on individual stored margins)
2025-06-03 14:19:15,901 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 10
2025-06-03 14:19:15,901 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 10
2025-06-03 14:19:15,901 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 47): Type=BUY, Qty=1.00000000, StoredMargin=653.96557002
2025-06-03 14:19:15,901 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=653.96557002
2025-06-03 14:19:15,901 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 48): Type=BUY, Qty=1.00000000, StoredMargin=653.86829926
2025-06-03 14:19:15,901 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=653.86829926
2025-06-03 14:19:15,901 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 49): Type=BUY, Qty=1.00000000, StoredMargin=653.47616965
2025-06-03 14:19:15,902 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=653.47616965
2025-06-03 14:19:15,902 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 50): Type=BUY, Qty=1.00000000, StoredMargin=654.18245410
2025-06-03 14:19:15,902 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=654.1824541
2025-06-03 14:19:15,902 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: 51): Type=BUY, Qty=1.00000000, StoredMargin=654.17516759
2025-06-03 14:19:15,902 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=654.17516759
2025-06-03 14:19:15,902 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6 (ID: 52): Type=BUY, Qty=1.00000000, StoredMargin=654.13621492
2025-06-03 14:19:15,902 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6: MarginPerLot=654.13621492
2025-06-03 14:19:15,902 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7 (ID: 53): Type=BUY, Qty=1.00000000, StoredMargin=654.27996852
2025-06-03 14:19:15,902 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7: MarginPerLot=654.27996852
2025-06-03 14:19:15,902 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8 (ID: 54): Type=BUY, Qty=1.00000000, StoredMargin=654.00001457
2025-06-03 14:19:15,902 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8: MarginPerLot=654.00001457
2025-06-03 14:19:15,903 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9 (ID: 55): Type=BUY, Qty=1.00000000, StoredMargin=654.28257020
2025-06-03 14:19:15,903 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9: MarginPerLot=654.2825702
2025-06-03 14:19:15,903 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 10 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=654.2018613396689818020158440
2025-06-03 14:19:15,903 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 10: MarginPerLot=654.2018613396689818020158440
2025-06-03 14:19:15,910 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=10.00000000, TotalSellQty=0, NetQty=10.00000000
2025-06-03 14:19:15,910 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.96557002'), Decimal('653.86829926'), Decimal('653.47616965'), Decimal('654.1824541'), Decimal('654.17516759'), Decimal('654.13621492'), Decimal('654.27996852'), Decimal('654.00001457'), Decimal('654.2825702'), Decimal('654.2018613396689818020158440')], HighestMarginPerLot=654.2825702
2025-06-03 14:19:15,910 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=6542.83, ContributingOrders=10 (based on individual stored margins)
2025-06-03 14:19:15,911 - app.services.order_processing - ERROR - Error processing new order: unsupported operand type(s) for -: 'dict' and 'dict'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 220, in process_new_order
    additional_margin = max(Decimal("0.0"), margin_after - margin_before)
                                            ~~~~~~~~~~~~~^~~~~~~~~~~~~~~
TypeError: unsupported operand type(s) for -: 'dict' and 'dict'
2025-06-03 14:19:15,915 - ERROR - orders - Order processing error: Failed to process order: unsupported operand type(s) for -: 'dict' and 'dict'
2025-06-03 14:20:35,305 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:21:04,360 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 14:21:04,362 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:21:04,363 - app.services.order_processing - WARNING - [!!! PNO_ENTRY_TEST !!!] User 1, Symbol: None
2025-06-03 14:21:04,676 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 9
2025-06-03 14:21:04,676 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 9
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 47): Type=BUY, Qty=1.00000000, StoredMargin=653.96557002
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=653.96557002
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 48): Type=BUY, Qty=1.00000000, StoredMargin=653.86829926
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=653.86829926
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 49): Type=BUY, Qty=1.00000000, StoredMargin=653.47616965
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=653.47616965
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 50): Type=BUY, Qty=1.00000000, StoredMargin=654.18245410
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=654.1824541
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: 51): Type=BUY, Qty=1.00000000, StoredMargin=654.17516759
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=654.17516759
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6 (ID: 52): Type=BUY, Qty=1.00000000, StoredMargin=654.13621492
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6: MarginPerLot=654.13621492
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7 (ID: 53): Type=BUY, Qty=1.00000000, StoredMargin=654.27996852
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7: MarginPerLot=654.27996852
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8 (ID: 54): Type=BUY, Qty=1.00000000, StoredMargin=654.00001457
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8: MarginPerLot=654.00001457
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9 (ID: 55): Type=BUY, Qty=1.00000000, StoredMargin=654.28257020
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9: MarginPerLot=654.2825702
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=9.00000000, TotalSellQty=0, NetQty=9.00000000
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.96557002'), Decimal('653.86829926'), Decimal('653.47616965'), Decimal('654.1824541'), Decimal('654.17516759'), Decimal('654.13621492'), Decimal('654.27996852'), Decimal('654.00001457'), Decimal('654.2825702')], HighestMarginPerLot=654.2825702
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=5888.54, ContributingOrders=9 (based on individual stored margins)
2025-06-03 14:21:04,678 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 10
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 10
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 47): Type=BUY, Qty=1.00000000, StoredMargin=653.96557002
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=653.96557002
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 48): Type=BUY, Qty=1.00000000, StoredMargin=653.86829926
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=653.86829926
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 49): Type=BUY, Qty=1.00000000, StoredMargin=653.47616965
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=653.47616965
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 50): Type=BUY, Qty=1.00000000, StoredMargin=654.18245410
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=654.1824541
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: 51): Type=BUY, Qty=1.00000000, StoredMargin=654.17516759
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=654.17516759
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6 (ID: 52): Type=BUY, Qty=1.00000000, StoredMargin=654.13621492
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6: MarginPerLot=654.13621492
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7 (ID: 53): Type=BUY, Qty=1.00000000, StoredMargin=654.27996852
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7: MarginPerLot=654.27996852
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8 (ID: 54): Type=BUY, Qty=1.00000000, StoredMargin=654.00001457
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8: MarginPerLot=654.00001457
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9 (ID: 55): Type=BUY, Qty=1.00000000, StoredMargin=654.28257020
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9: MarginPerLot=654.2825702
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 10 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=654.3139698433867523703331220
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 10: MarginPerLot=654.3139698433867523703331220
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=10.00000000, TotalSellQty=0, NetQty=10.00000000
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.96557002'), Decimal('653.86829926'), Decimal('653.47616965'), Decimal('654.1824541'), Decimal('654.17516759'), Decimal('654.13621492'), Decimal('654.27996852'), Decimal('654.00001457'), Decimal('654.2825702'), Decimal('654.3139698433867523703331220')], HighestMarginPerLot=654.3139698433867523703331220
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=6543.14, ContributingOrders=10 (based on individual stored margins)
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=5888.54, MarginAfter=6543.14, AdditionalMargin=654.60
2025-06-03 14:21:04,689 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=654.60
2025-06-03 14:21:04,776 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 654.60
2025-06-03 14:21:04,862 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-03 14:22:26,110 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 14:22:26,122 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:22:26,123 - app.services.order_processing - WARNING - [!!! PNO_ENTRY_TEST !!!] User 1, Symbol: None
2025-06-03 14:22:26,941 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 0
2025-06-03 14:22:26,941 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-03 14:22:26,942 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-03 14:22:26,942 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 1
2025-06-03 14:22:26,942 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-03 14:22:26,942 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=654.2898578185236738352560505
2025-06-03 14:22:26,942 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.2898578185236738352560505
2025-06-03 14:22:26,942 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1, TotalSellQty=0, NetQty=1
2025-06-03 14:22:26,943 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.2898578185236738352560505')], HighestMarginPerLot=654.2898578185236738352560505
2025-06-03 14:22:26,943 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=654.29, ContributingOrders=1 (based on individual stored margins)
2025-06-03 14:22:26,943 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=654.29, AdditionalMargin=654.29
2025-06-03 14:22:26,963 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=654.29
2025-06-03 14:22:27,068 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 654.29
2025-06-03 14:22:27,231 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-03 14:22:39,463 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 14:22:39,467 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:22:39,467 - app.services.order_processing - WARNING - [!!! PNO_ENTRY_TEST !!!] User 1, Symbol: None
2025-06-03 14:22:39,866 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 1
2025-06-03 14:22:39,867 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-03 14:22:39,867 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 57): Type=BUY, Qty=1.00000000, StoredMargin=654.28985782
2025-06-03 14:22:39,867 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.28985782
2025-06-03 14:22:39,867 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-03 14:22:39,867 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.28985782')], HighestMarginPerLot=654.28985782
2025-06-03 14:22:39,867 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=654.29, ContributingOrders=1 (based on individual stored margins)
2025-06-03 14:22:39,868 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 2
2025-06-03 14:22:39,868 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-03 14:22:39,868 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 57): Type=BUY, Qty=1.00000000, StoredMargin=654.28985782
2025-06-03 14:22:39,868 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.28985782
2025-06-03 14:22:39,868 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=654.2873383958372808232156131
2025-06-03 14:22:39,868 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.2873383958372808232156131
2025-06-03 14:22:39,869 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-03 14:22:39,869 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.28985782'), Decimal('654.2873383958372808232156131')], HighestMarginPerLot=654.28985782
2025-06-03 14:22:39,869 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1308.58, ContributingOrders=2 (based on individual stored margins)
2025-06-03 14:22:39,869 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=654.29, MarginAfter=1308.58, AdditionalMargin=654.29
2025-06-03 14:22:39,878 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=654.29000000, CalculatedNewMargin=1308.58
2025-06-03 14:22:39,971 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1308.58
2025-06-03 14:22:40,118 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-03 14:22:52,038 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-03 14:22:52,045 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:22:52,045 - app.services.order_processing - WARNING - [!!! PNO_ENTRY_TEST !!!] User 1, Symbol: None
2025-06-03 14:22:52,546 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 2
2025-06-03 14:22:52,546 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-03 14:22:52,547 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 57): Type=BUY, Qty=1.00000000, StoredMargin=654.28985782
2025-06-03 14:22:52,547 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.28985782
2025-06-03 14:22:52,547 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 58): Type=BUY, Qty=1.00000000, StoredMargin=654.28733840
2025-06-03 14:22:52,547 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.2873384
2025-06-03 14:22:52,547 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-03 14:22:52,547 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.28985782'), Decimal('654.2873384')], HighestMarginPerLot=654.28985782
2025-06-03 14:22:52,547 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1308.58, ContributingOrders=2 (based on individual stored margins)
2025-06-03 14:22:52,547 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 3
2025-06-03 14:22:52,547 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-03 14:22:52,547 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 57): Type=BUY, Qty=1.00000000, StoredMargin=654.28985782
2025-06-03 14:22:52,547 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.28985782
2025-06-03 14:22:52,547 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 58): Type=BUY, Qty=1.00000000, StoredMargin=654.28733840
2025-06-03 14:22:52,548 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.2873384
2025-06-03 14:22:52,548 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=652.9562232635422208294769675
2025-06-03 14:22:52,548 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=652.9562232635422208294769675
2025-06-03 14:22:52,548 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=1, NetQty=2.00000000
2025-06-03 14:22:52,548 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.28985782'), Decimal('654.2873384'), Decimal('652.9562232635422208294769675')], HighestMarginPerLot=654.28985782
2025-06-03 14:22:52,548 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1308.58, ContributingOrders=3 (based on individual stored margins)
2025-06-03 14:22:52,548 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=1308.58, MarginAfter=1308.58, AdditionalMargin=0.00
2025-06-03 14:22:52,568 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=1308.58000000, CalculatedNewMargin=1308.58
2025-06-03 14:22:52,645 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1308.58
2025-06-03 14:22:52,825 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-03 14:23:02,230 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-03 14:23:02,234 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:23:02,234 - app.services.order_processing - WARNING - [!!! PNO_ENTRY_TEST !!!] User 1, Symbol: None
2025-06-03 14:23:02,576 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 3
2025-06-03 14:23:02,576 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-03 14:23:02,577 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 57): Type=BUY, Qty=1.00000000, StoredMargin=654.28985782
2025-06-03 14:23:02,577 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.28985782
2025-06-03 14:23:02,577 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 58): Type=BUY, Qty=1.00000000, StoredMargin=654.28733840
2025-06-03 14:23:02,577 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.2873384
2025-06-03 14:23:02,577 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 59): Type=SELL, Qty=1.00000000, StoredMargin=652.95622326
2025-06-03 14:23:02,578 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=652.95622326
2025-06-03 14:23:02,578 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=1.00000000, NetQty=2.00000000
2025-06-03 14:23:02,578 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.28985782'), Decimal('654.2873384'), Decimal('652.95622326')], HighestMarginPerLot=654.28985782
2025-06-03 14:23:02,578 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1308.58, ContributingOrders=3 (based on individual stored margins)
2025-06-03 14:23:02,578 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 4
2025-06-03 14:23:02,578 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 4
2025-06-03 14:23:02,578 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 57): Type=BUY, Qty=1.00000000, StoredMargin=654.28985782
2025-06-03 14:23:02,579 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.28985782
2025-06-03 14:23:02,579 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 58): Type=BUY, Qty=1.00000000, StoredMargin=654.28733840
2025-06-03 14:23:02,579 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.2873384
2025-06-03 14:23:02,579 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 59): Type=SELL, Qty=1.00000000, StoredMargin=652.95622326
2025-06-03 14:23:02,579 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=652.95622326
2025-06-03 14:23:02,579 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=652.9879026380994024194723801
2025-06-03 14:23:02,580 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=652.9879026380994024194723801
2025-06-03 14:23:02,580 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-03 14:23:02,580 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.28985782'), Decimal('654.2873384'), Decimal('652.95622326'), Decimal('652.9879026380994024194723801')], HighestMarginPerLot=654.28985782
2025-06-03 14:23:02,580 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1308.58, ContributingOrders=4 (based on individual stored margins)
2025-06-03 14:23:02,580 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=1308.58, MarginAfter=1308.58, AdditionalMargin=0.00
2025-06-03 14:23:02,589 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=1308.58000000, CalculatedNewMargin=1308.58
2025-06-03 14:23:02,693 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1308.58
2025-06-03 14:23:02,853 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-03 14:23:11,412 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-03 14:23:11,419 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:23:11,420 - app.services.order_processing - WARNING - [!!! PNO_ENTRY_TEST !!!] User 1, Symbol: None
2025-06-03 14:23:11,795 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 4
2025-06-03 14:23:11,797 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 4
2025-06-03 14:23:11,798 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 57): Type=BUY, Qty=1.00000000, StoredMargin=654.28985782
2025-06-03 14:23:11,798 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.28985782
2025-06-03 14:23:11,798 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 58): Type=BUY, Qty=1.00000000, StoredMargin=654.28733840
2025-06-03 14:23:11,799 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.2873384
2025-06-03 14:23:11,799 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 59): Type=SELL, Qty=1.00000000, StoredMargin=652.95622326
2025-06-03 14:23:11,799 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=652.95622326
2025-06-03 14:23:11,799 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 60): Type=SELL, Qty=1.00000000, StoredMargin=652.98790264
2025-06-03 14:23:11,799 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=652.98790264
2025-06-03 14:23:11,800 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-03 14:23:11,800 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.28985782'), Decimal('654.2873384'), Decimal('652.95622326'), Decimal('652.98790264')], HighestMarginPerLot=654.28985782
2025-06-03 14:23:11,801 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1308.58, ContributingOrders=4 (based on individual stored margins)
2025-06-03 14:23:11,802 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 5
2025-06-03 14:23:11,802 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 5
2025-06-03 14:23:11,802 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 57): Type=BUY, Qty=1.00000000, StoredMargin=654.28985782
2025-06-03 14:23:11,803 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.28985782
2025-06-03 14:23:11,803 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 58): Type=BUY, Qty=1.00000000, StoredMargin=654.28733840
2025-06-03 14:23:11,803 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.2873384
2025-06-03 14:23:11,803 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 59): Type=SELL, Qty=1.00000000, StoredMargin=652.95622326
2025-06-03 14:23:11,804 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=652.95622326
2025-06-03 14:23:11,804 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 60): Type=SELL, Qty=1.00000000, StoredMargin=652.98790264
2025-06-03 14:23:11,804 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=652.98790264
2025-06-03 14:23:11,804 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=652.9391187745048025769213952
2025-06-03 14:23:11,805 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=652.9391187745048025769213952
2025-06-03 14:23:11,805 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=3.00000000, NetQty=3.00000000
2025-06-03 14:23:11,805 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.28985782'), Decimal('654.2873384'), Decimal('652.95622326'), Decimal('652.98790264'), Decimal('652.9391187745048025769213952')], HighestMarginPerLot=654.28985782
2025-06-03 14:23:11,805 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1962.87, ContributingOrders=5 (based on individual stored margins)
2025-06-03 14:23:11,805 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=1308.58, MarginAfter=1962.87, AdditionalMargin=654.29
2025-06-03 14:23:11,822 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=1308.58000000, CalculatedNewMargin=1962.87
2025-06-03 14:23:11,902 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1962.87
2025-06-03 14:23:12,061 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-03 14:24:59,909 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 23:33:54,284 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 23:35:45,718 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 23:36:58,810 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 23:36:58,811 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=False, user_type=live, sending_orders_setting=None
2025-06-03 23:36:59,115 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-03 23:36:59,115 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-03 23:36:59,115 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-03 23:36:59,115 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=653.4045374404406300543502018
2025-06-03 23:36:59,115 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.4045374404406300543502018
2025-06-03 23:36:59,115 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1, TotalSellQty=0, NetQty=1
2025-06-03 23:36:59,115 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.4045374404406300543502018')], HighestMarginPerLot=653.4045374404406300543502018
2025-06-03 23:36:59,115 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.40, ContributingOrders=1 (based on individual stored margins)
2025-06-03 23:36:59,115 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.40, AdditionalMargin=653.40
2025-06-03 23:36:59,121 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4: OriginalMarginDB=0E-8, CalculatedNewMargin=653.40
2025-06-03 23:36:59,142 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '1271435029', 'order_status': 'OPEN', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8868500000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88685.000000000000000000'), 'margin': Decimal('653.4045374404406300543502018'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '7211382415', 'status': 'OPEN'}
2025-06-03 23:36:59,169 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 653.40
2025-06-03 23:36:59,209 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-03 23:37:22,412 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-03 23:37:22,413 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=False, user_type=live, sending_orders_setting=None
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 18): Type=BUY, Qty=1.00000000, StoredMargin=653.40453744
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.40453744
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.40453744')], HighestMarginPerLot=653.40453744
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.40, ContributingOrders=1 (based on individual stored margins)
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 2
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 18): Type=BUY, Qty=1.00000000, StoredMargin=653.40453744
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.40453744
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.4356261793913429943243499
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=653.4356261793913429943243499
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=1, NetQty=1.00000000
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.40453744'), Decimal('653.4356261793913429943243499')], HighestMarginPerLot=653.4356261793913429943243499
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.44, ContributingOrders=2 (based on individual stored margins)
2025-06-03 23:37:22,713 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=653.40, MarginAfter=653.44, AdditionalMargin=0.04
2025-06-03 23:37:22,715 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4: OriginalMarginDB=653.40000000, CalculatedNewMargin=653.44
2025-06-03 23:37:22,722 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '9935283813', 'order_status': 'OPEN', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8868600000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88686.000000000000000000'), 'margin': Decimal('653.4356261793913429943243499'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '5274295319', 'status': 'OPEN'}
2025-06-03 23:37:22,734 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 653.44
2025-06-03 23:37:22,773 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-03 23:40:16,470 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 23:42:37,336 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 23:43:50,623 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-03 23:43:50,626 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=False, user_type=live, sending_orders_setting=None
2025-06-03 23:43:50,954 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-03 23:43:50,954 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-03 23:43:50,954 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-03 23:43:50,954 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.4742916262905188304638946
2025-06-03 23:43:50,954 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.4742916262905188304638946
2025-06-03 23:43:50,954 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-03 23:43:50,954 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.4742916262905188304638946')], HighestMarginPerLot=653.4742916262905188304638946
2025-06-03 23:43:50,954 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.47, ContributingOrders=1 (based on individual stored margins)
2025-06-03 23:43:50,954 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.47, AdditionalMargin=653.47
2025-06-03 23:43:50,958 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4: OriginalMarginDB=0E-8, CalculatedNewMargin=653.47
2025-06-03 23:43:51,012 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '8140331175', 'order_status': 'OPEN', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8869000000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88690.000000000000000000'), 'margin': Decimal('653.4742916262905188304638946'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '2284295986', 'status': 'OPEN', 'additional_margin': Decimal('653.47')}
2025-06-03 23:43:51,019 - ERROR - orders - Unexpected error in place_order: 'additional_margin' is an invalid keyword argument for UserOrder
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 162, in place_order
    db_order = await crud_order.create_order(db, order_create_internal, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 33, in create_order
    db_order = order_model(**order_data)
  File "<string>", line 4, in __init__
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state.py", line 571, in _initialize_instance
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state.py", line 569, in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\decl_base.py", line 2173, in _declarative_constructor
    raise TypeError(
        "%r is an invalid keyword argument for %s" % (k, cls_.__name__)
    )
TypeError: 'additional_margin' is an invalid keyword argument for UserOrder
2025-06-03 23:44:35,609 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 23:45:15,071 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-03 23:45:15,072 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=False, user_type=live, sending_orders_setting=None
2025-06-03 23:45:15,367 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-03 23:45:15,368 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-03 23:45:15,368 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-03 23:45:15,368 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.5516259007482859370332321
2025-06-03 23:45:15,368 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.5516259007482859370332321
2025-06-03 23:45:15,368 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-03 23:45:15,368 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.5516259007482859370332321')], HighestMarginPerLot=653.5516259007482859370332321
2025-06-03 23:45:15,368 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.55, ContributingOrders=1 (based on individual stored margins)
2025-06-03 23:45:15,368 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.55, AdditionalMargin=653.55
2025-06-03 23:45:15,375 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4: OriginalMarginDB=0E-8, CalculatedNewMargin=653.55
2025-06-03 23:45:15,393 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '4972353352', 'order_status': 'OPEN', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8869800000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88698.000000000000000000'), 'margin': Decimal('653.5516259007482859370332321'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '7328613719', 'status': 'OPEN', 'additional_margin': Decimal('653.55')}
2025-06-03 23:45:15,396 - ERROR - orders - Unexpected error in place_order: 'additional_margin' is an invalid keyword argument for UserOrder
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 162, in place_order
    db_order = await crud_order.create_order(db, order_create_internal, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 33, in create_order
    db_order = order_model(**order_data)
  File "<string>", line 4, in __init__
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state.py", line 571, in _initialize_instance
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state.py", line 569, in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\decl_base.py", line 2173, in _declarative_constructor
    raise TypeError(
        "%r is an invalid keyword argument for %s" % (k, cls_.__name__)
    )
TypeError: 'additional_margin' is an invalid keyword argument for UserOrder
2025-06-03 23:45:28,686 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 23:48:00,769 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-03 23:48:00,770 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=False, user_type=live, sending_orders_setting=None
2025-06-03 23:48:01,444 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-03 23:48:01,444 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-03 23:48:01,444 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-03 23:48:01,444 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.4597197834624155743856147
2025-06-03 23:48:01,444 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.4597197834624155743856147
2025-06-03 23:48:01,444 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-03 23:48:01,444 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.4597197834624155743856147')], HighestMarginPerLot=653.4597197834624155743856147
2025-06-03 23:48:01,444 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.46, ContributingOrders=1 (based on individual stored margins)
2025-06-03 23:48:01,444 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.46, AdditionalMargin=653.46
2025-06-03 23:48:01,449 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4: OriginalMarginDB=0E-8, CalculatedNewMargin=653.46
2025-06-03 23:48:01,465 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '3065794014', 'order_status': 'OPEN', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8868800000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88688.000000000000000000'), 'margin': Decimal('653.4597197834624155743856147'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '6927679421', 'status': 'OPEN'}
2025-06-03 23:48:01,481 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 653.46
2025-06-03 23:48:01,516 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-03 23:52:19,459 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 23:53:31,244 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-03 23:53:31,249 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=False, user_type=live, sending_orders_setting=None
2025-06-03 23:53:31,587 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-03 23:53:31,587 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-03 23:53:31,587 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-03 23:53:31,588 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.5992480162055422371517885
2025-06-03 23:53:31,588 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.5992480162055422371517885
2025-06-03 23:53:31,588 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-03 23:53:31,588 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.5992480162055422371517885')], HighestMarginPerLot=653.5992480162055422371517885
2025-06-03 23:53:31,588 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.60, ContributingOrders=1 (based on individual stored margins)
2025-06-03 23:53:31,588 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.60, AdditionalMargin=653.60
2025-06-03 23:53:31,598 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4: OriginalMarginDB=0E-8, CalculatedNewMargin=653.60
2025-06-03 23:53:31,661 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '2205733050', 'order_status': 'OPEN', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8869800000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88698.000000000000000000'), 'margin': Decimal('653.5992480162055422371517885'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '9396209973', 'status': 'OPEN'}
2025-06-03 23:53:31,701 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 653.60
2025-06-03 23:53:31,799 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-03 23:55:23,864 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 23:56:33,565 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-03 23:56:33,569 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=False, user_type=live, group_name=Group B, sending_orders_setting=None
2025-06-03 23:56:33,868 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-03 23:56:33,869 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-03 23:56:33,869 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-03 23:56:33,869 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.3966718153469530498644828
2025-06-03 23:56:33,869 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.3966718153469530498644828
2025-06-03 23:56:33,869 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-03 23:56:33,869 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.3966718153469530498644828')], HighestMarginPerLot=653.3966718153469530498644828
2025-06-03 23:56:33,870 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.40, ContributingOrders=1 (based on individual stored margins)
2025-06-03 23:56:33,870 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.40, AdditionalMargin=653.40
2025-06-03 23:56:33,893 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4: OriginalMarginDB=0E-8, CalculatedNewMargin=653.40
2025-06-03 23:56:33,994 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '8598617938', 'order_status': 'OPEN', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8868000000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88680.000000000000000000'), 'margin': Decimal('653.3966718153469530498644828'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '5279787105', 'status': 'OPEN'}
2025-06-03 23:56:34,027 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 653.40
2025-06-03 23:56:34,106 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-03 23:58:07,038 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:00:30,747 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:00:30,749 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:00:30,749 - INFO - orders - [DEBUG] sending_orders_cache value: None (type: <class 'NoneType'>)
2025-06-04 00:00:30,749 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=False, user_type=live, group_name=Group B, sending_orders_setting=None
2025-06-04 00:00:31,069 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 00:00:31,069 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 00:00:31,069 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 00:00:31,069 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.5248841074083792530394472
2025-06-04 00:00:31,070 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.5248841074083792530394472
2025-06-04 00:00:31,070 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 00:00:31,070 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.5248841074083792530394472')], HighestMarginPerLot=653.5248841074083792530394472
2025-06-04 00:00:31,070 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.52, ContributingOrders=1 (based on individual stored margins)
2025-06-04 00:00:31,070 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.52, AdditionalMargin=653.52
2025-06-04 00:00:31,083 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4: OriginalMarginDB=0E-8, CalculatedNewMargin=653.52
2025-06-04 00:00:31,135 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '7300962042', 'order_status': 'OPEN', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8866100000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88661.000000000000000000'), 'margin': Decimal('653.5248841074083792530394472'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '3031781399', 'status': 'OPEN'}
2025-06-04 00:00:31,171 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 653.52
2025-06-04 00:00:31,248 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 00:01:15,297 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:01:18,966 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:02:32,559 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:03:34,465 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:03:34,496 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:03:34,496 - INFO - orders - [DEBUG] sending_orders_cache value: None (type: <class 'NoneType'>)
2025-06-04 00:03:34,496 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=False, user_type=live, group_name=Group B, sending_orders_setting=None
2025-06-04 00:03:34,800 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 00:03:34,800 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 00:03:34,800 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 00:03:34,800 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.4820159615174374111730622
2025-06-04 00:03:34,800 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.4820159615174374111730622
2025-06-04 00:03:34,800 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 00:03:34,800 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.4820159615174374111730622')], HighestMarginPerLot=653.4820159615174374111730622
2025-06-04 00:03:34,800 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.48, ContributingOrders=1 (based on individual stored margins)
2025-06-04 00:03:34,800 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.48, AdditionalMargin=653.48
2025-06-04 00:03:34,818 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4: OriginalMarginDB=0E-8, CalculatedNewMargin=653.48
2025-06-04 00:03:34,860 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '3779047511', 'order_status': 'OPEN', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8866100000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88661.000000000000000000'), 'margin': Decimal('653.4820159615174374111730622'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '4452185473', 'status': 'OPEN'}
2025-06-04 00:03:34,901 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 653.48
2025-06-04 00:03:35,037 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 00:04:32,880 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:06:08,641 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:06:37,342 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:06:37,360 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000024ACA775010>, <app.database.models.Group object at 0x0000024ACA74BD90>, <app.database.models.Group object at 0x0000024ACA88C7D0>, <app.database.models.Group object at 0x0000024ACA7FD0F0>, <app.database.models.Group object at 0x0000024ACA7FD220>, <app.database.models.Group object at 0x0000024ACA8883B0>, <app.database.models.Group object at 0x0000024ACA746CF0>, <app.database.models.Group object at 0x0000024ACA746E00>, <app.database.models.Group object at 0x0000024ACA746F10>, <app.database.models.Group object at 0x0000024ACA747020>, <app.database.models.Group object at 0x0000024ACA747130>, <app.database.models.Group object at 0x0000024ACA747240>, <app.database.models.Group object at 0x0000024ACA747350>, <app.database.models.Group object at 0x0000024ACA747460>, <app.database.models.Group object at 0x0000024ACA747570>, <app.database.models.Group object at 0x0000024ACA747680>, <app.database.models.Group object at 0x0000024ACA747790>, <app.database.models.Group object at 0x0000024ACA7478A0>, <app.database.models.Group object at 0x0000024ACA7479B0>, <app.database.models.Group object at 0x0000024ACA747AC0>, <app.database.models.Group object at 0x0000024ACA747BD0>, <app.database.models.Group object at 0x0000024ACA747CE0>, <app.database.models.Group object at 0x0000024ACA747DF0>, <app.database.models.Group object at 0x0000024ACA747F00>, <app.database.models.Group object at 0x0000024ACA8D4050>, <app.database.models.Group object at 0x0000024ACA8D4160>, <app.database.models.Group object at 0x0000024ACA8D4270>, <app.database.models.Group object at 0x0000024ACA8D4380>, <app.database.models.Group object at 0x0000024ACA8D4490>, <app.database.models.Group object at 0x0000024ACA8D45A0>, <app.database.models.Group object at 0x0000024ACA8D46B0>, <app.database.models.Group object at 0x0000024ACA8D47C0>, <app.database.models.Group object at 0x0000024ACA8D48D0>, <app.database.models.Group object at 0x0000024ACA8D49E0>, <app.database.models.Group object at 0x0000024ACA8D4AF0>, <app.database.models.Group object at 0x0000024ACA8D4C00>, <app.database.models.Group object at 0x0000024ACA8D4D10>, <app.database.models.Group object at 0x0000024ACA8D4E20>, <app.database.models.Group object at 0x0000024ACA8D4F30>, <app.database.models.Group object at 0x0000024ACA8D5040>, <app.database.models.Group object at 0x0000024ACA8D5150>, <app.database.models.Group object at 0x0000024ACA8D5260>, <app.database.models.Group object at 0x0000024ACA8D5370>, <app.database.models.Group object at 0x0000024ACA8D5480>, <app.database.models.Group object at 0x0000024ACA8D5590>, <app.database.models.Group object at 0x0000024ACA8D56A0>, <app.database.models.Group object at 0x0000024ACA8D57B0>, <app.database.models.Group object at 0x0000024ACA8D58C0>, <app.database.models.Group object at 0x0000024ACA8D59D0>, <app.database.models.Group object at 0x0000024ACA8D5AE0>, <app.database.models.Group object at 0x0000024ACA8D5BF0>, <app.database.models.Group object at 0x0000024ACA8D5D00>, <app.database.models.Group object at 0x0000024ACA8D5E10>, <app.database.models.Group object at 0x0000024ACA8D5F20>, <app.database.models.Group object at 0x0000024ACA8D6030>, <app.database.models.Group object at 0x0000024ACA8D6140>, <app.database.models.Group object at 0x0000024ACA8D6250>, <app.database.models.Group object at 0x0000024ACA8D6360>, <app.database.models.Group object at 0x0000024ACA8D6470>, <app.database.models.Group object at 0x0000024ACA8D6580>, <app.database.models.Group object at 0x0000024ACA8D6690>, <app.database.models.Group object at 0x0000024ACA8D67A0>, <app.database.models.Group object at 0x0000024ACA8D68B0>, <app.database.models.Group object at 0x0000024ACA8D69C0>, <app.database.models.Group object at 0x0000024ACA8D6AD0>, <app.database.models.Group object at 0x0000024ACA8D6BE0>, <app.database.models.Group object at 0x0000024ACA8D6CF0>, <app.database.models.Group object at 0x0000024ACA8D6E00>, <app.database.models.Group object at 0x0000024ACA8D6F10>, <app.database.models.Group object at 0x0000024ACA8D7020>, <app.database.models.Group object at 0x0000024ACA8D7130>, <app.database.models.Group object at 0x0000024ACA8D7240>, <app.database.models.Group object at 0x0000024ACA8D7350>, <app.database.models.Group object at 0x0000024ACA8D7460>, <app.database.models.Group object at 0x0000024ACA8D7570>, <app.database.models.Group object at 0x0000024ACA8D7680>, <app.database.models.Group object at 0x0000024ACA8D7790>, <app.database.models.Group object at 0x0000024ACA8D78A0>, <app.database.models.Group object at 0x0000024ACA8D79B0>]
2025-06-04 00:06:37,360 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 00:06:37,360 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 00:06:37,360 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:06:37,360 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 00:06:37,360 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 00:06:37,683 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 00:06:37,683 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 00:06:37,683 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 00:06:37,683 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.6981429112853852657356928
2025-06-04 00:06:37,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.6981429112853852657356928
2025-06-04 00:06:37,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 00:06:37,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.6981429112853852657356928')], HighestMarginPerLot=653.6981429112853852657356928
2025-06-04 00:06:37,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.70, ContributingOrders=1 (based on individual stored margins)
2025-06-04 00:06:37,685 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.70, AdditionalMargin=653.70
2025-06-04 00:06:37,720 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '8250846120', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8869000000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88690.000000000000000000'), 'margin': Decimal('653.6981429112853852657356928'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '8194293788', 'status': 'OPEN'}
2025-06-04 00:06:37,764 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 00:06:37,863 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 00:06:37,983 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 8250846120 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 00:09:09,971 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:09:09,979 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000024ACA746F10>, <app.database.models.Group object at 0x0000024ACA747020>, <app.database.models.Group object at 0x0000024ACA747130>, <app.database.models.Group object at 0x0000024ACA747240>, <app.database.models.Group object at 0x0000024ACA747350>, <app.database.models.Group object at 0x0000024ACA747460>, <app.database.models.Group object at 0x0000024ACA747570>, <app.database.models.Group object at 0x0000024ACA747680>, <app.database.models.Group object at 0x0000024ACA747790>, <app.database.models.Group object at 0x0000024ACA7478A0>, <app.database.models.Group object at 0x0000024ACA7479B0>, <app.database.models.Group object at 0x0000024ACA747AC0>, <app.database.models.Group object at 0x0000024ACA747BD0>, <app.database.models.Group object at 0x0000024ACA747CE0>, <app.database.models.Group object at 0x0000024ACA747DF0>, <app.database.models.Group object at 0x0000024ACA747F00>, <app.database.models.Group object at 0x0000024ACA7456A0>, <app.database.models.Group object at 0x0000024ACA8D7BD0>, <app.database.models.Group object at 0x0000024ACA8D4050>, <app.database.models.Group object at 0x0000024ACA8D4160>, <app.database.models.Group object at 0x0000024ACA8D4270>, <app.database.models.Group object at 0x0000024ACA8D4380>, <app.database.models.Group object at 0x0000024ACA8D4490>, <app.database.models.Group object at 0x0000024ACA8D45A0>, <app.database.models.Group object at 0x0000024ACA8D46B0>, <app.database.models.Group object at 0x0000024ACA8D47C0>, <app.database.models.Group object at 0x0000024ACA8D48D0>, <app.database.models.Group object at 0x0000024ACA8D49E0>, <app.database.models.Group object at 0x0000024ACA8D4AF0>, <app.database.models.Group object at 0x0000024ACA8D4C00>, <app.database.models.Group object at 0x0000024ACA8D4D10>, <app.database.models.Group object at 0x0000024ACA8D4E20>, <app.database.models.Group object at 0x0000024ACA8D4F30>, <app.database.models.Group object at 0x0000024ACA8D5040>, <app.database.models.Group object at 0x0000024ACA8D5150>, <app.database.models.Group object at 0x0000024ACA8D5260>, <app.database.models.Group object at 0x0000024ACA8D5370>, <app.database.models.Group object at 0x0000024ACA8D5480>, <app.database.models.Group object at 0x0000024ACA8D5590>, <app.database.models.Group object at 0x0000024ACA8D56A0>, <app.database.models.Group object at 0x0000024ACA8D57B0>, <app.database.models.Group object at 0x0000024ACA8D58C0>, <app.database.models.Group object at 0x0000024ACA8D59D0>, <app.database.models.Group object at 0x0000024ACA8D5AE0>, <app.database.models.Group object at 0x0000024ACA8D5BF0>, <app.database.models.Group object at 0x0000024ACA8D5D00>, <app.database.models.Group object at 0x0000024ACA8D5E10>, <app.database.models.Group object at 0x0000024ACA8D5F20>, <app.database.models.Group object at 0x0000024ACA8D6030>, <app.database.models.Group object at 0x0000024ACA8D6140>, <app.database.models.Group object at 0x0000024ACA8D6250>, <app.database.models.Group object at 0x0000024ACA8D6360>, <app.database.models.Group object at 0x0000024ACA8D6470>, <app.database.models.Group object at 0x0000024ACA8D6580>, <app.database.models.Group object at 0x0000024ACA8D6690>, <app.database.models.Group object at 0x0000024ACA8D67A0>, <app.database.models.Group object at 0x0000024ACA8D68B0>, <app.database.models.Group object at 0x0000024ACA8D69C0>, <app.database.models.Group object at 0x0000024ACA8D6AD0>, <app.database.models.Group object at 0x0000024ACA8D6BE0>, <app.database.models.Group object at 0x0000024ACA8D6CF0>, <app.database.models.Group object at 0x0000024ACA8D6E00>, <app.database.models.Group object at 0x0000024ACA8D6F10>, <app.database.models.Group object at 0x0000024ACA8D7020>, <app.database.models.Group object at 0x0000024ACA8D7130>, <app.database.models.Group object at 0x0000024ACA8D7240>, <app.database.models.Group object at 0x0000024ACA8D7350>, <app.database.models.Group object at 0x0000024ACA8D7460>, <app.database.models.Group object at 0x0000024ACA8D7570>, <app.database.models.Group object at 0x0000024ACA8D7680>, <app.database.models.Group object at 0x0000024ACA8D7790>, <app.database.models.Group object at 0x0000024ACA8D78A0>, <app.database.models.Group object at 0x0000024ACA8D79B0>, <app.database.models.Group object at 0x0000024ACA8D7AC0>, <app.database.models.Group object at 0x0000024ACA8D7F00>, <app.database.models.Group object at 0x0000024ACA924050>, <app.database.models.Group object at 0x0000024ACA924270>, <app.database.models.Group object at 0x0000024ACA924490>, <app.database.models.Group object at 0x0000024ACA9245A0>]
2025-06-04 00:09:09,979 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 00:09:09,979 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 00:09:09,980 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:09:09,980 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 00:09:09,980 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 00:09:10,641 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 00:09:10,641 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 00:09:10,641 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 00:09:10,641 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.7774700244177994824884289
2025-06-04 00:09:10,641 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.7774700244177994824884289
2025-06-04 00:09:10,642 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 00:09:10,642 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.7774700244177994824884289')], HighestMarginPerLot=653.7774700244177994824884289
2025-06-04 00:09:10,642 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.78, ContributingOrders=1 (based on individual stored margins)
2025-06-04 00:09:10,642 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.78, AdditionalMargin=653.78
2025-06-04 00:09:10,646 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '2030514773', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8869500000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88695.000000000000000000'), 'margin': Decimal('653.7774700244177994824884289'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '3943212324', 'status': 'OPEN'}
2025-06-04 00:09:10,662 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 00:09:10,700 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 00:09:10,729 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 2030514773 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 00:12:48,981 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:14:56,401 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:14:56,411 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000022AB4E05010>, <app.database.models.Group object at 0x0000022AB4DDBD90>, <app.database.models.Group object at 0x0000022AB4F187D0>, <app.database.models.Group object at 0x0000022AB4E8D0F0>, <app.database.models.Group object at 0x0000022AB4E8D220>, <app.database.models.Group object at 0x0000022AB4F143B0>, <app.database.models.Group object at 0x0000022AB4DD6CF0>, <app.database.models.Group object at 0x0000022AB4DD6E00>, <app.database.models.Group object at 0x0000022AB4DD6F10>, <app.database.models.Group object at 0x0000022AB4DD7020>, <app.database.models.Group object at 0x0000022AB4DD7130>, <app.database.models.Group object at 0x0000022AB4DD7240>, <app.database.models.Group object at 0x0000022AB4DD7350>, <app.database.models.Group object at 0x0000022AB4DD7460>, <app.database.models.Group object at 0x0000022AB4DD7570>, <app.database.models.Group object at 0x0000022AB4DD7680>, <app.database.models.Group object at 0x0000022AB4DD7790>, <app.database.models.Group object at 0x0000022AB4DD78A0>, <app.database.models.Group object at 0x0000022AB4DD79B0>, <app.database.models.Group object at 0x0000022AB4DD7AC0>, <app.database.models.Group object at 0x0000022AB4DD7BD0>, <app.database.models.Group object at 0x0000022AB4DD7CE0>, <app.database.models.Group object at 0x0000022AB4DD7DF0>, <app.database.models.Group object at 0x0000022AB4DD7F00>, <app.database.models.Group object at 0x0000022AB4F60050>, <app.database.models.Group object at 0x0000022AB4F60160>, <app.database.models.Group object at 0x0000022AB4F60270>, <app.database.models.Group object at 0x0000022AB4F60380>, <app.database.models.Group object at 0x0000022AB4F60490>, <app.database.models.Group object at 0x0000022AB4F605A0>, <app.database.models.Group object at 0x0000022AB4F606B0>, <app.database.models.Group object at 0x0000022AB4F607C0>, <app.database.models.Group object at 0x0000022AB4F608D0>, <app.database.models.Group object at 0x0000022AB4F609E0>, <app.database.models.Group object at 0x0000022AB4F60AF0>, <app.database.models.Group object at 0x0000022AB4F60C00>, <app.database.models.Group object at 0x0000022AB4F60D10>, <app.database.models.Group object at 0x0000022AB4F60E20>, <app.database.models.Group object at 0x0000022AB4F60F30>, <app.database.models.Group object at 0x0000022AB4F61040>, <app.database.models.Group object at 0x0000022AB4F61150>, <app.database.models.Group object at 0x0000022AB4F61260>, <app.database.models.Group object at 0x0000022AB4F61370>, <app.database.models.Group object at 0x0000022AB4F61480>, <app.database.models.Group object at 0x0000022AB4F61590>, <app.database.models.Group object at 0x0000022AB4F616A0>, <app.database.models.Group object at 0x0000022AB4F617B0>, <app.database.models.Group object at 0x0000022AB4F618C0>, <app.database.models.Group object at 0x0000022AB4F619D0>, <app.database.models.Group object at 0x0000022AB4F61AE0>, <app.database.models.Group object at 0x0000022AB4F61BF0>, <app.database.models.Group object at 0x0000022AB4F61D00>, <app.database.models.Group object at 0x0000022AB4F61E10>, <app.database.models.Group object at 0x0000022AB4F61F20>, <app.database.models.Group object at 0x0000022AB4F62030>, <app.database.models.Group object at 0x0000022AB4F62140>, <app.database.models.Group object at 0x0000022AB4F62250>, <app.database.models.Group object at 0x0000022AB4F62360>, <app.database.models.Group object at 0x0000022AB4F62470>, <app.database.models.Group object at 0x0000022AB4F62580>, <app.database.models.Group object at 0x0000022AB4F62690>, <app.database.models.Group object at 0x0000022AB4F627A0>, <app.database.models.Group object at 0x0000022AB4F628B0>, <app.database.models.Group object at 0x0000022AB4F629C0>, <app.database.models.Group object at 0x0000022AB4F62AD0>, <app.database.models.Group object at 0x0000022AB4F62BE0>, <app.database.models.Group object at 0x0000022AB4F62CF0>, <app.database.models.Group object at 0x0000022AB4F62E00>, <app.database.models.Group object at 0x0000022AB4F62F10>, <app.database.models.Group object at 0x0000022AB4F63020>, <app.database.models.Group object at 0x0000022AB4F63130>, <app.database.models.Group object at 0x0000022AB4F63240>, <app.database.models.Group object at 0x0000022AB4F63350>, <app.database.models.Group object at 0x0000022AB4F63460>, <app.database.models.Group object at 0x0000022AB4F63570>, <app.database.models.Group object at 0x0000022AB4F63680>, <app.database.models.Group object at 0x0000022AB4F63790>, <app.database.models.Group object at 0x0000022AB4F638A0>, <app.database.models.Group object at 0x0000022AB4F639B0>]
2025-06-04 00:14:56,412 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 00:14:56,412 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 00:14:56,412 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:14:56,412 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 00:14:56,412 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 00:14:57,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 00:14:57,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 00:14:57,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 00:14:57,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.4965926897707809482161729
2025-06-04 00:14:57,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.4965926897707809482161729
2025-06-04 00:14:57,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 00:14:57,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.4965926897707809482161729')], HighestMarginPerLot=653.4965926897707809482161729
2025-06-04 00:14:57,066 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.50, ContributingOrders=1 (based on individual stored margins)
2025-06-04 00:14:57,066 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.50, AdditionalMargin=653.50
2025-06-04 00:14:57,071 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '7234787971', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8866300000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88663.000000000000000000'), 'margin': Decimal('653.4965926897707809482161729'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '3619474509', 'status': 'OPEN'}
2025-06-04 00:14:57,092 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 00:14:57,127 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 00:14:57,145 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '7234787971', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88663000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('88663.00000000'), 'margin': Decimal('653.49659269'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'close_id': '3619474509', 'status': 'OPEN'}
2025-06-04 00:14:57,149 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 7234787971 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 00:22:07,805 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:24:58,788 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:25:03,101 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:25:13,942 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:25:13,970 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000002D0C80B5010>, <app.database.models.Group object at 0x000002D0C81CC910>, <app.database.models.Group object at 0x000002D0C81CC2D0>, <app.database.models.Group object at 0x000002D0C811D220>, <app.database.models.Group object at 0x000002D0C811D350>, <app.database.models.Group object at 0x000002D0C81C85F0>, <app.database.models.Group object at 0x000002D0C8086CF0>, <app.database.models.Group object at 0x000002D0C8086E00>, <app.database.models.Group object at 0x000002D0C8086F10>, <app.database.models.Group object at 0x000002D0C8087020>, <app.database.models.Group object at 0x000002D0C8087130>, <app.database.models.Group object at 0x000002D0C8087240>, <app.database.models.Group object at 0x000002D0C8087350>, <app.database.models.Group object at 0x000002D0C8087460>, <app.database.models.Group object at 0x000002D0C8087570>, <app.database.models.Group object at 0x000002D0C8087680>, <app.database.models.Group object at 0x000002D0C8087790>, <app.database.models.Group object at 0x000002D0C80878A0>, <app.database.models.Group object at 0x000002D0C80879B0>, <app.database.models.Group object at 0x000002D0C8087AC0>, <app.database.models.Group object at 0x000002D0C8087BD0>, <app.database.models.Group object at 0x000002D0C8087CE0>, <app.database.models.Group object at 0x000002D0C8087DF0>, <app.database.models.Group object at 0x000002D0C8087F00>, <app.database.models.Group object at 0x000002D0C8214050>, <app.database.models.Group object at 0x000002D0C8214160>, <app.database.models.Group object at 0x000002D0C8214270>, <app.database.models.Group object at 0x000002D0C8214380>, <app.database.models.Group object at 0x000002D0C8214490>, <app.database.models.Group object at 0x000002D0C82145A0>, <app.database.models.Group object at 0x000002D0C82146B0>, <app.database.models.Group object at 0x000002D0C82147C0>, <app.database.models.Group object at 0x000002D0C82148D0>, <app.database.models.Group object at 0x000002D0C82149E0>, <app.database.models.Group object at 0x000002D0C8214AF0>, <app.database.models.Group object at 0x000002D0C8214C00>, <app.database.models.Group object at 0x000002D0C8214D10>, <app.database.models.Group object at 0x000002D0C8214E20>, <app.database.models.Group object at 0x000002D0C8214F30>, <app.database.models.Group object at 0x000002D0C8215040>, <app.database.models.Group object at 0x000002D0C8215150>, <app.database.models.Group object at 0x000002D0C8215260>, <app.database.models.Group object at 0x000002D0C8215370>, <app.database.models.Group object at 0x000002D0C8215480>, <app.database.models.Group object at 0x000002D0C8215590>, <app.database.models.Group object at 0x000002D0C82156A0>, <app.database.models.Group object at 0x000002D0C82157B0>, <app.database.models.Group object at 0x000002D0C82158C0>, <app.database.models.Group object at 0x000002D0C82159D0>, <app.database.models.Group object at 0x000002D0C8215AE0>, <app.database.models.Group object at 0x000002D0C8215BF0>, <app.database.models.Group object at 0x000002D0C8215D00>, <app.database.models.Group object at 0x000002D0C8215E10>, <app.database.models.Group object at 0x000002D0C8215F20>, <app.database.models.Group object at 0x000002D0C8216030>, <app.database.models.Group object at 0x000002D0C8216140>, <app.database.models.Group object at 0x000002D0C8216250>, <app.database.models.Group object at 0x000002D0C8216360>, <app.database.models.Group object at 0x000002D0C8216470>, <app.database.models.Group object at 0x000002D0C8216580>, <app.database.models.Group object at 0x000002D0C8216690>, <app.database.models.Group object at 0x000002D0C82167A0>, <app.database.models.Group object at 0x000002D0C82168B0>, <app.database.models.Group object at 0x000002D0C82169C0>, <app.database.models.Group object at 0x000002D0C8216AD0>, <app.database.models.Group object at 0x000002D0C8216BE0>, <app.database.models.Group object at 0x000002D0C8216CF0>, <app.database.models.Group object at 0x000002D0C8216E00>, <app.database.models.Group object at 0x000002D0C8216F10>, <app.database.models.Group object at 0x000002D0C8217020>, <app.database.models.Group object at 0x000002D0C8217130>, <app.database.models.Group object at 0x000002D0C8217240>, <app.database.models.Group object at 0x000002D0C8217350>, <app.database.models.Group object at 0x000002D0C8217460>, <app.database.models.Group object at 0x000002D0C8217570>, <app.database.models.Group object at 0x000002D0C8217680>, <app.database.models.Group object at 0x000002D0C8217790>, <app.database.models.Group object at 0x000002D0C82178A0>, <app.database.models.Group object at 0x000002D0C82179B0>]
2025-06-04 00:25:13,970 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 00:25:13,970 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 00:25:13,971 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:25:13,971 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 00:25:13,971 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 00:25:14,299 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 00:25:14,299 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 00:25:14,299 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 00:25:14,300 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.8517611383251691159318871
2025-06-04 00:25:14,300 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.8517611383251691159318871
2025-06-04 00:25:14,300 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 00:25:14,300 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.8517611383251691159318871')], HighestMarginPerLot=653.8517611383251691159318871
2025-06-04 00:25:14,300 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.85, ContributingOrders=1 (based on individual stored margins)
2025-06-04 00:25:14,300 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.85, AdditionalMargin=653.85
2025-06-04 00:25:14,319 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '4112665728', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8869800000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88698.000000000000000000'), 'margin': Decimal('653.8517611383251691159318871'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '8232206759', 'status': 'OPEN'}
2025-06-04 00:25:14,368 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 00:25:14,442 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 00:25:14,494 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '4112665728', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88698000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('88698.00000000'), 'margin': Decimal('653.85176114'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'close_id': '8232206759', 'status': 'OPEN'}
2025-06-04 00:25:14,503 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 4112665728 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 00:28:16,240 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:28:16,252 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000002D0C8086F10>, <app.database.models.Group object at 0x000002D0C8087020>, <app.database.models.Group object at 0x000002D0C8087130>, <app.database.models.Group object at 0x000002D0C8087240>, <app.database.models.Group object at 0x000002D0C8087350>, <app.database.models.Group object at 0x000002D0C8087460>, <app.database.models.Group object at 0x000002D0C8087570>, <app.database.models.Group object at 0x000002D0C8087680>, <app.database.models.Group object at 0x000002D0C8087790>, <app.database.models.Group object at 0x000002D0C80878A0>, <app.database.models.Group object at 0x000002D0C80879B0>, <app.database.models.Group object at 0x000002D0C8087AC0>, <app.database.models.Group object at 0x000002D0C8087BD0>, <app.database.models.Group object at 0x000002D0C8087CE0>, <app.database.models.Group object at 0x000002D0C8087DF0>, <app.database.models.Group object at 0x000002D0C8087F00>, <app.database.models.Group object at 0x000002D0C80858C0>, <app.database.models.Group object at 0x000002D0C8217BD0>, <app.database.models.Group object at 0x000002D0C8214050>, <app.database.models.Group object at 0x000002D0C8214160>, <app.database.models.Group object at 0x000002D0C8214270>, <app.database.models.Group object at 0x000002D0C8214380>, <app.database.models.Group object at 0x000002D0C8214490>, <app.database.models.Group object at 0x000002D0C82145A0>, <app.database.models.Group object at 0x000002D0C82146B0>, <app.database.models.Group object at 0x000002D0C82147C0>, <app.database.models.Group object at 0x000002D0C82148D0>, <app.database.models.Group object at 0x000002D0C82149E0>, <app.database.models.Group object at 0x000002D0C8214AF0>, <app.database.models.Group object at 0x000002D0C8214C00>, <app.database.models.Group object at 0x000002D0C8214D10>, <app.database.models.Group object at 0x000002D0C8214E20>, <app.database.models.Group object at 0x000002D0C8214F30>, <app.database.models.Group object at 0x000002D0C8215040>, <app.database.models.Group object at 0x000002D0C8215150>, <app.database.models.Group object at 0x000002D0C8215260>, <app.database.models.Group object at 0x000002D0C8215370>, <app.database.models.Group object at 0x000002D0C8215480>, <app.database.models.Group object at 0x000002D0C8215590>, <app.database.models.Group object at 0x000002D0C82156A0>, <app.database.models.Group object at 0x000002D0C82157B0>, <app.database.models.Group object at 0x000002D0C82158C0>, <app.database.models.Group object at 0x000002D0C82159D0>, <app.database.models.Group object at 0x000002D0C8215AE0>, <app.database.models.Group object at 0x000002D0C8215BF0>, <app.database.models.Group object at 0x000002D0C8215D00>, <app.database.models.Group object at 0x000002D0C8215E10>, <app.database.models.Group object at 0x000002D0C8215F20>, <app.database.models.Group object at 0x000002D0C8216030>, <app.database.models.Group object at 0x000002D0C8216140>, <app.database.models.Group object at 0x000002D0C8216250>, <app.database.models.Group object at 0x000002D0C8216360>, <app.database.models.Group object at 0x000002D0C8216470>, <app.database.models.Group object at 0x000002D0C8216580>, <app.database.models.Group object at 0x000002D0C8216690>, <app.database.models.Group object at 0x000002D0C82167A0>, <app.database.models.Group object at 0x000002D0C82168B0>, <app.database.models.Group object at 0x000002D0C82169C0>, <app.database.models.Group object at 0x000002D0C8216AD0>, <app.database.models.Group object at 0x000002D0C8216BE0>, <app.database.models.Group object at 0x000002D0C8216CF0>, <app.database.models.Group object at 0x000002D0C8216E00>, <app.database.models.Group object at 0x000002D0C8216F10>, <app.database.models.Group object at 0x000002D0C8217020>, <app.database.models.Group object at 0x000002D0C8217130>, <app.database.models.Group object at 0x000002D0C8217240>, <app.database.models.Group object at 0x000002D0C8217350>, <app.database.models.Group object at 0x000002D0C8217460>, <app.database.models.Group object at 0x000002D0C8217570>, <app.database.models.Group object at 0x000002D0C8217680>, <app.database.models.Group object at 0x000002D0C8217790>, <app.database.models.Group object at 0x000002D0C82178A0>, <app.database.models.Group object at 0x000002D0C82179B0>, <app.database.models.Group object at 0x000002D0C8217AC0>, <app.database.models.Group object at 0x000002D0C8217F00>, <app.database.models.Group object at 0x000002D0C825C050>, <app.database.models.Group object at 0x000002D0C825C270>, <app.database.models.Group object at 0x000002D0C825C490>, <app.database.models.Group object at 0x000002D0C825C5A0>]
2025-06-04 00:28:16,253 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 00:28:16,253 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 00:28:16,253 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:28:16,253 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 00:28:16,253 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 00:28:16,871 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 00:28:16,872 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 00:28:16,872 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 00:28:16,872 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=654.1391754456311741333430540
2025-06-04 00:28:16,872 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=654.1391754456311741333430540
2025-06-04 00:28:16,872 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 00:28:16,872 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.1391754456311741333430540')], HighestMarginPerLot=654.1391754456311741333430540
2025-06-04 00:28:16,872 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=654.14, ContributingOrders=1 (based on individual stored margins)
2025-06-04 00:28:16,872 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=654.14, AdditionalMargin=654.14
2025-06-04 00:28:16,877 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '6188940979', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8872500000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88725.000000000000000000'), 'margin': Decimal('654.1391754456311741333430540'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'close_id': '7337322511', 'status': 'OPEN'}
2025-06-04 00:28:16,925 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 00:28:17,097 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 00:28:17,257 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '6188940979', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88725000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('88725.00000000'), 'margin': Decimal('654.13917545'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'close_id': '7337322511', 'status': 'OPEN'}
2025-06-04 00:28:17,272 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 6188940979 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 00:36:26,280 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:38:09,107 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:38:09,132 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001D5B26174D0>, <app.database.models.Group object at 0x000001D5B2657250>, <app.database.models.Group object at 0x000001D5B2656990>, <app.database.models.Group object at 0x000001D5B148F490>, <app.database.models.Group object at 0x000001D5B2874FC0>, <app.database.models.Group object at 0x000001D5B2904050>, <app.database.models.Group object at 0x000001D5B26329C0>, <app.database.models.Group object at 0x000001D5B2632AD0>, <app.database.models.Group object at 0x000001D5B2632BE0>, <app.database.models.Group object at 0x000001D5B2632CF0>, <app.database.models.Group object at 0x000001D5B2632E00>, <app.database.models.Group object at 0x000001D5B2632F10>, <app.database.models.Group object at 0x000001D5B2633020>, <app.database.models.Group object at 0x000001D5B2633130>, <app.database.models.Group object at 0x000001D5B2633240>, <app.database.models.Group object at 0x000001D5B2633350>, <app.database.models.Group object at 0x000001D5B2633460>, <app.database.models.Group object at 0x000001D5B2633570>, <app.database.models.Group object at 0x000001D5B2633680>, <app.database.models.Group object at 0x000001D5B2633790>, <app.database.models.Group object at 0x000001D5B26338A0>, <app.database.models.Group object at 0x000001D5B26339B0>, <app.database.models.Group object at 0x000001D5B2633AC0>, <app.database.models.Group object at 0x000001D5B2633BD0>, <app.database.models.Group object at 0x000001D5B2633CE0>, <app.database.models.Group object at 0x000001D5B2633DF0>, <app.database.models.Group object at 0x000001D5B2633F00>, <app.database.models.Group object at 0x000001D5B296C050>, <app.database.models.Group object at 0x000001D5B296C160>, <app.database.models.Group object at 0x000001D5B296C270>, <app.database.models.Group object at 0x000001D5B296C380>, <app.database.models.Group object at 0x000001D5B296C490>, <app.database.models.Group object at 0x000001D5B296C5A0>, <app.database.models.Group object at 0x000001D5B296C6B0>, <app.database.models.Group object at 0x000001D5B296C7C0>, <app.database.models.Group object at 0x000001D5B296C8D0>, <app.database.models.Group object at 0x000001D5B296C9E0>, <app.database.models.Group object at 0x000001D5B296CAF0>, <app.database.models.Group object at 0x000001D5B296CC00>, <app.database.models.Group object at 0x000001D5B296CD10>, <app.database.models.Group object at 0x000001D5B296CE20>, <app.database.models.Group object at 0x000001D5B296CF30>, <app.database.models.Group object at 0x000001D5B296D040>, <app.database.models.Group object at 0x000001D5B296D150>, <app.database.models.Group object at 0x000001D5B296D260>, <app.database.models.Group object at 0x000001D5B296D370>, <app.database.models.Group object at 0x000001D5B296D480>, <app.database.models.Group object at 0x000001D5B296D590>, <app.database.models.Group object at 0x000001D5B296D6A0>, <app.database.models.Group object at 0x000001D5B296D7B0>, <app.database.models.Group object at 0x000001D5B296D8C0>, <app.database.models.Group object at 0x000001D5B296D9D0>, <app.database.models.Group object at 0x000001D5B296DAE0>, <app.database.models.Group object at 0x000001D5B296DBF0>, <app.database.models.Group object at 0x000001D5B296DD00>, <app.database.models.Group object at 0x000001D5B296DE10>, <app.database.models.Group object at 0x000001D5B296DF20>, <app.database.models.Group object at 0x000001D5B296E030>, <app.database.models.Group object at 0x000001D5B296E140>, <app.database.models.Group object at 0x000001D5B296E250>, <app.database.models.Group object at 0x000001D5B296E360>, <app.database.models.Group object at 0x000001D5B296E470>, <app.database.models.Group object at 0x000001D5B296E580>, <app.database.models.Group object at 0x000001D5B296E690>, <app.database.models.Group object at 0x000001D5B296E7A0>, <app.database.models.Group object at 0x000001D5B296E8B0>, <app.database.models.Group object at 0x000001D5B296E9C0>, <app.database.models.Group object at 0x000001D5B296EAD0>, <app.database.models.Group object at 0x000001D5B296EBE0>, <app.database.models.Group object at 0x000001D5B296ECF0>, <app.database.models.Group object at 0x000001D5B296EE00>, <app.database.models.Group object at 0x000001D5B296EF10>, <app.database.models.Group object at 0x000001D5B296F020>, <app.database.models.Group object at 0x000001D5B296F130>, <app.database.models.Group object at 0x000001D5B296F240>, <app.database.models.Group object at 0x000001D5B296F350>, <app.database.models.Group object at 0x000001D5B296F460>, <app.database.models.Group object at 0x000001D5B296F570>, <app.database.models.Group object at 0x000001D5B296F680>]
2025-06-04 00:38:09,132 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 00:38:09,132 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 00:38:09,132 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:38:09,132 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 00:38:09,132 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 00:38:09,144 - app.services.order_processing - ERROR - Error processing new order: Failed to get market data
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 179, in process_new_order
    raise OrderProcessingError("Failed to get market data")
app.services.order_processing.OrderProcessingError: Failed to get market data
2025-06-04 00:38:09,145 - ERROR - orders - Order processing error: Failed to process order: Failed to get market data
2025-06-04 00:40:38,520 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:42:56,189 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:43:17,245 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:43:17,300 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000012E58815160>, <app.database.models.Group object at 0x0000012E5892C910>, <app.database.models.Group object at 0x0000012E5892C2D0>, <app.database.models.Group object at 0x0000012E588A10F0>, <app.database.models.Group object at 0x0000012E588A1220>, <app.database.models.Group object at 0x0000012E589285F0>, <app.database.models.Group object at 0x0000012E587E2CF0>, <app.database.models.Group object at 0x0000012E587E2E00>, <app.database.models.Group object at 0x0000012E587E2F10>, <app.database.models.Group object at 0x0000012E587E3020>, <app.database.models.Group object at 0x0000012E587E3130>, <app.database.models.Group object at 0x0000012E587E3240>, <app.database.models.Group object at 0x0000012E587E3350>, <app.database.models.Group object at 0x0000012E587E3460>, <app.database.models.Group object at 0x0000012E587E3570>, <app.database.models.Group object at 0x0000012E587E3680>, <app.database.models.Group object at 0x0000012E587E3790>, <app.database.models.Group object at 0x0000012E587E38A0>, <app.database.models.Group object at 0x0000012E587E39B0>, <app.database.models.Group object at 0x0000012E587E3AC0>, <app.database.models.Group object at 0x0000012E587E3BD0>, <app.database.models.Group object at 0x0000012E587E3CE0>, <app.database.models.Group object at 0x0000012E587E3DF0>, <app.database.models.Group object at 0x0000012E587E3F00>, <app.database.models.Group object at 0x0000012E58974050>, <app.database.models.Group object at 0x0000012E58974160>, <app.database.models.Group object at 0x0000012E58974270>, <app.database.models.Group object at 0x0000012E58974380>, <app.database.models.Group object at 0x0000012E58974490>, <app.database.models.Group object at 0x0000012E589745A0>, <app.database.models.Group object at 0x0000012E589746B0>, <app.database.models.Group object at 0x0000012E589747C0>, <app.database.models.Group object at 0x0000012E589748D0>, <app.database.models.Group object at 0x0000012E589749E0>, <app.database.models.Group object at 0x0000012E58974AF0>, <app.database.models.Group object at 0x0000012E58974C00>, <app.database.models.Group object at 0x0000012E58974D10>, <app.database.models.Group object at 0x0000012E58974E20>, <app.database.models.Group object at 0x0000012E58974F30>, <app.database.models.Group object at 0x0000012E58975040>, <app.database.models.Group object at 0x0000012E58975150>, <app.database.models.Group object at 0x0000012E58975260>, <app.database.models.Group object at 0x0000012E58975370>, <app.database.models.Group object at 0x0000012E58975480>, <app.database.models.Group object at 0x0000012E58975590>, <app.database.models.Group object at 0x0000012E589756A0>, <app.database.models.Group object at 0x0000012E589757B0>, <app.database.models.Group object at 0x0000012E589758C0>, <app.database.models.Group object at 0x0000012E589759D0>, <app.database.models.Group object at 0x0000012E58975AE0>, <app.database.models.Group object at 0x0000012E58975BF0>, <app.database.models.Group object at 0x0000012E58975D00>, <app.database.models.Group object at 0x0000012E58975E10>, <app.database.models.Group object at 0x0000012E58975F20>, <app.database.models.Group object at 0x0000012E58976030>, <app.database.models.Group object at 0x0000012E58976140>, <app.database.models.Group object at 0x0000012E58976250>, <app.database.models.Group object at 0x0000012E58976360>, <app.database.models.Group object at 0x0000012E58976470>, <app.database.models.Group object at 0x0000012E58976580>, <app.database.models.Group object at 0x0000012E58976690>, <app.database.models.Group object at 0x0000012E589767A0>, <app.database.models.Group object at 0x0000012E589768B0>, <app.database.models.Group object at 0x0000012E589769C0>, <app.database.models.Group object at 0x0000012E58976AD0>, <app.database.models.Group object at 0x0000012E58976BE0>, <app.database.models.Group object at 0x0000012E58976CF0>, <app.database.models.Group object at 0x0000012E58976E00>, <app.database.models.Group object at 0x0000012E58976F10>, <app.database.models.Group object at 0x0000012E58977020>, <app.database.models.Group object at 0x0000012E58977130>, <app.database.models.Group object at 0x0000012E58977240>, <app.database.models.Group object at 0x0000012E58977350>, <app.database.models.Group object at 0x0000012E58977460>, <app.database.models.Group object at 0x0000012E58977570>, <app.database.models.Group object at 0x0000012E58977680>, <app.database.models.Group object at 0x0000012E58977790>, <app.database.models.Group object at 0x0000012E589778A0>, <app.database.models.Group object at 0x0000012E589779B0>]
2025-06-04 00:43:17,301 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 00:43:17,301 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 00:43:17,301 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:43:17,302 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 00:43:17,302 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 00:43:17,616 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 00:43:17,617 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 00:43:17,617 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 00:43:17,617 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=654.0932325125236070905126840
2025-06-04 00:43:17,617 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=654.0932325125236070905126840
2025-06-04 00:43:17,617 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 00:43:17,617 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.0932325125236070905126840')], HighestMarginPerLot=654.0932325125236070905126840
2025-06-04 00:43:17,617 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=654.09, ContributingOrders=1 (based on individual stored margins)
2025-06-04 00:43:17,618 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=654.09, AdditionalMargin=654.09
2025-06-04 00:43:17,653 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '9347759820', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8870300000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88703.000000000000000000'), 'margin': Decimal('654.0932325125236070905126840'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'close_id': '1745010916', 'status': 'OPEN'}
2025-06-04 00:43:17,695 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 00:43:17,776 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 00:43:17,828 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '9347759820', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88703000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('88703.00000000'), 'margin': Decimal('654.09323251'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'OPEN'}
2025-06-04 00:43:18,127 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 9347759820 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 00:48:55,296 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:50:34,055 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:50:34,071 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000016CA1925160>, <app.database.models.Group object at 0x0000016CA1A3C910>, <app.database.models.Group object at 0x0000016CA1A3C2D0>, <app.database.models.Group object at 0x0000016CA19B10F0>, <app.database.models.Group object at 0x0000016CA19B1220>, <app.database.models.Group object at 0x0000016CA1A385F0>, <app.database.models.Group object at 0x0000016CA18F2CF0>, <app.database.models.Group object at 0x0000016CA18F2E00>, <app.database.models.Group object at 0x0000016CA18F2F10>, <app.database.models.Group object at 0x0000016CA18F3020>, <app.database.models.Group object at 0x0000016CA18F3130>, <app.database.models.Group object at 0x0000016CA18F3240>, <app.database.models.Group object at 0x0000016CA18F3350>, <app.database.models.Group object at 0x0000016CA18F3460>, <app.database.models.Group object at 0x0000016CA18F3570>, <app.database.models.Group object at 0x0000016CA18F3680>, <app.database.models.Group object at 0x0000016CA18F3790>, <app.database.models.Group object at 0x0000016CA18F38A0>, <app.database.models.Group object at 0x0000016CA18F39B0>, <app.database.models.Group object at 0x0000016CA18F3AC0>, <app.database.models.Group object at 0x0000016CA18F3BD0>, <app.database.models.Group object at 0x0000016CA18F3CE0>, <app.database.models.Group object at 0x0000016CA18F3DF0>, <app.database.models.Group object at 0x0000016CA18F3F00>, <app.database.models.Group object at 0x0000016CA1A84050>, <app.database.models.Group object at 0x0000016CA1A84160>, <app.database.models.Group object at 0x0000016CA1A84270>, <app.database.models.Group object at 0x0000016CA1A84380>, <app.database.models.Group object at 0x0000016CA1A84490>, <app.database.models.Group object at 0x0000016CA1A845A0>, <app.database.models.Group object at 0x0000016CA1A846B0>, <app.database.models.Group object at 0x0000016CA1A847C0>, <app.database.models.Group object at 0x0000016CA1A848D0>, <app.database.models.Group object at 0x0000016CA1A849E0>, <app.database.models.Group object at 0x0000016CA1A84AF0>, <app.database.models.Group object at 0x0000016CA1A84C00>, <app.database.models.Group object at 0x0000016CA1A84D10>, <app.database.models.Group object at 0x0000016CA1A84E20>, <app.database.models.Group object at 0x0000016CA1A84F30>, <app.database.models.Group object at 0x0000016CA1A85040>, <app.database.models.Group object at 0x0000016CA1A85150>, <app.database.models.Group object at 0x0000016CA1A85260>, <app.database.models.Group object at 0x0000016CA1A85370>, <app.database.models.Group object at 0x0000016CA1A85480>, <app.database.models.Group object at 0x0000016CA1A85590>, <app.database.models.Group object at 0x0000016CA1A856A0>, <app.database.models.Group object at 0x0000016CA1A857B0>, <app.database.models.Group object at 0x0000016CA1A858C0>, <app.database.models.Group object at 0x0000016CA1A859D0>, <app.database.models.Group object at 0x0000016CA1A85AE0>, <app.database.models.Group object at 0x0000016CA1A85BF0>, <app.database.models.Group object at 0x0000016CA1A85D00>, <app.database.models.Group object at 0x0000016CA1A85E10>, <app.database.models.Group object at 0x0000016CA1A85F20>, <app.database.models.Group object at 0x0000016CA1A86030>, <app.database.models.Group object at 0x0000016CA1A86140>, <app.database.models.Group object at 0x0000016CA1A86250>, <app.database.models.Group object at 0x0000016CA1A86360>, <app.database.models.Group object at 0x0000016CA1A86470>, <app.database.models.Group object at 0x0000016CA1A86580>, <app.database.models.Group object at 0x0000016CA1A86690>, <app.database.models.Group object at 0x0000016CA1A867A0>, <app.database.models.Group object at 0x0000016CA1A868B0>, <app.database.models.Group object at 0x0000016CA1A869C0>, <app.database.models.Group object at 0x0000016CA1A86AD0>, <app.database.models.Group object at 0x0000016CA1A86BE0>, <app.database.models.Group object at 0x0000016CA1A86CF0>, <app.database.models.Group object at 0x0000016CA1A86E00>, <app.database.models.Group object at 0x0000016CA1A86F10>, <app.database.models.Group object at 0x0000016CA1A87020>, <app.database.models.Group object at 0x0000016CA1A87130>, <app.database.models.Group object at 0x0000016CA1A87240>, <app.database.models.Group object at 0x0000016CA1A87350>, <app.database.models.Group object at 0x0000016CA1A87460>, <app.database.models.Group object at 0x0000016CA1A87570>, <app.database.models.Group object at 0x0000016CA1A87680>, <app.database.models.Group object at 0x0000016CA1A87790>, <app.database.models.Group object at 0x0000016CA1A878A0>, <app.database.models.Group object at 0x0000016CA1A879B0>]
2025-06-04 00:50:34,072 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 00:50:34,072 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 00:50:34,072 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:50:34,072 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 00:50:34,072 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 00:50:34,693 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 00:50:34,693 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 00:50:34,693 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 00:50:34,693 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=654.0085311167013015421634037
2025-06-04 00:50:34,693 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=654.0085311167013015421634037
2025-06-04 00:50:34,694 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 00:50:34,694 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.0085311167013015421634037')], HighestMarginPerLot=654.0085311167013015421634037
2025-06-04 00:50:34,694 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=654.01, ContributingOrders=1 (based on individual stored margins)
2025-06-04 00:50:34,694 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=654.01, AdditionalMargin=654.01
2025-06-04 00:50:34,702 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '7220350990', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8869400000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88694.000000000000000000'), 'margin': Decimal('654.0085311167013015421634037'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'close_id': '7112366871', 'status': 'OPEN'}
2025-06-04 00:50:34,724 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 00:50:34,785 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 00:50:34,861 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '7220350990', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88694000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('88694.00000000'), 'margin': Decimal('654.00853112'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'OPEN'}
2025-06-04 00:50:35,147 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 7220350990 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 00:52:33,963 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:52:59,934 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:52:59,941 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001D733A75160>, <app.database.models.Group object at 0x000001D733B88A50>, <app.database.models.Group object at 0x000001D733B88410>, <app.database.models.Group object at 0x000001D733B04FC0>, <app.database.models.Group object at 0x000001D733B050F0>, <app.database.models.Group object at 0x000001D733B8C5F0>, <app.database.models.Group object at 0x000001D733A2EE00>, <app.database.models.Group object at 0x000001D733A2EF10>, <app.database.models.Group object at 0x000001D733A2F020>, <app.database.models.Group object at 0x000001D733A2F130>, <app.database.models.Group object at 0x000001D733A2F240>, <app.database.models.Group object at 0x000001D733A2F350>, <app.database.models.Group object at 0x000001D733A2F460>, <app.database.models.Group object at 0x000001D733A2F570>, <app.database.models.Group object at 0x000001D733A2F680>, <app.database.models.Group object at 0x000001D733A2F790>, <app.database.models.Group object at 0x000001D733A2F8A0>, <app.database.models.Group object at 0x000001D733A2F9B0>, <app.database.models.Group object at 0x000001D733A2FAC0>, <app.database.models.Group object at 0x000001D733A2FBD0>, <app.database.models.Group object at 0x000001D733A2FCE0>, <app.database.models.Group object at 0x000001D733A2FDF0>, <app.database.models.Group object at 0x000001D733A2FF00>, <app.database.models.Group object at 0x000001D733BD4050>, <app.database.models.Group object at 0x000001D733BD4160>, <app.database.models.Group object at 0x000001D733BD4270>, <app.database.models.Group object at 0x000001D733BD4380>, <app.database.models.Group object at 0x000001D733BD4490>, <app.database.models.Group object at 0x000001D733BD45A0>, <app.database.models.Group object at 0x000001D733BD46B0>, <app.database.models.Group object at 0x000001D733BD47C0>, <app.database.models.Group object at 0x000001D733BD48D0>, <app.database.models.Group object at 0x000001D733BD49E0>, <app.database.models.Group object at 0x000001D733BD4AF0>, <app.database.models.Group object at 0x000001D733BD4C00>, <app.database.models.Group object at 0x000001D733BD4D10>, <app.database.models.Group object at 0x000001D733BD4E20>, <app.database.models.Group object at 0x000001D733BD4F30>, <app.database.models.Group object at 0x000001D733BD5040>, <app.database.models.Group object at 0x000001D733BD5150>, <app.database.models.Group object at 0x000001D733BD5260>, <app.database.models.Group object at 0x000001D733BD5370>, <app.database.models.Group object at 0x000001D733BD5480>, <app.database.models.Group object at 0x000001D733BD5590>, <app.database.models.Group object at 0x000001D733BD56A0>, <app.database.models.Group object at 0x000001D733BD57B0>, <app.database.models.Group object at 0x000001D733BD58C0>, <app.database.models.Group object at 0x000001D733BD59D0>, <app.database.models.Group object at 0x000001D733BD5AE0>, <app.database.models.Group object at 0x000001D733BD5BF0>, <app.database.models.Group object at 0x000001D733BD5D00>, <app.database.models.Group object at 0x000001D733BD5E10>, <app.database.models.Group object at 0x000001D733BD5F20>, <app.database.models.Group object at 0x000001D733BD6030>, <app.database.models.Group object at 0x000001D733BD6140>, <app.database.models.Group object at 0x000001D733BD6250>, <app.database.models.Group object at 0x000001D733BD6360>, <app.database.models.Group object at 0x000001D733BD6470>, <app.database.models.Group object at 0x000001D733BD6580>, <app.database.models.Group object at 0x000001D733BD6690>, <app.database.models.Group object at 0x000001D733BD67A0>, <app.database.models.Group object at 0x000001D733BD68B0>, <app.database.models.Group object at 0x000001D733BD69C0>, <app.database.models.Group object at 0x000001D733BD6AD0>, <app.database.models.Group object at 0x000001D733BD6BE0>, <app.database.models.Group object at 0x000001D733BD6CF0>, <app.database.models.Group object at 0x000001D733BD6E00>, <app.database.models.Group object at 0x000001D733BD6F10>, <app.database.models.Group object at 0x000001D733BD7020>, <app.database.models.Group object at 0x000001D733BD7130>, <app.database.models.Group object at 0x000001D733BD7240>, <app.database.models.Group object at 0x000001D733BD7350>, <app.database.models.Group object at 0x000001D733BD7460>, <app.database.models.Group object at 0x000001D733BD7570>, <app.database.models.Group object at 0x000001D733BD7680>, <app.database.models.Group object at 0x000001D733BD7790>, <app.database.models.Group object at 0x000001D733BD78A0>, <app.database.models.Group object at 0x000001D733BD79B0>, <app.database.models.Group object at 0x000001D733BD7AC0>]
2025-06-04 00:52:59,941 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 00:52:59,941 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 00:52:59,941 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:52:59,941 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 00:52:59,941 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 00:53:00,250 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 00:53:00,250 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 00:53:00,250 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 00:53:00,250 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=654.1075413087546850617626041
2025-06-04 00:53:00,250 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=654.1075413087546850617626041
2025-06-04 00:53:00,250 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 00:53:00,250 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.1075413087546850617626041')], HighestMarginPerLot=654.1075413087546850617626041
2025-06-04 00:53:00,250 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=654.11, ContributingOrders=1 (based on individual stored margins)
2025-06-04 00:53:00,250 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=654.11, AdditionalMargin=654.11
2025-06-04 00:53:00,258 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '7361234532', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8870300000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88703.000000000000000000'), 'margin': Decimal('654.1075413087546850617626041'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'close_id': '1191104349', 'status': 'OPEN'}
2025-06-04 00:53:00,276 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 00:53:00,308 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 00:53:00,327 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '7361234532', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88703000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('88703.00000000'), 'margin': Decimal('654.10754131'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'OPEN'}
2025-06-04 00:53:00,618 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 7361234532 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 00:54:13,466 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:54:44,489 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:54:44,499 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000019656C45160>, <app.database.models.Group object at 0x0000019656D5C910>, <app.database.models.Group object at 0x0000019656D5C2D0>, <app.database.models.Group object at 0x0000019656CD4FC0>, <app.database.models.Group object at 0x0000019656CD50F0>, <app.database.models.Group object at 0x0000019656D585F0>, <app.database.models.Group object at 0x0000019656C13020>, <app.database.models.Group object at 0x0000019656C13130>, <app.database.models.Group object at 0x0000019656C13240>, <app.database.models.Group object at 0x0000019656C13350>, <app.database.models.Group object at 0x0000019656C13460>, <app.database.models.Group object at 0x0000019656C13570>, <app.database.models.Group object at 0x0000019656C13680>, <app.database.models.Group object at 0x0000019656C13790>, <app.database.models.Group object at 0x0000019656C138A0>, <app.database.models.Group object at 0x0000019656C139B0>, <app.database.models.Group object at 0x0000019656C13AC0>, <app.database.models.Group object at 0x0000019656C13BD0>, <app.database.models.Group object at 0x0000019656C13CE0>, <app.database.models.Group object at 0x0000019656C13DF0>, <app.database.models.Group object at 0x0000019656C13F00>, <app.database.models.Group object at 0x0000019656DA4050>, <app.database.models.Group object at 0x0000019656DA4160>, <app.database.models.Group object at 0x0000019656DA4270>, <app.database.models.Group object at 0x0000019656DA4380>, <app.database.models.Group object at 0x0000019656DA4490>, <app.database.models.Group object at 0x0000019656DA45A0>, <app.database.models.Group object at 0x0000019656DA46B0>, <app.database.models.Group object at 0x0000019656DA47C0>, <app.database.models.Group object at 0x0000019656DA48D0>, <app.database.models.Group object at 0x0000019656DA49E0>, <app.database.models.Group object at 0x0000019656DA4AF0>, <app.database.models.Group object at 0x0000019656DA4C00>, <app.database.models.Group object at 0x0000019656DA4D10>, <app.database.models.Group object at 0x0000019656DA4E20>, <app.database.models.Group object at 0x0000019656DA4F30>, <app.database.models.Group object at 0x0000019656DA5040>, <app.database.models.Group object at 0x0000019656DA5150>, <app.database.models.Group object at 0x0000019656DA5260>, <app.database.models.Group object at 0x0000019656DA5370>, <app.database.models.Group object at 0x0000019656DA5480>, <app.database.models.Group object at 0x0000019656DA5590>, <app.database.models.Group object at 0x0000019656DA56A0>, <app.database.models.Group object at 0x0000019656DA57B0>, <app.database.models.Group object at 0x0000019656DA58C0>, <app.database.models.Group object at 0x0000019656DA59D0>, <app.database.models.Group object at 0x0000019656DA5AE0>, <app.database.models.Group object at 0x0000019656DA5BF0>, <app.database.models.Group object at 0x0000019656DA5D00>, <app.database.models.Group object at 0x0000019656DA5E10>, <app.database.models.Group object at 0x0000019656DA5F20>, <app.database.models.Group object at 0x0000019656DA6030>, <app.database.models.Group object at 0x0000019656DA6140>, <app.database.models.Group object at 0x0000019656DA6250>, <app.database.models.Group object at 0x0000019656DA6360>, <app.database.models.Group object at 0x0000019656DA6470>, <app.database.models.Group object at 0x0000019656DA6580>, <app.database.models.Group object at 0x0000019656DA6690>, <app.database.models.Group object at 0x0000019656DA67A0>, <app.database.models.Group object at 0x0000019656DA68B0>, <app.database.models.Group object at 0x0000019656DA69C0>, <app.database.models.Group object at 0x0000019656DA6AD0>, <app.database.models.Group object at 0x0000019656DA6BE0>, <app.database.models.Group object at 0x0000019656DA6CF0>, <app.database.models.Group object at 0x0000019656DA6E00>, <app.database.models.Group object at 0x0000019656DA6F10>, <app.database.models.Group object at 0x0000019656DA7020>, <app.database.models.Group object at 0x0000019656DA7130>, <app.database.models.Group object at 0x0000019656DA7240>, <app.database.models.Group object at 0x0000019656DA7350>, <app.database.models.Group object at 0x0000019656DA7460>, <app.database.models.Group object at 0x0000019656DA7570>, <app.database.models.Group object at 0x0000019656DA7680>, <app.database.models.Group object at 0x0000019656DA7790>, <app.database.models.Group object at 0x0000019656DA78A0>, <app.database.models.Group object at 0x0000019656DA79B0>, <app.database.models.Group object at 0x0000019656DA7AC0>, <app.database.models.Group object at 0x0000019656DA7BD0>, <app.database.models.Group object at 0x0000019656DA7CE0>]
2025-06-04 00:54:44,499 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 00:54:44,499 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 00:54:44,499 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:54:44,499 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 00:54:44,499 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 00:54:44,807 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 00:54:44,807 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 00:54:44,807 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 00:54:44,807 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.8565274122886946633329203
2025-06-04 00:54:44,807 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.8565274122886946633329203
2025-06-04 00:54:44,807 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 00:54:44,807 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.8565274122886946633329203')], HighestMarginPerLot=653.8565274122886946633329203
2025-06-04 00:54:44,807 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.86, ContributingOrders=1 (based on individual stored margins)
2025-06-04 00:54:44,807 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.86, AdditionalMargin=653.86
2025-06-04 00:54:44,814 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '2001449270', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8869800000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88698.000000000000000000'), 'margin': Decimal('653.8565274122886946633329203'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'close_id': '4134034480', 'status': 'OPEN'}
2025-06-04 00:54:44,829 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 00:54:44,859 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 00:54:44,877 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '2001449270', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88698000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('88698.00000000'), 'margin': Decimal('653.85652741'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'OPEN'}
2025-06-04 00:54:45,468 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 2001449270 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 01:00:44,315 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 01:01:11,607 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 01:01:11,621 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001F1E9AC5010>, <app.database.models.Group object at 0x000001F1E9A97D90>, <app.database.models.Group object at 0x000001F1E9BDC7D0>, <app.database.models.Group object at 0x000001F1E9B4D0F0>, <app.database.models.Group object at 0x000001F1E9B4D220>, <app.database.models.Group object at 0x000001F1E9BD85F0>, <app.database.models.Group object at 0x000001F1E9A92CF0>, <app.database.models.Group object at 0x000001F1E9A92E00>, <app.database.models.Group object at 0x000001F1E9A92F10>, <app.database.models.Group object at 0x000001F1E9A93020>, <app.database.models.Group object at 0x000001F1E9A93130>, <app.database.models.Group object at 0x000001F1E9A93240>, <app.database.models.Group object at 0x000001F1E9A93350>, <app.database.models.Group object at 0x000001F1E9A93460>, <app.database.models.Group object at 0x000001F1E9A93570>, <app.database.models.Group object at 0x000001F1E9A93680>, <app.database.models.Group object at 0x000001F1E9A93790>, <app.database.models.Group object at 0x000001F1E9A938A0>, <app.database.models.Group object at 0x000001F1E9A939B0>, <app.database.models.Group object at 0x000001F1E9A93AC0>, <app.database.models.Group object at 0x000001F1E9A93BD0>, <app.database.models.Group object at 0x000001F1E9A93CE0>, <app.database.models.Group object at 0x000001F1E9A93DF0>, <app.database.models.Group object at 0x000001F1E9A93F00>, <app.database.models.Group object at 0x000001F1E9C24050>, <app.database.models.Group object at 0x000001F1E9C24160>, <app.database.models.Group object at 0x000001F1E9C24270>, <app.database.models.Group object at 0x000001F1E9C24380>, <app.database.models.Group object at 0x000001F1E9C24490>, <app.database.models.Group object at 0x000001F1E9C245A0>, <app.database.models.Group object at 0x000001F1E9C246B0>, <app.database.models.Group object at 0x000001F1E9C247C0>, <app.database.models.Group object at 0x000001F1E9C248D0>, <app.database.models.Group object at 0x000001F1E9C249E0>, <app.database.models.Group object at 0x000001F1E9C24AF0>, <app.database.models.Group object at 0x000001F1E9C24C00>, <app.database.models.Group object at 0x000001F1E9C24D10>, <app.database.models.Group object at 0x000001F1E9C24E20>, <app.database.models.Group object at 0x000001F1E9C24F30>, <app.database.models.Group object at 0x000001F1E9C25040>, <app.database.models.Group object at 0x000001F1E9C25150>, <app.database.models.Group object at 0x000001F1E9C25260>, <app.database.models.Group object at 0x000001F1E9C25370>, <app.database.models.Group object at 0x000001F1E9C25480>, <app.database.models.Group object at 0x000001F1E9C25590>, <app.database.models.Group object at 0x000001F1E9C256A0>, <app.database.models.Group object at 0x000001F1E9C257B0>, <app.database.models.Group object at 0x000001F1E9C258C0>, <app.database.models.Group object at 0x000001F1E9C259D0>, <app.database.models.Group object at 0x000001F1E9C25AE0>, <app.database.models.Group object at 0x000001F1E9C25BF0>, <app.database.models.Group object at 0x000001F1E9C25D00>, <app.database.models.Group object at 0x000001F1E9C25E10>, <app.database.models.Group object at 0x000001F1E9C25F20>, <app.database.models.Group object at 0x000001F1E9C26030>, <app.database.models.Group object at 0x000001F1E9C26140>, <app.database.models.Group object at 0x000001F1E9C26250>, <app.database.models.Group object at 0x000001F1E9C26360>, <app.database.models.Group object at 0x000001F1E9C26470>, <app.database.models.Group object at 0x000001F1E9C26580>, <app.database.models.Group object at 0x000001F1E9C26690>, <app.database.models.Group object at 0x000001F1E9C267A0>, <app.database.models.Group object at 0x000001F1E9C268B0>, <app.database.models.Group object at 0x000001F1E9C269C0>, <app.database.models.Group object at 0x000001F1E9C26AD0>, <app.database.models.Group object at 0x000001F1E9C26BE0>, <app.database.models.Group object at 0x000001F1E9C26CF0>, <app.database.models.Group object at 0x000001F1E9C26E00>, <app.database.models.Group object at 0x000001F1E9C26F10>, <app.database.models.Group object at 0x000001F1E9C27020>, <app.database.models.Group object at 0x000001F1E9C27130>, <app.database.models.Group object at 0x000001F1E9C27240>, <app.database.models.Group object at 0x000001F1E9C27350>, <app.database.models.Group object at 0x000001F1E9C27460>, <app.database.models.Group object at 0x000001F1E9C27570>, <app.database.models.Group object at 0x000001F1E9C27680>, <app.database.models.Group object at 0x000001F1E9C27790>, <app.database.models.Group object at 0x000001F1E9C278A0>, <app.database.models.Group object at 0x000001F1E9C279B0>]
2025-06-04 01:01:11,622 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 01:01:11,622 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 01:01:11,622 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 01:01:11,623 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 01:01:11,623 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 01:01:11,949 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 01:01:11,949 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 01:01:11,949 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 01:01:11,949 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.4191554347112980471341201
2025-06-04 01:01:11,949 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.4191554347112980471341201
2025-06-04 01:01:11,949 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 01:01:11,949 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.4191554347112980471341201')], HighestMarginPerLot=653.4191554347112980471341201
2025-06-04 01:01:11,949 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.42, ContributingOrders=1 (based on individual stored margins)
2025-06-04 01:01:11,949 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.42, AdditionalMargin=653.42
2025-06-04 01:01:11,970 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '5106803106', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8863800000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88638.000000000000000000'), 'margin': Decimal('653.4191554347112980471341201'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-04 01:01:12,021 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 01:01:12,112 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 01:01:12,167 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '5106803106', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88638000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('88638.00000000'), 'margin': Decimal('653.41915543'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'OPEN'}
2025-06-04 01:01:12,780 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 5106803106 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 01:06:22,602 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 01:06:30,021 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 01:06:30,037 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000020E0C285160>, <app.database.models.Group object at 0x0000020E0C398A50>, <app.database.models.Group object at 0x0000020E0C398410>, <app.database.models.Group object at 0x0000020E0C314FC0>, <app.database.models.Group object at 0x0000020E0C3150F0>, <app.database.models.Group object at 0x0000020E0C39C710>, <app.database.models.Group object at 0x0000020E0C252F10>, <app.database.models.Group object at 0x0000020E0C253020>, <app.database.models.Group object at 0x0000020E0C253130>, <app.database.models.Group object at 0x0000020E0C253240>, <app.database.models.Group object at 0x0000020E0C253350>, <app.database.models.Group object at 0x0000020E0C253460>, <app.database.models.Group object at 0x0000020E0C253570>, <app.database.models.Group object at 0x0000020E0C253680>, <app.database.models.Group object at 0x0000020E0C253790>, <app.database.models.Group object at 0x0000020E0C2538A0>, <app.database.models.Group object at 0x0000020E0C2539B0>, <app.database.models.Group object at 0x0000020E0C253AC0>, <app.database.models.Group object at 0x0000020E0C253BD0>, <app.database.models.Group object at 0x0000020E0C253CE0>, <app.database.models.Group object at 0x0000020E0C253DF0>, <app.database.models.Group object at 0x0000020E0C253F00>, <app.database.models.Group object at 0x0000020E0C3E4050>, <app.database.models.Group object at 0x0000020E0C3E4160>, <app.database.models.Group object at 0x0000020E0C3E4270>, <app.database.models.Group object at 0x0000020E0C3E4380>, <app.database.models.Group object at 0x0000020E0C3E4490>, <app.database.models.Group object at 0x0000020E0C3E45A0>, <app.database.models.Group object at 0x0000020E0C3E46B0>, <app.database.models.Group object at 0x0000020E0C3E47C0>, <app.database.models.Group object at 0x0000020E0C3E48D0>, <app.database.models.Group object at 0x0000020E0C3E49E0>, <app.database.models.Group object at 0x0000020E0C3E4AF0>, <app.database.models.Group object at 0x0000020E0C3E4C00>, <app.database.models.Group object at 0x0000020E0C3E4D10>, <app.database.models.Group object at 0x0000020E0C3E4E20>, <app.database.models.Group object at 0x0000020E0C3E4F30>, <app.database.models.Group object at 0x0000020E0C3E5040>, <app.database.models.Group object at 0x0000020E0C3E5150>, <app.database.models.Group object at 0x0000020E0C3E5260>, <app.database.models.Group object at 0x0000020E0C3E5370>, <app.database.models.Group object at 0x0000020E0C3E5480>, <app.database.models.Group object at 0x0000020E0C3E5590>, <app.database.models.Group object at 0x0000020E0C3E56A0>, <app.database.models.Group object at 0x0000020E0C3E57B0>, <app.database.models.Group object at 0x0000020E0C3E58C0>, <app.database.models.Group object at 0x0000020E0C3E59D0>, <app.database.models.Group object at 0x0000020E0C3E5AE0>, <app.database.models.Group object at 0x0000020E0C3E5BF0>, <app.database.models.Group object at 0x0000020E0C3E5D00>, <app.database.models.Group object at 0x0000020E0C3E5E10>, <app.database.models.Group object at 0x0000020E0C3E5F20>, <app.database.models.Group object at 0x0000020E0C3E6030>, <app.database.models.Group object at 0x0000020E0C3E6140>, <app.database.models.Group object at 0x0000020E0C3E6250>, <app.database.models.Group object at 0x0000020E0C3E6360>, <app.database.models.Group object at 0x0000020E0C3E6470>, <app.database.models.Group object at 0x0000020E0C3E6580>, <app.database.models.Group object at 0x0000020E0C3E6690>, <app.database.models.Group object at 0x0000020E0C3E67A0>, <app.database.models.Group object at 0x0000020E0C3E68B0>, <app.database.models.Group object at 0x0000020E0C3E69C0>, <app.database.models.Group object at 0x0000020E0C3E6AD0>, <app.database.models.Group object at 0x0000020E0C3E6BE0>, <app.database.models.Group object at 0x0000020E0C3E6CF0>, <app.database.models.Group object at 0x0000020E0C3E6E00>, <app.database.models.Group object at 0x0000020E0C3E6F10>, <app.database.models.Group object at 0x0000020E0C3E7020>, <app.database.models.Group object at 0x0000020E0C3E7130>, <app.database.models.Group object at 0x0000020E0C3E7240>, <app.database.models.Group object at 0x0000020E0C3E7350>, <app.database.models.Group object at 0x0000020E0C3E7460>, <app.database.models.Group object at 0x0000020E0C3E7570>, <app.database.models.Group object at 0x0000020E0C3E7680>, <app.database.models.Group object at 0x0000020E0C3E7790>, <app.database.models.Group object at 0x0000020E0C3E78A0>, <app.database.models.Group object at 0x0000020E0C3E79B0>, <app.database.models.Group object at 0x0000020E0C3E7AC0>, <app.database.models.Group object at 0x0000020E0C3E7BD0>]
2025-06-04 01:06:30,038 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 01:06:30,038 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 01:06:30,038 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 01:06:30,038 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 01:06:30,038 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 01:06:30,419 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 01:06:30,420 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 01:06:30,420 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 01:06:30,420 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.2566630955244113081312723
2025-06-04 01:06:30,420 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.2566630955244113081312723
2025-06-04 01:06:30,420 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 01:06:30,420 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.2566630955244113081312723')], HighestMarginPerLot=653.2566630955244113081312723
2025-06-04 01:06:30,420 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.26, ContributingOrders=1 (based on individual stored margins)
2025-06-04 01:06:30,420 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.26, AdditionalMargin=653.26
2025-06-04 01:06:30,427 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '7337325122', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8863400000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88634.000000000000000000'), 'margin': Decimal('653.2566630955244113081312723'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-04 01:06:30,453 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 01:06:30,563 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 01:06:30,606 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '7337325122', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88634000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('88634.00000000'), 'margin': Decimal('653.25666310'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'OPEN'}
2025-06-04 01:06:30,937 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 7337325122 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 01:20:21,673 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 01:20:25,791 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 01:21:05,353 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 01:21:05,368 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001B716EB7620>, <app.database.models.Group object at 0x000001B7171AD1D0>, <app.database.models.Group object at 0x000001B7171AC410>, <app.database.models.Group object at 0x000001B715D2F820>, <app.database.models.Group object at 0x000001B7170DD350>, <app.database.models.Group object at 0x000001B7171A8EF0>, <app.database.models.Group object at 0x000001B716ED38A0>, <app.database.models.Group object at 0x000001B716ED39B0>, <app.database.models.Group object at 0x000001B716ED3AC0>, <app.database.models.Group object at 0x000001B716ED3BD0>, <app.database.models.Group object at 0x000001B716ED3CE0>, <app.database.models.Group object at 0x000001B716ED3DF0>, <app.database.models.Group object at 0x000001B716ED3F00>, <app.database.models.Group object at 0x000001B717214050>, <app.database.models.Group object at 0x000001B717214160>, <app.database.models.Group object at 0x000001B717214270>, <app.database.models.Group object at 0x000001B717214380>, <app.database.models.Group object at 0x000001B717214490>, <app.database.models.Group object at 0x000001B7172145A0>, <app.database.models.Group object at 0x000001B7172146B0>, <app.database.models.Group object at 0x000001B7172147C0>, <app.database.models.Group object at 0x000001B7172148D0>, <app.database.models.Group object at 0x000001B7172149E0>, <app.database.models.Group object at 0x000001B717214AF0>, <app.database.models.Group object at 0x000001B717214C00>, <app.database.models.Group object at 0x000001B717214D10>, <app.database.models.Group object at 0x000001B717214E20>, <app.database.models.Group object at 0x000001B717214F30>, <app.database.models.Group object at 0x000001B717215040>, <app.database.models.Group object at 0x000001B717215150>, <app.database.models.Group object at 0x000001B717215260>, <app.database.models.Group object at 0x000001B717215370>, <app.database.models.Group object at 0x000001B717215480>, <app.database.models.Group object at 0x000001B717215590>, <app.database.models.Group object at 0x000001B7172156A0>, <app.database.models.Group object at 0x000001B7172157B0>, <app.database.models.Group object at 0x000001B7172158C0>, <app.database.models.Group object at 0x000001B7172159D0>, <app.database.models.Group object at 0x000001B717215AE0>, <app.database.models.Group object at 0x000001B717215BF0>, <app.database.models.Group object at 0x000001B717215D00>, <app.database.models.Group object at 0x000001B717215E10>, <app.database.models.Group object at 0x000001B717215F20>, <app.database.models.Group object at 0x000001B717216030>, <app.database.models.Group object at 0x000001B717216140>, <app.database.models.Group object at 0x000001B717216250>, <app.database.models.Group object at 0x000001B717216360>, <app.database.models.Group object at 0x000001B717216470>, <app.database.models.Group object at 0x000001B717216580>, <app.database.models.Group object at 0x000001B717216690>, <app.database.models.Group object at 0x000001B7172167A0>, <app.database.models.Group object at 0x000001B7172168B0>, <app.database.models.Group object at 0x000001B7172169C0>, <app.database.models.Group object at 0x000001B717216AD0>, <app.database.models.Group object at 0x000001B717216BE0>, <app.database.models.Group object at 0x000001B717216CF0>, <app.database.models.Group object at 0x000001B717216E00>, <app.database.models.Group object at 0x000001B717216F10>, <app.database.models.Group object at 0x000001B717217020>, <app.database.models.Group object at 0x000001B717217130>, <app.database.models.Group object at 0x000001B717217240>, <app.database.models.Group object at 0x000001B717217350>, <app.database.models.Group object at 0x000001B717217460>, <app.database.models.Group object at 0x000001B717217570>, <app.database.models.Group object at 0x000001B717217680>, <app.database.models.Group object at 0x000001B717217790>, <app.database.models.Group object at 0x000001B7172178A0>, <app.database.models.Group object at 0x000001B7172179B0>, <app.database.models.Group object at 0x000001B717217AC0>, <app.database.models.Group object at 0x000001B717217BD0>, <app.database.models.Group object at 0x000001B717217CE0>, <app.database.models.Group object at 0x000001B717217DF0>, <app.database.models.Group object at 0x000001B717217F00>, <app.database.models.Group object at 0x000001B717228050>, <app.database.models.Group object at 0x000001B717228160>, <app.database.models.Group object at 0x000001B717228270>, <app.database.models.Group object at 0x000001B717228380>, <app.database.models.Group object at 0x000001B717228490>, <app.database.models.Group object at 0x000001B7172285A0>]
2025-06-04 01:21:05,368 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 01:21:05,368 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 01:21:05,368 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 01:21:05,369 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 01:21:05,369 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 01:21:05,736 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 01:21:05,736 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 01:21:05,736 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 01:21:05,736 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=736.3072369524170560832829097
2025-06-04 01:21:05,736 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=736.3072369524170560832829097
2025-06-04 01:21:05,736 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 01:21:05,736 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('736.3072369524170560832829097')], HighestMarginPerLot=736.3072369524170560832829097
2025-06-04 01:21:05,736 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=736.31, ContributingOrders=1 (based on individual stored margins)
2025-06-04 01:21:05,736 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=736.31, AdditionalMargin=736.31
2025-06-04 01:21:05,741 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '1794876472', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8870000000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('736.3072369524170560832829097'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-04 01:21:05,763 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 01:21:05,813 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 01:21:05,836 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '1794876472', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88700000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('736.30723695'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'OPEN'}
2025-06-04 01:21:06,237 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 1794876472 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 01:23:00,509 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 01:23:09,200 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 01:23:09,207 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000025149BF5010>, <app.database.models.Group object at 0x0000025149BAFD90>, <app.database.models.Group object at 0x0000025149D0C7D0>, <app.database.models.Group object at 0x0000025149C51350>, <app.database.models.Group object at 0x0000025149C51480>, <app.database.models.Group object at 0x0000025149D085F0>, <app.database.models.Group object at 0x0000025149BC2F10>, <app.database.models.Group object at 0x0000025149BC3020>, <app.database.models.Group object at 0x0000025149BC3130>, <app.database.models.Group object at 0x0000025149BC3240>, <app.database.models.Group object at 0x0000025149BC3350>, <app.database.models.Group object at 0x0000025149BC3460>, <app.database.models.Group object at 0x0000025149BC3570>, <app.database.models.Group object at 0x0000025149BC3680>, <app.database.models.Group object at 0x0000025149BC3790>, <app.database.models.Group object at 0x0000025149BC38A0>, <app.database.models.Group object at 0x0000025149BC39B0>, <app.database.models.Group object at 0x0000025149BC3AC0>, <app.database.models.Group object at 0x0000025149BC3BD0>, <app.database.models.Group object at 0x0000025149BC3CE0>, <app.database.models.Group object at 0x0000025149BC3DF0>, <app.database.models.Group object at 0x0000025149BC3F00>, <app.database.models.Group object at 0x0000025149D54050>, <app.database.models.Group object at 0x0000025149D54160>, <app.database.models.Group object at 0x0000025149D54270>, <app.database.models.Group object at 0x0000025149D54380>, <app.database.models.Group object at 0x0000025149D54490>, <app.database.models.Group object at 0x0000025149D545A0>, <app.database.models.Group object at 0x0000025149D546B0>, <app.database.models.Group object at 0x0000025149D547C0>, <app.database.models.Group object at 0x0000025149D548D0>, <app.database.models.Group object at 0x0000025149D549E0>, <app.database.models.Group object at 0x0000025149D54AF0>, <app.database.models.Group object at 0x0000025149D54C00>, <app.database.models.Group object at 0x0000025149D54D10>, <app.database.models.Group object at 0x0000025149D54E20>, <app.database.models.Group object at 0x0000025149D54F30>, <app.database.models.Group object at 0x0000025149D55040>, <app.database.models.Group object at 0x0000025149D55150>, <app.database.models.Group object at 0x0000025149D55260>, <app.database.models.Group object at 0x0000025149D55370>, <app.database.models.Group object at 0x0000025149D55480>, <app.database.models.Group object at 0x0000025149D55590>, <app.database.models.Group object at 0x0000025149D556A0>, <app.database.models.Group object at 0x0000025149D557B0>, <app.database.models.Group object at 0x0000025149D558C0>, <app.database.models.Group object at 0x0000025149D559D0>, <app.database.models.Group object at 0x0000025149D55AE0>, <app.database.models.Group object at 0x0000025149D55BF0>, <app.database.models.Group object at 0x0000025149D55D00>, <app.database.models.Group object at 0x0000025149D55E10>, <app.database.models.Group object at 0x0000025149D55F20>, <app.database.models.Group object at 0x0000025149D56030>, <app.database.models.Group object at 0x0000025149D56140>, <app.database.models.Group object at 0x0000025149D56250>, <app.database.models.Group object at 0x0000025149D56360>, <app.database.models.Group object at 0x0000025149D56470>, <app.database.models.Group object at 0x0000025149D56580>, <app.database.models.Group object at 0x0000025149D56690>, <app.database.models.Group object at 0x0000025149D567A0>, <app.database.models.Group object at 0x0000025149D568B0>, <app.database.models.Group object at 0x0000025149D569C0>, <app.database.models.Group object at 0x0000025149D56AD0>, <app.database.models.Group object at 0x0000025149D56BE0>, <app.database.models.Group object at 0x0000025149D56CF0>, <app.database.models.Group object at 0x0000025149D56E00>, <app.database.models.Group object at 0x0000025149D56F10>, <app.database.models.Group object at 0x0000025149D57020>, <app.database.models.Group object at 0x0000025149D57130>, <app.database.models.Group object at 0x0000025149D57240>, <app.database.models.Group object at 0x0000025149D57350>, <app.database.models.Group object at 0x0000025149D57460>, <app.database.models.Group object at 0x0000025149D57570>, <app.database.models.Group object at 0x0000025149D57680>, <app.database.models.Group object at 0x0000025149D57790>, <app.database.models.Group object at 0x0000025149D578A0>, <app.database.models.Group object at 0x0000025149D579B0>, <app.database.models.Group object at 0x0000025149D57AC0>, <app.database.models.Group object at 0x0000025149D57BD0>]
2025-06-04 01:23:09,207 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 01:23:09,207 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 01:23:09,207 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 01:23:09,207 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 01:23:09,207 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 01:23:09,529 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 01:23:09,529 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 01:23:09,529 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 01:23:09,529 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=736.2750315286090233785547140
2025-06-04 01:23:09,529 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=736.2750315286090233785547140
2025-06-04 01:23:09,530 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 01:23:09,530 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('736.2750315286090233785547140')], HighestMarginPerLot=736.2750315286090233785547140
2025-06-04 01:23:09,530 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=736.28, ContributingOrders=1 (based on individual stored margins)
2025-06-04 01:23:09,530 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=736.28, AdditionalMargin=736.28
2025-06-04 01:23:09,532 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '6788985224', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8870400000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('736.2750315286090233785547140'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-04 01:23:09,548 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 01:23:09,591 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 01:23:09,619 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '6788985224', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88704000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('736.27503153'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'OPEN'}
2025-06-04 01:23:09,951 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 6788985224 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 01:28:27,419 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 01:28:31,506 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 01:28:45,338 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 01:28:45,365 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000024658385010>, <app.database.models.Group object at 0x000002465833FD90>, <app.database.models.Group object at 0x000002465849C7D0>, <app.database.models.Group object at 0x00000246584110F0>, <app.database.models.Group object at 0x0000024658411220>, <app.database.models.Group object at 0x0000024658498830>, <app.database.models.Group object at 0x0000024658352F10>, <app.database.models.Group object at 0x0000024658353020>, <app.database.models.Group object at 0x0000024658353130>, <app.database.models.Group object at 0x0000024658353240>, <app.database.models.Group object at 0x0000024658353350>, <app.database.models.Group object at 0x0000024658353460>, <app.database.models.Group object at 0x0000024658353570>, <app.database.models.Group object at 0x0000024658353680>, <app.database.models.Group object at 0x0000024658353790>, <app.database.models.Group object at 0x00000246583538A0>, <app.database.models.Group object at 0x00000246583539B0>, <app.database.models.Group object at 0x0000024658353AC0>, <app.database.models.Group object at 0x0000024658353BD0>, <app.database.models.Group object at 0x0000024658353CE0>, <app.database.models.Group object at 0x0000024658353DF0>, <app.database.models.Group object at 0x0000024658353F00>, <app.database.models.Group object at 0x00000246584E4050>, <app.database.models.Group object at 0x00000246584E4160>, <app.database.models.Group object at 0x00000246584E4270>, <app.database.models.Group object at 0x00000246584E4380>, <app.database.models.Group object at 0x00000246584E4490>, <app.database.models.Group object at 0x00000246584E45A0>, <app.database.models.Group object at 0x00000246584E46B0>, <app.database.models.Group object at 0x00000246584E47C0>, <app.database.models.Group object at 0x00000246584E48D0>, <app.database.models.Group object at 0x00000246584E49E0>, <app.database.models.Group object at 0x00000246584E4AF0>, <app.database.models.Group object at 0x00000246584E4C00>, <app.database.models.Group object at 0x00000246584E4D10>, <app.database.models.Group object at 0x00000246584E4E20>, <app.database.models.Group object at 0x00000246584E4F30>, <app.database.models.Group object at 0x00000246584E5040>, <app.database.models.Group object at 0x00000246584E5150>, <app.database.models.Group object at 0x00000246584E5260>, <app.database.models.Group object at 0x00000246584E5370>, <app.database.models.Group object at 0x00000246584E5480>, <app.database.models.Group object at 0x00000246584E5590>, <app.database.models.Group object at 0x00000246584E56A0>, <app.database.models.Group object at 0x00000246584E57B0>, <app.database.models.Group object at 0x00000246584E58C0>, <app.database.models.Group object at 0x00000246584E59D0>, <app.database.models.Group object at 0x00000246584E5AE0>, <app.database.models.Group object at 0x00000246584E5BF0>, <app.database.models.Group object at 0x00000246584E5D00>, <app.database.models.Group object at 0x00000246584E5E10>, <app.database.models.Group object at 0x00000246584E5F20>, <app.database.models.Group object at 0x00000246584E6030>, <app.database.models.Group object at 0x00000246584E6140>, <app.database.models.Group object at 0x00000246584E6250>, <app.database.models.Group object at 0x00000246584E6360>, <app.database.models.Group object at 0x00000246584E6470>, <app.database.models.Group object at 0x00000246584E6580>, <app.database.models.Group object at 0x00000246584E6690>, <app.database.models.Group object at 0x00000246584E67A0>, <app.database.models.Group object at 0x00000246584E68B0>, <app.database.models.Group object at 0x00000246584E69C0>, <app.database.models.Group object at 0x00000246584E6AD0>, <app.database.models.Group object at 0x00000246584E6BE0>, <app.database.models.Group object at 0x00000246584E6CF0>, <app.database.models.Group object at 0x00000246584E6E00>, <app.database.models.Group object at 0x00000246584E6F10>, <app.database.models.Group object at 0x00000246584E7020>, <app.database.models.Group object at 0x00000246584E7130>, <app.database.models.Group object at 0x00000246584E7240>, <app.database.models.Group object at 0x00000246584E7350>, <app.database.models.Group object at 0x00000246584E7460>, <app.database.models.Group object at 0x00000246584E7570>, <app.database.models.Group object at 0x00000246584E7680>, <app.database.models.Group object at 0x00000246584E7790>, <app.database.models.Group object at 0x00000246584E78A0>, <app.database.models.Group object at 0x00000246584E79B0>, <app.database.models.Group object at 0x00000246584E7AC0>, <app.database.models.Group object at 0x00000246584E7BD0>]
2025-06-04 01:28:45,366 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 01:28:45,366 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 01:28:45,366 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 01:28:45,366 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 01:28:45,367 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 01:28:45,778 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 01:28:45,778 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 01:28:45,778 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 01:28:45,778 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=654.1072170660756337442859122
2025-06-04 01:28:45,779 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=654.1072170660756337442859122
2025-06-04 01:28:45,779 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 01:28:45,779 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.1072170660756337442859122')], HighestMarginPerLot=654.1072170660756337442859122
2025-06-04 01:28:45,779 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=654.11, ContributingOrders=1 (based on individual stored margins)
2025-06-04 01:28:45,779 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=654.11, AdditionalMargin=654.11
2025-06-04 01:28:45,785 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '9069638766', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8871800000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88718.000000000000000000'), 'margin': Decimal('654.1072170660756337442859122'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-04 01:28:45,831 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 01:28:45,919 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 01:28:45,991 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '9069638766', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88718000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('88718.00000000'), 'margin': Decimal('654.10721707'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'OPEN'}
2025-06-04 01:28:46,301 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 9069638766 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 01:29:59,247 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 01:30:07,315 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 01:30:07,331 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001B0FE445010>, <app.database.models.Group object at 0x000001B0FE3FFD90>, <app.database.models.Group object at 0x000001B0FE55C7D0>, <app.database.models.Group object at 0x000001B0FE4A1350>, <app.database.models.Group object at 0x000001B0FE4A1480>, <app.database.models.Group object at 0x000001B0FE5585F0>, <app.database.models.Group object at 0x000001B0FE412F10>, <app.database.models.Group object at 0x000001B0FE413020>, <app.database.models.Group object at 0x000001B0FE413130>, <app.database.models.Group object at 0x000001B0FE413240>, <app.database.models.Group object at 0x000001B0FE413350>, <app.database.models.Group object at 0x000001B0FE413460>, <app.database.models.Group object at 0x000001B0FE413570>, <app.database.models.Group object at 0x000001B0FE413680>, <app.database.models.Group object at 0x000001B0FE413790>, <app.database.models.Group object at 0x000001B0FE4138A0>, <app.database.models.Group object at 0x000001B0FE4139B0>, <app.database.models.Group object at 0x000001B0FE413AC0>, <app.database.models.Group object at 0x000001B0FE413BD0>, <app.database.models.Group object at 0x000001B0FE413CE0>, <app.database.models.Group object at 0x000001B0FE413DF0>, <app.database.models.Group object at 0x000001B0FE413F00>, <app.database.models.Group object at 0x000001B0FE5A4050>, <app.database.models.Group object at 0x000001B0FE5A4160>, <app.database.models.Group object at 0x000001B0FE5A4270>, <app.database.models.Group object at 0x000001B0FE5A4380>, <app.database.models.Group object at 0x000001B0FE5A4490>, <app.database.models.Group object at 0x000001B0FE5A45A0>, <app.database.models.Group object at 0x000001B0FE5A46B0>, <app.database.models.Group object at 0x000001B0FE5A47C0>, <app.database.models.Group object at 0x000001B0FE5A48D0>, <app.database.models.Group object at 0x000001B0FE5A49E0>, <app.database.models.Group object at 0x000001B0FE5A4AF0>, <app.database.models.Group object at 0x000001B0FE5A4C00>, <app.database.models.Group object at 0x000001B0FE5A4D10>, <app.database.models.Group object at 0x000001B0FE5A4E20>, <app.database.models.Group object at 0x000001B0FE5A4F30>, <app.database.models.Group object at 0x000001B0FE5A5040>, <app.database.models.Group object at 0x000001B0FE5A5150>, <app.database.models.Group object at 0x000001B0FE5A5260>, <app.database.models.Group object at 0x000001B0FE5A5370>, <app.database.models.Group object at 0x000001B0FE5A5480>, <app.database.models.Group object at 0x000001B0FE5A5590>, <app.database.models.Group object at 0x000001B0FE5A56A0>, <app.database.models.Group object at 0x000001B0FE5A57B0>, <app.database.models.Group object at 0x000001B0FE5A58C0>, <app.database.models.Group object at 0x000001B0FE5A59D0>, <app.database.models.Group object at 0x000001B0FE5A5AE0>, <app.database.models.Group object at 0x000001B0FE5A5BF0>, <app.database.models.Group object at 0x000001B0FE5A5D00>, <app.database.models.Group object at 0x000001B0FE5A5E10>, <app.database.models.Group object at 0x000001B0FE5A5F20>, <app.database.models.Group object at 0x000001B0FE5A6030>, <app.database.models.Group object at 0x000001B0FE5A6140>, <app.database.models.Group object at 0x000001B0FE5A6250>, <app.database.models.Group object at 0x000001B0FE5A6360>, <app.database.models.Group object at 0x000001B0FE5A6470>, <app.database.models.Group object at 0x000001B0FE5A6580>, <app.database.models.Group object at 0x000001B0FE5A6690>, <app.database.models.Group object at 0x000001B0FE5A67A0>, <app.database.models.Group object at 0x000001B0FE5A68B0>, <app.database.models.Group object at 0x000001B0FE5A69C0>, <app.database.models.Group object at 0x000001B0FE5A6AD0>, <app.database.models.Group object at 0x000001B0FE5A6BE0>, <app.database.models.Group object at 0x000001B0FE5A6CF0>, <app.database.models.Group object at 0x000001B0FE5A6E00>, <app.database.models.Group object at 0x000001B0FE5A6F10>, <app.database.models.Group object at 0x000001B0FE5A7020>, <app.database.models.Group object at 0x000001B0FE5A7130>, <app.database.models.Group object at 0x000001B0FE5A7240>, <app.database.models.Group object at 0x000001B0FE5A7350>, <app.database.models.Group object at 0x000001B0FE5A7460>, <app.database.models.Group object at 0x000001B0FE5A7570>, <app.database.models.Group object at 0x000001B0FE5A7680>, <app.database.models.Group object at 0x000001B0FE5A7790>, <app.database.models.Group object at 0x000001B0FE5A78A0>, <app.database.models.Group object at 0x000001B0FE5A79B0>, <app.database.models.Group object at 0x000001B0FE5A7AC0>, <app.database.models.Group object at 0x000001B0FE5A7BD0>]
2025-06-04 01:30:07,332 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 01:30:07,332 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 01:30:07,332 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 01:30:07,332 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 01:30:07,332 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 01:30:07,650 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 01:30:07,650 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 01:30:07,650 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 01:30:07,650 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=654.2235961445923679260414996
2025-06-04 01:30:07,650 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=654.2235961445923679260414996
2025-06-04 01:30:07,650 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 01:30:07,650 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.2235961445923679260414996')], HighestMarginPerLot=654.2235961445923679260414996
2025-06-04 01:30:07,651 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=654.22, ContributingOrders=1 (based on individual stored margins)
2025-06-04 01:30:07,651 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=654.22, AdditionalMargin=654.22
2025-06-04 01:30:07,660 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '6126414820', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8872700000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.2235961445923679260414996'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-04 01:30:07,734 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 01:30:07,814 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 01:30:07,877 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '6126414820', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88727000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.22359614'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'OPEN'}
2025-06-04 01:30:08,235 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 6126414820 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 01:34:43,438 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 01:34:43,445 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001B0FE5A45A0>, <app.database.models.Group object at 0x000001B0FE5A46B0>, <app.database.models.Group object at 0x000001B0FE5A47C0>, <app.database.models.Group object at 0x000001B0FE5A48D0>, <app.database.models.Group object at 0x000001B0FE5A49E0>, <app.database.models.Group object at 0x000001B0FE5A4AF0>, <app.database.models.Group object at 0x000001B0FE5A4C00>, <app.database.models.Group object at 0x000001B0FE5A4D10>, <app.database.models.Group object at 0x000001B0FE5A4E20>, <app.database.models.Group object at 0x000001B0FE5A4F30>, <app.database.models.Group object at 0x000001B0FE5A5040>, <app.database.models.Group object at 0x000001B0FE5A5150>, <app.database.models.Group object at 0x000001B0FE5A5260>, <app.database.models.Group object at 0x000001B0FE5A5370>, <app.database.models.Group object at 0x000001B0FE5A5480>, <app.database.models.Group object at 0x000001B0FE5A5590>, <app.database.models.Group object at 0x000001B0FE5A56A0>, <app.database.models.Group object at 0x000001B0FE5A57B0>, <app.database.models.Group object at 0x000001B0FE5A58C0>, <app.database.models.Group object at 0x000001B0FE5A59D0>, <app.database.models.Group object at 0x000001B0FE5A5AE0>, <app.database.models.Group object at 0x000001B0FE5A5BF0>, <app.database.models.Group object at 0x000001B0FE5A5D00>, <app.database.models.Group object at 0x000001B0FE5A5E10>, <app.database.models.Group object at 0x000001B0FE5A5F20>, <app.database.models.Group object at 0x000001B0FE5A6030>, <app.database.models.Group object at 0x000001B0FE5A6140>, <app.database.models.Group object at 0x000001B0FE5A6250>, <app.database.models.Group object at 0x000001B0FE5A6360>, <app.database.models.Group object at 0x000001B0FE5A6470>, <app.database.models.Group object at 0x000001B0FE5A6580>, <app.database.models.Group object at 0x000001B0FE5A6690>, <app.database.models.Group object at 0x000001B0FE5A67A0>, <app.database.models.Group object at 0x000001B0FE5A68B0>, <app.database.models.Group object at 0x000001B0FE5A69C0>, <app.database.models.Group object at 0x000001B0FE5A6AD0>, <app.database.models.Group object at 0x000001B0FE5A6BE0>, <app.database.models.Group object at 0x000001B0FE5A6CF0>, <app.database.models.Group object at 0x000001B0FE5A6E00>, <app.database.models.Group object at 0x000001B0FE5A6F10>, <app.database.models.Group object at 0x000001B0FE5A7020>, <app.database.models.Group object at 0x000001B0FE5A7130>, <app.database.models.Group object at 0x000001B0FE5A7240>, <app.database.models.Group object at 0x000001B0FE5A7350>, <app.database.models.Group object at 0x000001B0FE5A7460>, <app.database.models.Group object at 0x000001B0FE5A7570>, <app.database.models.Group object at 0x000001B0FE5A7680>, <app.database.models.Group object at 0x000001B0FE5A7790>, <app.database.models.Group object at 0x000001B0FE5A78A0>, <app.database.models.Group object at 0x000001B0FE5A79B0>, <app.database.models.Group object at 0x000001B0FE5A7AC0>, <app.database.models.Group object at 0x000001B0FE5A7BD0>, <app.database.models.Group object at 0x000001B0FE5A7CE0>, <app.database.models.Group object at 0x000001B0FE4118C0>, <app.database.models.Group object at 0x000001B0FE411F20>, <app.database.models.Group object at 0x000001B0FE411E10>, <app.database.models.Group object at 0x000001B0FE412030>, <app.database.models.Group object at 0x000001B0FE412F10>, <app.database.models.Group object at 0x000001B0FE413020>, <app.database.models.Group object at 0x000001B0FE413130>, <app.database.models.Group object at 0x000001B0FE413240>, <app.database.models.Group object at 0x000001B0FE413350>, <app.database.models.Group object at 0x000001B0FE413460>, <app.database.models.Group object at 0x000001B0FE413570>, <app.database.models.Group object at 0x000001B0FE413680>, <app.database.models.Group object at 0x000001B0FE413790>, <app.database.models.Group object at 0x000001B0FE4138A0>, <app.database.models.Group object at 0x000001B0FE4139B0>, <app.database.models.Group object at 0x000001B0FE413AC0>, <app.database.models.Group object at 0x000001B0FE413BD0>, <app.database.models.Group object at 0x000001B0FE413CE0>, <app.database.models.Group object at 0x000001B0FE413DF0>, <app.database.models.Group object at 0x000001B0FE413F00>, <app.database.models.Group object at 0x000001B0FE411AE0>, <app.database.models.Group object at 0x000001B0FE411BF0>, <app.database.models.Group object at 0x000001B0FE5E4490>, <app.database.models.Group object at 0x000001B0FE5E4380>, <app.database.models.Group object at 0x000001B0FE5E4160>, <app.database.models.Group object at 0x000001B0FE5E45A0>]
2025-06-04 01:34:43,445 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 01:34:43,445 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 01:34:43,445 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 01:34:43,445 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 01:34:43,445 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 01:34:44,194 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 01:34:44,194 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 01:34:44,194 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 01:34:44,194 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY_LIMIT, Qty=1, StoredMargin=654.4738569240866331218551739
2025-06-04 01:34:44,194 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=654.4738569240866331218551739
2025-06-04 01:34:44,194 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1, TotalSellQty=0, NetQty=1
2025-06-04 01:34:44,195 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.4738569240866331218551739')], HighestMarginPerLot=654.4738569240866331218551739
2025-06-04 01:34:44,195 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=654.47, ContributingOrders=1 (based on individual stored margins)
2025-06-04 01:34:44,195 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=654.47, AdditionalMargin=654.47
2025-06-04 01:34:44,199 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '4731730823', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_price': Decimal('0.8874500000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.4738569240866331218551739'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'PENDING'}
2025-06-04 01:34:44,224 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 01:34:44,286 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 01:34:44,326 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '4731730823', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88745000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.47385692'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'PENDING'}
2025-06-04 01:34:44,708 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 4731730823 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 01:35:09,602 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 01:35:09,616 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001B0FE413020>, <app.database.models.Group object at 0x000001B0FE413350>, <app.database.models.Group object at 0x000001B0FE413130>, <app.database.models.Group object at 0x000001B0FE413240>, <app.database.models.Group object at 0x000001B0FE4138A0>, <app.database.models.Group object at 0x000001B0FE4139B0>, <app.database.models.Group object at 0x000001B0FE413AC0>, <app.database.models.Group object at 0x000001B0FE413BD0>, <app.database.models.Group object at 0x000001B0FE413CE0>, <app.database.models.Group object at 0x000001B0FE413DF0>, <app.database.models.Group object at 0x000001B0FE413F00>, <app.database.models.Group object at 0x000001B0FE411AE0>, <app.database.models.Group object at 0x000001B0FE411BF0>, <app.database.models.Group object at 0x000001B0FE5A4380>, <app.database.models.Group object at 0x000001B0FE5A4270>, <app.database.models.Group object at 0x000001B0FE5A4490>, <app.database.models.Group object at 0x000001B0FE5A4160>, <app.database.models.Group object at 0x000001B0FE5A4050>, <app.database.models.Group object at 0x000001B0FE5A45A0>, <app.database.models.Group object at 0x000001B0FE5A46B0>, <app.database.models.Group object at 0x000001B0FE5A47C0>, <app.database.models.Group object at 0x000001B0FE5A48D0>, <app.database.models.Group object at 0x000001B0FE5A49E0>, <app.database.models.Group object at 0x000001B0FE5A4AF0>, <app.database.models.Group object at 0x000001B0FE5A4C00>, <app.database.models.Group object at 0x000001B0FE5A4D10>, <app.database.models.Group object at 0x000001B0FE5A4E20>, <app.database.models.Group object at 0x000001B0FE5A4F30>, <app.database.models.Group object at 0x000001B0FE5A5040>, <app.database.models.Group object at 0x000001B0FE5A5150>, <app.database.models.Group object at 0x000001B0FE5A5260>, <app.database.models.Group object at 0x000001B0FE5A5370>, <app.database.models.Group object at 0x000001B0FE5A5480>, <app.database.models.Group object at 0x000001B0FE5A5590>, <app.database.models.Group object at 0x000001B0FE5A56A0>, <app.database.models.Group object at 0x000001B0FE5A57B0>, <app.database.models.Group object at 0x000001B0FE5A58C0>, <app.database.models.Group object at 0x000001B0FE5A59D0>, <app.database.models.Group object at 0x000001B0FE5A5AE0>, <app.database.models.Group object at 0x000001B0FE5A5BF0>, <app.database.models.Group object at 0x000001B0FE5A5D00>, <app.database.models.Group object at 0x000001B0FE5A5E10>, <app.database.models.Group object at 0x000001B0FE5A5F20>, <app.database.models.Group object at 0x000001B0FE5A6030>, <app.database.models.Group object at 0x000001B0FE5A6140>, <app.database.models.Group object at 0x000001B0FE5A6250>, <app.database.models.Group object at 0x000001B0FE5A6360>, <app.database.models.Group object at 0x000001B0FE5A6470>, <app.database.models.Group object at 0x000001B0FE5A6580>, <app.database.models.Group object at 0x000001B0FE5A6690>, <app.database.models.Group object at 0x000001B0FE5A67A0>, <app.database.models.Group object at 0x000001B0FE5A68B0>, <app.database.models.Group object at 0x000001B0FE5A69C0>, <app.database.models.Group object at 0x000001B0FE5A6AD0>, <app.database.models.Group object at 0x000001B0FE5A6BE0>, <app.database.models.Group object at 0x000001B0FE5A6CF0>, <app.database.models.Group object at 0x000001B0FE5A6E00>, <app.database.models.Group object at 0x000001B0FE5A6F10>, <app.database.models.Group object at 0x000001B0FE5A7020>, <app.database.models.Group object at 0x000001B0FE5A7130>, <app.database.models.Group object at 0x000001B0FE5A7240>, <app.database.models.Group object at 0x000001B0FE5A7350>, <app.database.models.Group object at 0x000001B0FE5A7460>, <app.database.models.Group object at 0x000001B0FE5A7570>, <app.database.models.Group object at 0x000001B0FE5A7680>, <app.database.models.Group object at 0x000001B0FE5A7790>, <app.database.models.Group object at 0x000001B0FE5A78A0>, <app.database.models.Group object at 0x000001B0FE5A79B0>, <app.database.models.Group object at 0x000001B0FE5A7AC0>, <app.database.models.Group object at 0x000001B0FE5A7BD0>, <app.database.models.Group object at 0x000001B0FE5A7CE0>, <app.database.models.Group object at 0x000001B0FE5A7DF0>, <app.database.models.Group object at 0x000001B0FE5E4490>, <app.database.models.Group object at 0x000001B0FE5E4380>, <app.database.models.Group object at 0x000001B0FE5E4160>, <app.database.models.Group object at 0x000001B0FE5E45A0>, <app.database.models.Group object at 0x000001B0FE5E48D0>, <app.database.models.Group object at 0x000001B0FE5E4AF0>, <app.database.models.Group object at 0x000001B0FE5E46B0>]
2025-06-04 01:35:09,617 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 01:35:09,617 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 01:35:09,617 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 01:35:09,617 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 01:35:09,617 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 01:35:10,050 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 9
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 57): Type=BUY, Qty=1.00000000, StoredMargin=654.28985782
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.28985782
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 58): Type=BUY, Qty=1.00000000, StoredMargin=654.28733840
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.2873384
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 59): Type=SELL, Qty=1.00000000, StoredMargin=652.95622326
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=652.95622326
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 60): Type=SELL, Qty=1.00000000, StoredMargin=652.98790264
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=652.98790264
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: 61): Type=SELL, Qty=1.00000000, StoredMargin=652.93911877
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=652.93911877
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6 (ID: 62): Type=BUY, Qty=1.00000000, StoredMargin=653.43178704
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6: MarginPerLot=653.43178704
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7 (ID: 63): Type=BUY, Qty=1.00000000, StoredMargin=652.85064708
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7: MarginPerLot=652.85064708
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8 (ID: 64): Type=BUY, Qty=1.00000000, StoredMargin=653.00753523
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8: MarginPerLot=653.00753523
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9 (ID: 65): Type=BUY, Qty=1.00000000, StoredMargin=652.73314240
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9: MarginPerLot=652.7331424
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=6.00000000, TotalSellQty=3.00000000, NetQty=6.00000000
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.28985782'), Decimal('654.2873384'), Decimal('652.95622326'), Decimal('652.98790264'), Decimal('652.93911877'), Decimal('653.43178704'), Decimal('652.85064708'), Decimal('653.00753523'), Decimal('652.7331424')], HighestMarginPerLot=654.28985782
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=3925.74, ContributingOrders=9 (based on individual stored margins)
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 10
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 57): Type=BUY, Qty=1.00000000, StoredMargin=654.28985782
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.28985782
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 58): Type=BUY, Qty=1.00000000, StoredMargin=654.28733840
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.2873384
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 59): Type=SELL, Qty=1.00000000, StoredMargin=652.95622326
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=652.95622326
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 60): Type=SELL, Qty=1.00000000, StoredMargin=652.98790264
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=652.98790264
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: 61): Type=SELL, Qty=1.00000000, StoredMargin=652.93911877
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=652.93911877
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6 (ID: 62): Type=BUY, Qty=1.00000000, StoredMargin=653.43178704
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6: MarginPerLot=653.43178704
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7 (ID: 63): Type=BUY, Qty=1.00000000, StoredMargin=652.85064708
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7: MarginPerLot=652.85064708
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8 (ID: 64): Type=BUY, Qty=1.00000000, StoredMargin=653.00753523
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8: MarginPerLot=653.00753523
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9 (ID: 65): Type=BUY, Qty=1.00000000, StoredMargin=652.73314240
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9: MarginPerLot=652.7331424
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 10 (ID: NEW_UNSAVED): Type=BUY_LIMIT, Qty=1, StoredMargin=654.4155181214905564063297601
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 10: MarginPerLot=654.4155181214905564063297601
2025-06-04 01:35:10,053 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=7.00000000, TotalSellQty=3.00000000, NetQty=7.00000000
2025-06-04 01:35:10,053 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.28985782'), Decimal('654.2873384'), Decimal('652.95622326'), Decimal('652.98790264'), Decimal('652.93911877'), Decimal('653.43178704'), Decimal('652.85064708'), Decimal('653.00753523'), Decimal('652.7331424'), Decimal('654.4155181214905564063297601')], HighestMarginPerLot=654.4155181214905564063297601
2025-06-04 01:35:10,053 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=4580.91, ContributingOrders=10 (based on individual stored margins)
2025-06-04 01:35:10,053 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=3925.74, MarginAfter=4580.91, AdditionalMargin=655.17
2025-06-04 01:35:10,060 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '7418751756', 'order_status': 'PROCESSING', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_price': Decimal('0.8873800000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.4155181214905564063297601'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'PENDING'}
2025-06-04 01:35:10,093 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 3925.74000000
2025-06-04 01:35:10,155 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-04 01:35:10,178 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '7418751756', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88738000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.41551812'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'PENDING'}
2025-06-04 01:35:10,512 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 7418751756 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 02:03:37,398 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 02:03:37,417 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001B0FE5A46B0>, <app.database.models.Group object at 0x000001B0FE5A47C0>, <app.database.models.Group object at 0x000001B0FE5A48D0>, <app.database.models.Group object at 0x000001B0FE5A49E0>, <app.database.models.Group object at 0x000001B0FE5A4AF0>, <app.database.models.Group object at 0x000001B0FE5A4C00>, <app.database.models.Group object at 0x000001B0FE5A4D10>, <app.database.models.Group object at 0x000001B0FE5A4E20>, <app.database.models.Group object at 0x000001B0FE5A4F30>, <app.database.models.Group object at 0x000001B0FE5A5040>, <app.database.models.Group object at 0x000001B0FE5A5150>, <app.database.models.Group object at 0x000001B0FE5A5260>, <app.database.models.Group object at 0x000001B0FE5A5370>, <app.database.models.Group object at 0x000001B0FE5A5480>, <app.database.models.Group object at 0x000001B0FE5A5590>, <app.database.models.Group object at 0x000001B0FE5A56A0>, <app.database.models.Group object at 0x000001B0FE5A57B0>, <app.database.models.Group object at 0x000001B0FE5A58C0>, <app.database.models.Group object at 0x000001B0FE5A59D0>, <app.database.models.Group object at 0x000001B0FE5A5AE0>, <app.database.models.Group object at 0x000001B0FE5A5BF0>, <app.database.models.Group object at 0x000001B0FE5A5D00>, <app.database.models.Group object at 0x000001B0FE5A5E10>, <app.database.models.Group object at 0x000001B0FE5A5F20>, <app.database.models.Group object at 0x000001B0FE5A6030>, <app.database.models.Group object at 0x000001B0FE5A6140>, <app.database.models.Group object at 0x000001B0FE5A6250>, <app.database.models.Group object at 0x000001B0FE5A6360>, <app.database.models.Group object at 0x000001B0FE5A6470>, <app.database.models.Group object at 0x000001B0FE5A6580>, <app.database.models.Group object at 0x000001B0FE5A6690>, <app.database.models.Group object at 0x000001B0FE5A67A0>, <app.database.models.Group object at 0x000001B0FE5A68B0>, <app.database.models.Group object at 0x000001B0FE5A69C0>, <app.database.models.Group object at 0x000001B0FE5A6AD0>, <app.database.models.Group object at 0x000001B0FE5A6BE0>, <app.database.models.Group object at 0x000001B0FE5A6CF0>, <app.database.models.Group object at 0x000001B0FE5A6E00>, <app.database.models.Group object at 0x000001B0FE5A6F10>, <app.database.models.Group object at 0x000001B0FE5A7020>, <app.database.models.Group object at 0x000001B0FE5A7130>, <app.database.models.Group object at 0x000001B0FE5A7240>, <app.database.models.Group object at 0x000001B0FE5A7350>, <app.database.models.Group object at 0x000001B0FE5A7460>, <app.database.models.Group object at 0x000001B0FE5A7570>, <app.database.models.Group object at 0x000001B0FE5A7680>, <app.database.models.Group object at 0x000001B0FE5A7790>, <app.database.models.Group object at 0x000001B0FE5A78A0>, <app.database.models.Group object at 0x000001B0FE5A79B0>, <app.database.models.Group object at 0x000001B0FE5A7AC0>, <app.database.models.Group object at 0x000001B0FE5A7BD0>, <app.database.models.Group object at 0x000001B0FE5A7CE0>, <app.database.models.Group object at 0x000001B0FE5A7DF0>, <app.database.models.Group object at 0x000001B0FE413680>, <app.database.models.Group object at 0x000001B0FE413790>, <app.database.models.Group object at 0x000001B0FE413460>, <app.database.models.Group object at 0x000001B0FE412F10>, <app.database.models.Group object at 0x000001B0FE413570>, <app.database.models.Group object at 0x000001B0FE4118C0>, <app.database.models.Group object at 0x000001B0FE411F20>, <app.database.models.Group object at 0x000001B0FE413020>, <app.database.models.Group object at 0x000001B0FE413350>, <app.database.models.Group object at 0x000001B0FE413130>, <app.database.models.Group object at 0x000001B0FE413240>, <app.database.models.Group object at 0x000001B0FE4138A0>, <app.database.models.Group object at 0x000001B0FE4139B0>, <app.database.models.Group object at 0x000001B0FE413AC0>, <app.database.models.Group object at 0x000001B0FE413BD0>, <app.database.models.Group object at 0x000001B0FE413CE0>, <app.database.models.Group object at 0x000001B0FE413DF0>, <app.database.models.Group object at 0x000001B0FE413F00>, <app.database.models.Group object at 0x000001B0FE411AE0>, <app.database.models.Group object at 0x000001B0FE411BF0>, <app.database.models.Group object at 0x000001B0FE412030>, <app.database.models.Group object at 0x000001B0FE5E4C00>, <app.database.models.Group object at 0x000001B0FE5E4D10>, <app.database.models.Group object at 0x000001B0FE5E4E20>, <app.database.models.Group object at 0x000001B0FE5E4F30>, <app.database.models.Group object at 0x000001B0FE5E5040>]
2025-06-04 02:03:37,418 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 02:03:37,418 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 02:03:37,418 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 02:03:37,419 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 02:03:37,419 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 02:03:38,158 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-04 02:03:38,159 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-04 02:03:38,159 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-04 02:03:38,160 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY_LIMIT, Qty=1, StoredMargin=654.8197429275907850775448272
2025-06-04 02:03:38,160 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.8197429275907850775448272
2025-06-04 02:03:38,162 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1, TotalSellQty=0, NetQty=1
2025-06-04 02:03:38,163 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.8197429275907850775448272')], HighestMarginPerLot=654.8197429275907850775448272
2025-06-04 02:03:38,163 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=654.82, ContributingOrders=1 (based on individual stored margins)
2025-06-04 02:03:38,164 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=654.82, AdditionalMargin=654.82
2025-06-04 02:03:38,176 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '6808727232', 'order_status': 'PROCESSING', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_price': Decimal('0.8876100000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.8197429275907850775448272'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'PENDING'}
2025-06-04 02:03:38,254 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 3925.74000000
2025-06-04 02:03:38,346 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-04 02:03:38,419 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '6808727232', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88761000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.81974293'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'PENDING'}
2025-06-04 02:03:38,741 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 6808727232 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 02:10:54,788 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 02:10:54,805 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001B0FE4138A0>, <app.database.models.Group object at 0x000001B0FE4139B0>, <app.database.models.Group object at 0x000001B0FE413AC0>, <app.database.models.Group object at 0x000001B0FE413BD0>, <app.database.models.Group object at 0x000001B0FE413CE0>, <app.database.models.Group object at 0x000001B0FE413DF0>, <app.database.models.Group object at 0x000001B0FE413F00>, <app.database.models.Group object at 0x000001B0FE411AE0>, <app.database.models.Group object at 0x000001B0FE411BF0>, <app.database.models.Group object at 0x000001B0FE412030>, <app.database.models.Group object at 0x000001B0FE5A4050>, <app.database.models.Group object at 0x000001B0FE5A4490>, <app.database.models.Group object at 0x000001B0FE5A45A0>, <app.database.models.Group object at 0x000001B0FE5A46B0>, <app.database.models.Group object at 0x000001B0FE5A47C0>, <app.database.models.Group object at 0x000001B0FE5A48D0>, <app.database.models.Group object at 0x000001B0FE5A49E0>, <app.database.models.Group object at 0x000001B0FE5A4AF0>, <app.database.models.Group object at 0x000001B0FE5A4C00>, <app.database.models.Group object at 0x000001B0FE5A4D10>, <app.database.models.Group object at 0x000001B0FE5A4E20>, <app.database.models.Group object at 0x000001B0FE5A4F30>, <app.database.models.Group object at 0x000001B0FE5A5040>, <app.database.models.Group object at 0x000001B0FE5A5150>, <app.database.models.Group object at 0x000001B0FE5A5260>, <app.database.models.Group object at 0x000001B0FE5A5370>, <app.database.models.Group object at 0x000001B0FE5A5480>, <app.database.models.Group object at 0x000001B0FE5A5590>, <app.database.models.Group object at 0x000001B0FE5A56A0>, <app.database.models.Group object at 0x000001B0FE5A57B0>, <app.database.models.Group object at 0x000001B0FE5A58C0>, <app.database.models.Group object at 0x000001B0FE5A59D0>, <app.database.models.Group object at 0x000001B0FE5A5AE0>, <app.database.models.Group object at 0x000001B0FE5A5BF0>, <app.database.models.Group object at 0x000001B0FE5A5D00>, <app.database.models.Group object at 0x000001B0FE5A5E10>, <app.database.models.Group object at 0x000001B0FE5A5F20>, <app.database.models.Group object at 0x000001B0FE5A6030>, <app.database.models.Group object at 0x000001B0FE5A6140>, <app.database.models.Group object at 0x000001B0FE5A6250>, <app.database.models.Group object at 0x000001B0FE5A6360>, <app.database.models.Group object at 0x000001B0FE5A6470>, <app.database.models.Group object at 0x000001B0FE5A6580>, <app.database.models.Group object at 0x000001B0FE5A6690>, <app.database.models.Group object at 0x000001B0FE5A67A0>, <app.database.models.Group object at 0x000001B0FE5A68B0>, <app.database.models.Group object at 0x000001B0FE5A69C0>, <app.database.models.Group object at 0x000001B0FE5A6AD0>, <app.database.models.Group object at 0x000001B0FE5A6BE0>, <app.database.models.Group object at 0x000001B0FE5A6CF0>, <app.database.models.Group object at 0x000001B0FE5A6E00>, <app.database.models.Group object at 0x000001B0FE5A6F10>, <app.database.models.Group object at 0x000001B0FE5A7020>, <app.database.models.Group object at 0x000001B0FE5A7130>, <app.database.models.Group object at 0x000001B0FE5A7240>, <app.database.models.Group object at 0x000001B0FE5A7350>, <app.database.models.Group object at 0x000001B0FE5A7460>, <app.database.models.Group object at 0x000001B0FE5A7570>, <app.database.models.Group object at 0x000001B0FE5A7680>, <app.database.models.Group object at 0x000001B0FE5A7790>, <app.database.models.Group object at 0x000001B0FE5A78A0>, <app.database.models.Group object at 0x000001B0FE5A79B0>, <app.database.models.Group object at 0x000001B0FE5A7AC0>, <app.database.models.Group object at 0x000001B0FE5A7BD0>, <app.database.models.Group object at 0x000001B0FE5A7CE0>, <app.database.models.Group object at 0x000001B0FE5A7DF0>, <app.database.models.Group object at 0x000001B0FE5A4160>, <app.database.models.Group object at 0x000001B0FE5A4270>, <app.database.models.Group object at 0x000001B0FE5A4380>, <app.database.models.Group object at 0x000001B0FE5E5260>, <app.database.models.Group object at 0x000001B0FE5E4C00>, <app.database.models.Group object at 0x000001B0FE5E4D10>, <app.database.models.Group object at 0x000001B0FE5E4E20>, <app.database.models.Group object at 0x000001B0FE5E4F30>, <app.database.models.Group object at 0x000001B0FE5E5040>, <app.database.models.Group object at 0x000001B0FE5E5480>, <app.database.models.Group object at 0x000001B0FE5E5150>, <app.database.models.Group object at 0x000001B0FE5E5370>, <app.database.models.Group object at 0x000001B0FE5E4490>]
2025-06-04 02:10:54,805 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 02:10:54,805 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 02:10:54,806 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 02:10:54,806 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 02:10:54,806 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-04 02:10:55,594 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-04 02:10:55,594 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-04 02:10:55,594 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-04 02:10:55,595 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY_LIMIT, Qty=1, StoredMargin=654.6625623668777171534444023
2025-06-04 02:10:55,595 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.6625623668777171534444023
2025-06-04 02:10:55,595 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1, TotalSellQty=0, NetQty=1
2025-06-04 02:10:55,595 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.6625623668777171534444023')], HighestMarginPerLot=654.6625623668777171534444023
2025-06-04 02:10:55,595 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=654.66, ContributingOrders=1 (based on individual stored margins)
2025-06-04 02:10:55,596 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=654.66, AdditionalMargin=654.66
2025-06-04 02:10:55,652 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=654.66
2025-06-04 02:10:55,718 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '6293048000', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_price': Decimal('0.8874700000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.6625623668777171534444023'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'PENDING'}
2025-06-04 02:10:55,750 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 654.66
2025-06-04 02:10:55,848 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-04 02:11:37,672 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 02:11:38,145 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001B0FE5A48D0>, <app.database.models.Group object at 0x000001B0FE5A4F30>, <app.database.models.Group object at 0x000001B0FE5A4490>, <app.database.models.Group object at 0x000001B0FE5A46B0>, <app.database.models.Group object at 0x000001B0FE5A4AF0>, <app.database.models.Group object at 0x000001B0FE5A49E0>, <app.database.models.Group object at 0x000001B0FE5A5260>, <app.database.models.Group object at 0x000001B0FE5A5370>, <app.database.models.Group object at 0x000001B0FE5A5480>, <app.database.models.Group object at 0x000001B0FE5A5590>, <app.database.models.Group object at 0x000001B0FE5A56A0>, <app.database.models.Group object at 0x000001B0FE5A57B0>, <app.database.models.Group object at 0x000001B0FE5A58C0>, <app.database.models.Group object at 0x000001B0FE5A59D0>, <app.database.models.Group object at 0x000001B0FE5A5AE0>, <app.database.models.Group object at 0x000001B0FE5A5BF0>, <app.database.models.Group object at 0x000001B0FE5A5D00>, <app.database.models.Group object at 0x000001B0FE5A5E10>, <app.database.models.Group object at 0x000001B0FE5A5F20>, <app.database.models.Group object at 0x000001B0FE5A6030>, <app.database.models.Group object at 0x000001B0FE5A6140>, <app.database.models.Group object at 0x000001B0FE5A6250>, <app.database.models.Group object at 0x000001B0FE5A6360>, <app.database.models.Group object at 0x000001B0FE5A6470>, <app.database.models.Group object at 0x000001B0FE5A6580>, <app.database.models.Group object at 0x000001B0FE5A6690>, <app.database.models.Group object at 0x000001B0FE5A67A0>, <app.database.models.Group object at 0x000001B0FE5A68B0>, <app.database.models.Group object at 0x000001B0FE5A69C0>, <app.database.models.Group object at 0x000001B0FE5A6AD0>, <app.database.models.Group object at 0x000001B0FE5A6BE0>, <app.database.models.Group object at 0x000001B0FE5A6CF0>, <app.database.models.Group object at 0x000001B0FE5A6E00>, <app.database.models.Group object at 0x000001B0FE5A6F10>, <app.database.models.Group object at 0x000001B0FE5A7020>, <app.database.models.Group object at 0x000001B0FE5A7130>, <app.database.models.Group object at 0x000001B0FE5A7240>, <app.database.models.Group object at 0x000001B0FE5A7350>, <app.database.models.Group object at 0x000001B0FE5A7460>, <app.database.models.Group object at 0x000001B0FE5A7570>, <app.database.models.Group object at 0x000001B0FE5A7680>, <app.database.models.Group object at 0x000001B0FE5A7790>, <app.database.models.Group object at 0x000001B0FE5A78A0>, <app.database.models.Group object at 0x000001B0FE5A79B0>, <app.database.models.Group object at 0x000001B0FE5A7AC0>, <app.database.models.Group object at 0x000001B0FE5A7BD0>, <app.database.models.Group object at 0x000001B0FE5A7CE0>, <app.database.models.Group object at 0x000001B0FE5A7DF0>, <app.database.models.Group object at 0x000001B0FE5A4160>, <app.database.models.Group object at 0x000001B0FE5A4270>, <app.database.models.Group object at 0x000001B0FE5A4380>, <app.database.models.Group object at 0x000001B0FE4118C0>, <app.database.models.Group object at 0x000001B0FE413130>, <app.database.models.Group object at 0x000001B0FE413350>, <app.database.models.Group object at 0x000001B0FE411F20>, <app.database.models.Group object at 0x000001B0FE413680>, <app.database.models.Group object at 0x000001B0FE413460>, <app.database.models.Group object at 0x000001B0FE413240>, <app.database.models.Group object at 0x000001B0FE413570>, <app.database.models.Group object at 0x000001B0FE413790>, <app.database.models.Group object at 0x000001B0FE413020>, <app.database.models.Group object at 0x000001B0FE4138A0>, <app.database.models.Group object at 0x000001B0FE4139B0>, <app.database.models.Group object at 0x000001B0FE413AC0>, <app.database.models.Group object at 0x000001B0FE413BD0>, <app.database.models.Group object at 0x000001B0FE413CE0>, <app.database.models.Group object at 0x000001B0FE413DF0>, <app.database.models.Group object at 0x000001B0FE413F00>, <app.database.models.Group object at 0x000001B0FE411AE0>, <app.database.models.Group object at 0x000001B0FE411BF0>, <app.database.models.Group object at 0x000001B0FE412030>, <app.database.models.Group object at 0x000001B0FE412F10>, <app.database.models.Group object at 0x000001B0FE5E5260>, <app.database.models.Group object at 0x000001B0FE5E4C00>, <app.database.models.Group object at 0x000001B0FE5E4D10>, <app.database.models.Group object at 0x000001B0FE5E4E20>, <app.database.models.Group object at 0x000001B0FE5E4F30>, <app.database.models.Group object at 0x000001B0FE5E5040>, <app.database.models.Group object at 0x000001B0FE5E5480>]
2025-06-04 02:11:38,145 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 02:11:38,146 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 02:11:38,146 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 02:11:38,146 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 02:11:38,146 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 02:11:38,466 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 02:11:38,466 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 02:11:38,466 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 02:11:38,466 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY_LIMIT, Qty=1, StoredMargin=654.6892210283680183235952761
2025-06-04 02:11:38,466 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=654.6892210283680183235952761
2025-06-04 02:11:38,466 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1, TotalSellQty=0, NetQty=1
2025-06-04 02:11:38,467 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.6892210283680183235952761')], HighestMarginPerLot=654.6892210283680183235952761
2025-06-04 02:11:38,467 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=654.69, ContributingOrders=1 (based on individual stored margins)
2025-06-04 02:11:38,467 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=654.69, AdditionalMargin=654.69
2025-06-04 02:11:38,474 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '5413971369', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_price': Decimal('0.8874900000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.6892210283680183235952761'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'PENDING'}
2025-06-04 02:11:38,491 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 02:11:38,551 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 02:11:38,610 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '5413971369', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88749000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.68922103'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'PENDING'}
2025-06-04 02:11:38,977 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 5413971369 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 02:29:18,189 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 02:31:05,432 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 02:31:09,791 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 02:31:14,259 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 02:31:41,969 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 02:35:29,133 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 02:35:29,133 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 02:35:29,140 - ERROR - orders - Unexpected error in place_pending_order: 3 validation errors for OrderCreateInternal
order_id
  Field required [type=missing, input_value={'order_company_name': 'A...rder_status': 'PENDING'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
contract_value
  Field required [type=missing, input_value={'order_company_name': 'A...rder_status': 'PENDING'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
margin
  Field required [type=missing, input_value={'order_company_name': 'A...rder_status': 'PENDING'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 352, in place_pending_order
    order_create_internal = OrderCreateInternal(**order_data_for_internal_processing)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pydantic\main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 3 validation errors for OrderCreateInternal
order_id
  Field required [type=missing, input_value={'order_company_name': 'A...rder_status': 'PENDING'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
contract_value
  Field required [type=missing, input_value={'order_company_name': 'A...rder_status': 'PENDING'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
margin
  Field required [type=missing, input_value={'order_company_name': 'A...rder_status': 'PENDING'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
2025-06-04 02:51:15,946 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 02:51:27,236 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 02:51:27,237 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 02:51:27,238 - ERROR - orders - Unexpected error in place_pending_order: 2 validation errors for OrderCreateInternal
contract_value
  Decimal input should be an integer, float, string or Decimal object [type=decimal_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/decimal_type
margin
  Decimal input should be an integer, float, string or Decimal object [type=decimal_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/decimal_type
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 353, in place_pending_order
    order_create_internal = OrderCreateInternal(**order_data_for_internal_processing)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pydantic\main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for OrderCreateInternal
contract_value
  Decimal input should be an integer, float, string or Decimal object [type=decimal_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/decimal_type
margin
  Decimal input should be an integer, float, string or Decimal object [type=decimal_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/decimal_type
2025-06-04 02:53:31,632 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 02:53:36,211 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 02:54:41,277 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 02:54:41,277 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 02:54:41,278 - ERROR - orders - Unexpected error in place_pending_order: 'OrderCreateInternal' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 355, in place_pending_order
    db_order = await crud_order.create_order(db, order_create_internal, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 31, in create_order
    orders_logger.debug(f"[DEBUG][create_order] status field value: {order_data.get('status')}")
                                                                     ^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pydantic\main.py", line 991, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'OrderCreateInternal' object has no attribute 'get'
2025-06-04 02:56:06,650 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 02:56:14,763 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 02:56:14,764 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 02:56:14,787 - ERROR - orders - Unexpected error in place_pending_order: (pymysql.err.IntegrityError) (1048, "Column 'contract_value' cannot be null")
[SQL: INSERT INTO user_orders (status, order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('PENDING', 'efd0f261-9a33-4528-9ff3-30085b327f07', 1, 'AUDCAD', 'BUY_LIMIT', 'PENDING', Decimal('0.8885'), Decimal('1'), None, None, Decimal('0'), Decimal('0'), None, None, None, None, None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1048, "Column 'contract_value' cannot be null")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 357, in place_pending_order
    db_order = await crud_order.create_order(db, order_create_internal_dict, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 35, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1048, "Column 'contract_value' cannot be null")
[SQL: INSERT INTO user_orders (status, order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('PENDING', 'efd0f261-9a33-4528-9ff3-30085b327f07', 1, 'AUDCAD', 'BUY_LIMIT', 'PENDING', Decimal('0.8885'), Decimal('1'), None, None, Decimal('0'), Decimal('0'), None, None, None, None, None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-04 02:57:31,754 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 02:57:31,755 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 02:57:31,799 - ERROR - orders - Unexpected error in place_pending_order: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')
[SQL: INSERT INTO user_orders (status, order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('PENDING', 'f046f737-493d-4e22-a351-b383608f06a0', 1, 'AUDCAD', 'BUY_LIMIT', 'PENDING', Decimal('0.8885'), Decimal('1'), None, None, Decimal('0'), Decimal('0'), None, None, None, None, None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 357, in place_pending_order
    db_order = await crud_order.create_order(db, order_create_internal_dict, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 35, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')
[SQL: INSERT INTO user_orders (status, order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('PENDING', 'f046f737-493d-4e22-a351-b383608f06a0', 1, 'AUDCAD', 'BUY_LIMIT', 'PENDING', Decimal('0.8885'), Decimal('1'), None, None, Decimal('0'), Decimal('0'), None, None, None, None, None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-04 02:58:49,293 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 02:58:49,294 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 02:58:49,341 - ERROR - orders - Unexpected error in place_pending_order: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')
[SQL: INSERT INTO user_orders (status, order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('PENDING', '6215d2b4-4823-439c-a3af-31bbe3abd7cf', 1, 'AUDCAD', 'BUY_LIMIT', 'PENDING', Decimal('0.8885'), Decimal('1'), None, None, Decimal('0'), Decimal('0'), None, None, None, None, None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 357, in place_pending_order
    db_order = await crud_order.create_order(db, order_create_internal_dict, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 35, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')
[SQL: INSERT INTO user_orders (status, order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('PENDING', '6215d2b4-4823-439c-a3af-31bbe3abd7cf', 1, 'AUDCAD', 'BUY_LIMIT', 'PENDING', Decimal('0.8885'), Decimal('1'), None, None, Decimal('0'), Decimal('0'), None, None, None, None, None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-04 02:59:47,506 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 02:59:47,525 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x00000246B2787620>, <app.database.models.Group object at 0x00000246B27A7C50>, <app.database.models.Group object at 0x00000246B2B5C550>, <app.database.models.Group object at 0x00000246B15EE650>, <app.database.models.Group object at 0x00000246B15EEFD0>, <app.database.models.Group object at 0x00000246B28EE330>, <app.database.models.Group object at 0x00000246B2793CE0>, <app.database.models.Group object at 0x00000246B2793F00>, <app.database.models.Group object at 0x00000246B2793570>, <app.database.models.Group object at 0x00000246B2793DF0>, <app.database.models.Group object at 0x00000246B2793790>, <app.database.models.Group object at 0x00000246B27938A0>, <app.database.models.Group object at 0x00000246B2793680>, <app.database.models.Group object at 0x00000246B27939B0>, <app.database.models.Group object at 0x00000246B2793BD0>, <app.database.models.Group object at 0x00000246B2793AC0>, <app.database.models.Group object at 0x00000246B2B6C6B0>, <app.database.models.Group object at 0x00000246B2B6C7C0>, <app.database.models.Group object at 0x00000246B2B6C160>, <app.database.models.Group object at 0x00000246B2B6C050>, <app.database.models.Group object at 0x00000246B2B6CAF0>, <app.database.models.Group object at 0x00000246B2B6C9E0>, <app.database.models.Group object at 0x00000246B2B6C8D0>, <app.database.models.Group object at 0x00000246B2B6C270>, <app.database.models.Group object at 0x00000246B2B6D260>, <app.database.models.Group object at 0x00000246B2B6D370>, <app.database.models.Group object at 0x00000246B2B6D480>, <app.database.models.Group object at 0x00000246B2B6D590>, <app.database.models.Group object at 0x00000246B2B6D6A0>, <app.database.models.Group object at 0x00000246B2B6D7B0>, <app.database.models.Group object at 0x00000246B2B6D8C0>, <app.database.models.Group object at 0x00000246B2B6D9D0>, <app.database.models.Group object at 0x00000246B2B6DAE0>, <app.database.models.Group object at 0x00000246B2B6DBF0>, <app.database.models.Group object at 0x00000246B2B6DD00>, <app.database.models.Group object at 0x00000246B2B6DE10>, <app.database.models.Group object at 0x00000246B2B6DF20>, <app.database.models.Group object at 0x00000246B2B6E030>, <app.database.models.Group object at 0x00000246B2B6E140>, <app.database.models.Group object at 0x00000246B2B6E250>, <app.database.models.Group object at 0x00000246B2B6E360>, <app.database.models.Group object at 0x00000246B2B6E470>, <app.database.models.Group object at 0x00000246B2B6E580>, <app.database.models.Group object at 0x00000246B2B6E690>, <app.database.models.Group object at 0x00000246B2B6E7A0>, <app.database.models.Group object at 0x00000246B2B6E8B0>, <app.database.models.Group object at 0x00000246B2B6E9C0>, <app.database.models.Group object at 0x00000246B2B6EAD0>, <app.database.models.Group object at 0x00000246B2B6EBE0>, <app.database.models.Group object at 0x00000246B2B6ECF0>, <app.database.models.Group object at 0x00000246B2B6EE00>, <app.database.models.Group object at 0x00000246B2B6EF10>, <app.database.models.Group object at 0x00000246B2B6F020>, <app.database.models.Group object at 0x00000246B2B6F130>, <app.database.models.Group object at 0x00000246B2B6F240>, <app.database.models.Group object at 0x00000246B2B6F350>, <app.database.models.Group object at 0x00000246B2B6F460>, <app.database.models.Group object at 0x00000246B2B6F570>, <app.database.models.Group object at 0x00000246B2B6F680>, <app.database.models.Group object at 0x00000246B2B6F790>, <app.database.models.Group object at 0x00000246B2B6F8A0>, <app.database.models.Group object at 0x00000246B2B6F9B0>, <app.database.models.Group object at 0x00000246B2B6FAC0>, <app.database.models.Group object at 0x00000246B2B6FBD0>, <app.database.models.Group object at 0x00000246B2B6FCE0>, <app.database.models.Group object at 0x00000246B2B6FDF0>, <app.database.models.Group object at 0x00000246B2B6FF00>, <app.database.models.Group object at 0x00000246B2BDC050>, <app.database.models.Group object at 0x00000246B2BDC160>, <app.database.models.Group object at 0x00000246B2BDC270>, <app.database.models.Group object at 0x00000246B2BDC380>, <app.database.models.Group object at 0x00000246B2BDC490>, <app.database.models.Group object at 0x00000246B2BDC5A0>, <app.database.models.Group object at 0x00000246B2BDC6B0>, <app.database.models.Group object at 0x00000246B2BDC7C0>, <app.database.models.Group object at 0x00000246B2BDC8D0>, <app.database.models.Group object at 0x00000246B2BDC9E0>, <app.database.models.Group object at 0x00000246B2BDCAF0>, <app.database.models.Group object at 0x00000246B2BDCC00>]
2025-06-04 02:59:47,526 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 02:59:47,526 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 02:59:47,526 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 02:59:47,526 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 02:59:47,529 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-04 02:59:48,388 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-04 02:59:48,388 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 68): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=654.66256237
2025-06-04 02:59:48,389 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.66256237
2025-06-04 02:59:48,389 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-04 02:59:48,389 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.66256237')], HighestMarginPerLot=654.66256237
2025-06-04 02:59:48,389 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=654.66, ContributingOrders=1 (based on individual stored margins)
2025-06-04 02:59:48,389 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 02:59:48,389 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 68): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=654.66256237
2025-06-04 02:59:48,389 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.66256237
2025-06-04 02:59:48,389 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=654.7718870992438770078820536
2025-06-04 02:59:48,389 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.7718870992438770078820536
2025-06-04 02:59:48,390 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=1, NetQty=1.00000000
2025-06-04 02:59:48,390 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.66256237'), Decimal('654.7718870992438770078820536')], HighestMarginPerLot=654.7718870992438770078820536
2025-06-04 02:59:48,390 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=654.77, ContributingOrders=2 (based on individual stored margins)
2025-06-04 02:59:48,390 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=654.66, MarginAfter=654.77, AdditionalMargin=0.11
2025-06-04 02:59:48,400 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=654.66000000, CalculatedNewMargin=654.77
2025-06-04 02:59:48,416 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '4807293199', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8879600000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.7718870992438770078820536'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-04 02:59:48,451 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 654.77
2025-06-04 02:59:48,558 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-04 03:00:33,104 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 03:00:33,116 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x00000246B27939B0>, <app.database.models.Group object at 0x00000246B2793BD0>, <app.database.models.Group object at 0x00000246B2793AC0>, <app.database.models.Group object at 0x00000246B2B6C5A0>, <app.database.models.Group object at 0x00000246B2B6CF30>, <app.database.models.Group object at 0x00000246B2B6CE20>, <app.database.models.Group object at 0x00000246B2B6D040>, <app.database.models.Group object at 0x00000246B2B6CC00>, <app.database.models.Group object at 0x00000246B2B6C380>, <app.database.models.Group object at 0x00000246B2B6D150>, <app.database.models.Group object at 0x00000246B2B6C6B0>, <app.database.models.Group object at 0x00000246B2B6C7C0>, <app.database.models.Group object at 0x00000246B2B6C160>, <app.database.models.Group object at 0x00000246B2B6C050>, <app.database.models.Group object at 0x00000246B2B6CAF0>, <app.database.models.Group object at 0x00000246B2B6C9E0>, <app.database.models.Group object at 0x00000246B2B6C8D0>, <app.database.models.Group object at 0x00000246B2B6C270>, <app.database.models.Group object at 0x00000246B2B6D260>, <app.database.models.Group object at 0x00000246B2B6D370>, <app.database.models.Group object at 0x00000246B2B6D480>, <app.database.models.Group object at 0x00000246B2B6D590>, <app.database.models.Group object at 0x00000246B2B6D6A0>, <app.database.models.Group object at 0x00000246B2B6D7B0>, <app.database.models.Group object at 0x00000246B2B6D8C0>, <app.database.models.Group object at 0x00000246B2B6D9D0>, <app.database.models.Group object at 0x00000246B2B6DAE0>, <app.database.models.Group object at 0x00000246B2B6DBF0>, <app.database.models.Group object at 0x00000246B2B6DD00>, <app.database.models.Group object at 0x00000246B2B6DE10>, <app.database.models.Group object at 0x00000246B2B6DF20>, <app.database.models.Group object at 0x00000246B2B6E030>, <app.database.models.Group object at 0x00000246B2B6E140>, <app.database.models.Group object at 0x00000246B2B6E250>, <app.database.models.Group object at 0x00000246B2B6E360>, <app.database.models.Group object at 0x00000246B2B6E470>, <app.database.models.Group object at 0x00000246B2B6E580>, <app.database.models.Group object at 0x00000246B2B6E690>, <app.database.models.Group object at 0x00000246B2B6E7A0>, <app.database.models.Group object at 0x00000246B2B6E8B0>, <app.database.models.Group object at 0x00000246B2B6E9C0>, <app.database.models.Group object at 0x00000246B2B6EAD0>, <app.database.models.Group object at 0x00000246B2B6EBE0>, <app.database.models.Group object at 0x00000246B2B6ECF0>, <app.database.models.Group object at 0x00000246B2B6EE00>, <app.database.models.Group object at 0x00000246B2B6EF10>, <app.database.models.Group object at 0x00000246B2B6F020>, <app.database.models.Group object at 0x00000246B2B6F130>, <app.database.models.Group object at 0x00000246B2B6F240>, <app.database.models.Group object at 0x00000246B2B6F350>, <app.database.models.Group object at 0x00000246B2B6F460>, <app.database.models.Group object at 0x00000246B2B6F570>, <app.database.models.Group object at 0x00000246B2B6F680>, <app.database.models.Group object at 0x00000246B2B6F790>, <app.database.models.Group object at 0x00000246B2B6F8A0>, <app.database.models.Group object at 0x00000246B2B6F9B0>, <app.database.models.Group object at 0x00000246B2B6FAC0>, <app.database.models.Group object at 0x00000246B2B6FBD0>, <app.database.models.Group object at 0x00000246B2B6FCE0>, <app.database.models.Group object at 0x00000246B2B6FDF0>, <app.database.models.Group object at 0x00000246B2B6FF00>, <app.database.models.Group object at 0x00000246B2B6CD10>, <app.database.models.Group object at 0x00000246B2BDCF30>, <app.database.models.Group object at 0x00000246B2BDC050>, <app.database.models.Group object at 0x00000246B2BDC160>, <app.database.models.Group object at 0x00000246B2BDC270>, <app.database.models.Group object at 0x00000246B2BDC380>, <app.database.models.Group object at 0x00000246B2BDC490>, <app.database.models.Group object at 0x00000246B2BDC5A0>, <app.database.models.Group object at 0x00000246B2BDC6B0>, <app.database.models.Group object at 0x00000246B2BDC7C0>, <app.database.models.Group object at 0x00000246B2BDC8D0>, <app.database.models.Group object at 0x00000246B2BDC9E0>, <app.database.models.Group object at 0x00000246B2BDCAF0>, <app.database.models.Group object at 0x00000246B2BDCC00>, <app.database.models.Group object at 0x00000246B2BDD370>, <app.database.models.Group object at 0x00000246B2BDCD10>, <app.database.models.Group object at 0x00000246B2BDCE20>, <app.database.models.Group object at 0x00000246B2BDD480>]
2025-06-04 03:00:33,116 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 03:00:33,116 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 03:00:33,116 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 03:00:33,116 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 03:00:33,116 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-04 03:00:33,425 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 03:00:33,425 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 68): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=654.66256237
2025-06-04 03:00:33,425 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.66256237
2025-06-04 03:00:33,425 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 69): Type=SELL, Qty=1.00000000, StoredMargin=654.77188710
2025-06-04 03:00:33,425 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.7718871
2025-06-04 03:00:33,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=1.00000000, NetQty=1.00000000
2025-06-04 03:00:33,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.66256237'), Decimal('654.7718871')], HighestMarginPerLot=654.7718871
2025-06-04 03:00:33,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=654.77, ContributingOrders=2 (based on individual stored margins)
2025-06-04 03:00:33,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-04 03:00:33,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 68): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=654.66256237
2025-06-04 03:00:33,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.66256237
2025-06-04 03:00:33,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 69): Type=SELL, Qty=1.00000000, StoredMargin=654.77188710
2025-06-04 03:00:33,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.7718871
2025-06-04 03:00:33,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=654.7791785456481002136393796
2025-06-04 03:00:33,427 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=654.7791785456481002136393796
2025-06-04 03:00:33,427 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-04 03:00:33,427 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.66256237'), Decimal('654.7718871'), Decimal('654.7791785456481002136393796')], HighestMarginPerLot=654.7791785456481002136393796
2025-06-04 03:00:33,427 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1309.56, ContributingOrders=3 (based on individual stored margins)
2025-06-04 03:00:33,427 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=654.77, MarginAfter=1309.56, AdditionalMargin=654.79
2025-06-04 03:00:33,433 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=654.77000000, CalculatedNewMargin=1309.56
2025-06-04 03:00:33,474 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '9106212759', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8879800000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.7791785456481002136393796'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-04 03:00:33,493 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1309.56
2025-06-04 03:00:33,543 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-04 03:01:43,975 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 03:01:43,975 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 03:01:43,987 - ERROR - orders - Unexpected error in place_pending_order: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')
[SQL: INSERT INTO user_orders (status, order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('PENDING', 'ce1906db-be3b-424c-86bd-c2ae91294933', 1, 'AUDCAD', 'BUY_LIMIT', 'PENDING', Decimal('0.8885'), Decimal('1'), None, None, Decimal('0'), Decimal('0'), None, None, None, None, None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 357, in place_pending_order
    db_order = await crud_order.create_order(db, order_create_internal_dict, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 35, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')
[SQL: INSERT INTO user_orders (status, order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('PENDING', 'ce1906db-be3b-424c-86bd-c2ae91294933', 1, 'AUDCAD', 'BUY_LIMIT', 'PENDING', Decimal('0.8885'), Decimal('1'), None, None, Decimal('0'), Decimal('0'), None, None, None, None, None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-04 03:07:48,440 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 03:08:56,549 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 03:08:56,549 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': 'f2530900-21b9-412d-8b95-67833d94361d', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.8885'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-04 03:08:56,549 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 03:08:56,551 - ERROR - orders - Unexpected error in place_pending_order: 'OrderCreateInternal' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 371, in place_pending_order
    db_order = await crud_order.create_order(db, order_create_internal, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 31, in create_order
    orders_logger.debug(f"[DEBUG][create_order] status field value: {order_data.get('status')}")
                                                                     ^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pydantic\main.py", line 991, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'OrderCreateInternal' object has no attribute 'get'
2025-06-04 03:10:14,400 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 03:10:24,475 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 03:10:24,475 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '617fe870-a3f4-4b70-ba6c-93f5e96ed6c7', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.8885'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-04 03:10:24,475 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 03:10:24,492 - ERROR - orders - Unexpected error in place_pending_order: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')
[SQL: INSERT INTO user_orders (status, order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('PENDING', '617fe870-a3f4-4b70-ba6c-93f5e96ed6c7', 1, 'AUDCAD', 'BUY_LIMIT', 'PENDING', Decimal('0.8885'), Decimal('1'), None, None, Decimal('0'), Decimal('0'), None, None, None, None, None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 371, in place_pending_order
    db_order = await crud_order.create_order(db, order_create_internal.model_dump(), order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 35, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')
[SQL: INSERT INTO user_orders (status, order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('PENDING', '617fe870-a3f4-4b70-ba6c-93f5e96ed6c7', 1, 'AUDCAD', 'BUY_LIMIT', 'PENDING', Decimal('0.8885'), Decimal('1'), None, None, Decimal('0'), Decimal('0'), None, None, None, None, None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-04 03:14:11,505 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 03:14:11,505 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '97a90ed2-c6d7-4f91-8047-894d7b9c1e2e', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.8885'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-04 03:14:11,505 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 03:14:11,606 - ERROR - orders - Unexpected error in place_pending_order: 'DemoUserOrder' object has no attribute 'open_time'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 391, in place_pending_order
    'open_time': db_order.open_time.isoformat() if db_order.open_time else None,
                                                   ^^^^^^^^^^^^^^^^^^
AttributeError: 'DemoUserOrder' object has no attribute 'open_time'
2025-06-04 03:19:15,250 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 03:19:35,956 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 03:19:35,956 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '1e845b23-4c0e-4872-bbc1-5ffc56996df6', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.8885'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-04 03:19:35,956 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 03:19:35,994 - INFO - orders - Pending order 1e845b23-4c0e-4872-bbc1-5ffc56996df6 added to Redis.
2025-06-04 03:19:36,001 - ERROR - orders - Unexpected error in place_pending_order: 4 validation errors for OrderResponse
order_user_id
  Field required [type=missing, input_value={'order_id': '1e845b23-4c...03:19:35', 'user_id': 1}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
order_company_name
  Field required [type=missing, input_value={'order_id': '1e845b23-4c...03:19:35', 'user_id': 1}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
contract_value
  Decimal input should be an integer, float, string or Decimal object [type=decimal_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/decimal_type
margin
  Decimal input should be an integer, float, string or Decimal object [type=decimal_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/decimal_type
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 399, in place_pending_order
    response = OrderResponse(
        order_id=db_order.order_id,
    ...<13 lines>...
        user_id=db_order.order_user_id
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pydantic\main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for OrderResponse
order_user_id
  Field required [type=missing, input_value={'order_id': '1e845b23-4c...03:19:35', 'user_id': 1}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
order_company_name
  Field required [type=missing, input_value={'order_id': '1e845b23-4c...03:19:35', 'user_id': 1}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
contract_value
  Decimal input should be an integer, float, string or Decimal object [type=decimal_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/decimal_type
margin
  Decimal input should be an integer, float, string or Decimal object [type=decimal_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/decimal_type
2025-06-04 03:21:08,081 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 03:21:12,676 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 03:21:52,009 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 03:21:52,009 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '2eee3387-0039-417a-9677-73344057e913', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.8885'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-04 03:21:52,009 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 03:21:52,041 - INFO - orders - Pending order 2eee3387-0039-417a-9677-73344057e913 added to Redis.
2025-06-04 03:25:31,225 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 03:25:58,364 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 03:25:58,364 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '3f439c9a-4a09-4d80-b7e2-8a168120c50d', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.8885'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-04 03:25:58,364 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 03:25:58,387 - INFO - orders - Pending order 3f439c9a-4a09-4d80-b7e2-8a168120c50d added to Redis.
2025-06-04 03:39:45,470 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 03:39:45,470 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': 'e03cbd1f-3aa1-4e73-bfa1-20002e20ea23', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.8882'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-04 03:39:45,470 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8882
2025-06-04 03:39:45,499 - INFO - orders - Pending order e03cbd1f-3aa1-4e73-bfa1-20002e20ea23 added to Redis.
2025-06-04 03:40:59,923 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 03:40:59,923 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '497367b0-dc3f-4a11-9da0-a1610b9daaff', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.8881'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-04 03:40:59,923 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8881
2025-06-04 03:40:59,961 - INFO - orders - Pending order 497367b0-dc3f-4a11-9da0-a1610b9daaff added to Redis.
2025-06-04 03:41:03,958 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 03:41:03,958 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '87097d92-0c8a-4cc5-9538-218430be3bdf', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.88815'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-04 03:41:03,958 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.88815
2025-06-04 03:41:04,016 - INFO - orders - Pending order 87097d92-0c8a-4cc5-9538-218430be3bdf added to Redis.
2025-06-04 03:51:28,018 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:10:47,632 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:18:23,685 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:20:29,960 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 04:20:29,960 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': 'aa4f7629-dcf0-4630-af05-6790e2e42066', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.88815'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-04 04:20:29,960 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.88815
2025-06-04 04:20:30,060 - INFO - orders - Pending order aa4f7629-dcf0-4630-af05-6790e2e42066 added to Redis.
2025-06-04 04:30:08,871 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:43:38,479 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:43:38,500 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:44:33,168 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:44:33,374 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:46:09,844 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:46:45,138 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:46:45,172 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:49:55,452 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:49:55,455 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:50:19,393 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:12:34,022 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 05:12:34,032 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000027ABFA26360>, <app.database.models.Group object at 0x0000027ABFD58270>, <app.database.models.Group object at 0x0000027ABFD585A0>, <app.database.models.Group object at 0x0000027ABFD58160>, <app.database.models.Group object at 0x0000027ABFD586B0>, <app.database.models.Group object at 0x0000027ABFD58380>, <app.database.models.Group object at 0x0000027ABFD587C0>, <app.database.models.Group object at 0x0000027ABFD588D0>, <app.database.models.Group object at 0x0000027ABFD589E0>, <app.database.models.Group object at 0x0000027ABFD58AF0>, <app.database.models.Group object at 0x0000027ABFD58C00>, <app.database.models.Group object at 0x0000027ABFD58D10>, <app.database.models.Group object at 0x0000027ABFD58E20>, <app.database.models.Group object at 0x0000027ABFD58F30>, <app.database.models.Group object at 0x0000027ABFD59040>, <app.database.models.Group object at 0x0000027ABFD59150>, <app.database.models.Group object at 0x0000027ABFD59260>, <app.database.models.Group object at 0x0000027ABFD59370>, <app.database.models.Group object at 0x0000027ABFD59480>, <app.database.models.Group object at 0x0000027ABFD59590>, <app.database.models.Group object at 0x0000027ABFD596A0>, <app.database.models.Group object at 0x0000027ABFD597B0>, <app.database.models.Group object at 0x0000027ABFD598C0>, <app.database.models.Group object at 0x0000027ABFD599D0>, <app.database.models.Group object at 0x0000027ABFD59AE0>, <app.database.models.Group object at 0x0000027ABFD59BF0>, <app.database.models.Group object at 0x0000027ABFD59D00>, <app.database.models.Group object at 0x0000027ABFD59E10>, <app.database.models.Group object at 0x0000027ABFD59F20>, <app.database.models.Group object at 0x0000027ABFD5A030>, <app.database.models.Group object at 0x0000027ABFD5A140>, <app.database.models.Group object at 0x0000027ABFD5A250>, <app.database.models.Group object at 0x0000027ABFD5A360>, <app.database.models.Group object at 0x0000027ABFD5A470>, <app.database.models.Group object at 0x0000027ABFD5A580>, <app.database.models.Group object at 0x0000027ABFD5A690>, <app.database.models.Group object at 0x0000027ABFD5A7A0>, <app.database.models.Group object at 0x0000027ABFD5A8B0>, <app.database.models.Group object at 0x0000027ABFD5A9C0>, <app.database.models.Group object at 0x0000027ABFD5AAD0>, <app.database.models.Group object at 0x0000027ABFD5ABE0>, <app.database.models.Group object at 0x0000027ABFD5ACF0>, <app.database.models.Group object at 0x0000027ABFD5AE00>, <app.database.models.Group object at 0x0000027ABFD5AF10>, <app.database.models.Group object at 0x0000027ABFD5B020>, <app.database.models.Group object at 0x0000027ABFD5B130>, <app.database.models.Group object at 0x0000027ABFD5B240>, <app.database.models.Group object at 0x0000027ABFD5B350>, <app.database.models.Group object at 0x0000027ABFD5B460>, <app.database.models.Group object at 0x0000027ABFD5B570>, <app.database.models.Group object at 0x0000027ABFD5B680>, <app.database.models.Group object at 0x0000027ABFD5B790>, <app.database.models.Group object at 0x0000027ABFD5B8A0>, <app.database.models.Group object at 0x0000027ABFD5B9B0>, <app.database.models.Group object at 0x0000027ABFD5BAC0>, <app.database.models.Group object at 0x0000027ABFD5BBD0>, <app.database.models.Group object at 0x0000027ABFD5BCE0>, <app.database.models.Group object at 0x0000027ABFD5BDF0>, <app.database.models.Group object at 0x0000027ABFD5BF00>, <app.database.models.Group object at 0x0000027ABFE5C050>, <app.database.models.Group object at 0x0000027ABFE5C160>, <app.database.models.Group object at 0x0000027ABFE5C270>, <app.database.models.Group object at 0x0000027ABFE5C380>, <app.database.models.Group object at 0x0000027ABFE5C490>, <app.database.models.Group object at 0x0000027ABFE5C5A0>, <app.database.models.Group object at 0x0000027ABFE5C6B0>, <app.database.models.Group object at 0x0000027ABFE5C7C0>, <app.database.models.Group object at 0x0000027ABFE5C8D0>, <app.database.models.Group object at 0x0000027ABFE5C9E0>, <app.database.models.Group object at 0x0000027ABFE5CAF0>, <app.database.models.Group object at 0x0000027ABFE5CC00>, <app.database.models.Group object at 0x0000027ABFE5CD10>, <app.database.models.Group object at 0x0000027ABFE5CE20>, <app.database.models.Group object at 0x0000027ABFE5CF30>, <app.database.models.Group object at 0x0000027ABFE5D040>, <app.database.models.Group object at 0x0000027ABFE5D150>, <app.database.models.Group object at 0x0000027ABFE5D260>, <app.database.models.Group object at 0x0000027ABFE5D370>, <app.database.models.Group object at 0x0000027ABFE5D480>]
2025-06-04 05:12:34,032 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 05:12:34,033 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 05:12:34,033 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 05:12:34,033 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 05:12:34,033 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-04 05:12:34,770 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-04 05:12:34,770 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-04 05:12:34,771 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-04 05:12:34,771 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=655.8162952585263342235453789
2025-06-04 05:12:34,771 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.8162952585263342235453789
2025-06-04 05:12:34,771 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 05:12:34,772 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.8162952585263342235453789')], HighestMarginPerLot=655.8162952585263342235453789
2025-06-04 05:12:34,772 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=655.82, ContributingOrders=1 (based on individual stored margins)
2025-06-04 05:12:34,772 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=655.82, AdditionalMargin=655.82
2025-06-04 05:12:34,781 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=655.82
2025-06-04 05:12:34,834 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '1688253127', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8886900000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('655.8162952585263342235453789'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-04 05:12:34,862 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 655.82
2025-06-04 05:12:34,926 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-04 05:12:34,931 - ERROR - orders - Unexpected error in place_order: 1 validation error for OrderResponse
status
  Field required [type=missing, input_value={'order_id': '1688253127'...rofit': Decimal('0E-8')}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 292, in place_order
    return OrderResponse(
        order_id=db_order.order_id,
    ...<9 lines>...
        take_profit=db_order.take_profit
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pydantic\main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for OrderResponse
status
  Field required [type=missing, input_value={'order_id': '1688253127'...rofit': Decimal('0E-8')}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
2025-06-04 05:14:25,214 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:14:48,963 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 05:14:48,974 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000028E40199160>, <app.database.models.Group object at 0x0000028E40167ED0>, <app.database.models.Group object at 0x0000028E402F4050>, <app.database.models.Group object at 0x0000028E401C96E0>, <app.database.models.Group object at 0x0000028E401C9810>, <app.database.models.Group object at 0x0000028E402AD370>, <app.database.models.Group object at 0x0000028E3FFD3020>, <app.database.models.Group object at 0x0000028E3FFD3130>, <app.database.models.Group object at 0x0000028E3FFD3240>, <app.database.models.Group object at 0x0000028E3FFD3350>, <app.database.models.Group object at 0x0000028E3FFD3460>, <app.database.models.Group object at 0x0000028E3FFD3570>, <app.database.models.Group object at 0x0000028E3FFD3680>, <app.database.models.Group object at 0x0000028E3FFD3790>, <app.database.models.Group object at 0x0000028E3FFD38A0>, <app.database.models.Group object at 0x0000028E3FFD39B0>, <app.database.models.Group object at 0x0000028E3FFD3AC0>, <app.database.models.Group object at 0x0000028E3FFD3BD0>, <app.database.models.Group object at 0x0000028E3FFD3CE0>, <app.database.models.Group object at 0x0000028E3FFD3DF0>, <app.database.models.Group object at 0x0000028E3FFD3F00>, <app.database.models.Group object at 0x0000028E402F8050>, <app.database.models.Group object at 0x0000028E402F8160>, <app.database.models.Group object at 0x0000028E402F8270>, <app.database.models.Group object at 0x0000028E402F8380>, <app.database.models.Group object at 0x0000028E402F8490>, <app.database.models.Group object at 0x0000028E402F85A0>, <app.database.models.Group object at 0x0000028E402F86B0>, <app.database.models.Group object at 0x0000028E402F87C0>, <app.database.models.Group object at 0x0000028E402F88D0>, <app.database.models.Group object at 0x0000028E402F89E0>, <app.database.models.Group object at 0x0000028E402F8AF0>, <app.database.models.Group object at 0x0000028E402F8C00>, <app.database.models.Group object at 0x0000028E402F8D10>, <app.database.models.Group object at 0x0000028E402F8E20>, <app.database.models.Group object at 0x0000028E402F8F30>, <app.database.models.Group object at 0x0000028E402F9040>, <app.database.models.Group object at 0x0000028E402F9150>, <app.database.models.Group object at 0x0000028E402F9260>, <app.database.models.Group object at 0x0000028E402F9370>, <app.database.models.Group object at 0x0000028E402F9480>, <app.database.models.Group object at 0x0000028E402F9590>, <app.database.models.Group object at 0x0000028E402F96A0>, <app.database.models.Group object at 0x0000028E402F97B0>, <app.database.models.Group object at 0x0000028E402F98C0>, <app.database.models.Group object at 0x0000028E402F99D0>, <app.database.models.Group object at 0x0000028E402F9AE0>, <app.database.models.Group object at 0x0000028E402F9BF0>, <app.database.models.Group object at 0x0000028E402F9D00>, <app.database.models.Group object at 0x0000028E402F9E10>, <app.database.models.Group object at 0x0000028E402F9F20>, <app.database.models.Group object at 0x0000028E402FA030>, <app.database.models.Group object at 0x0000028E402FA140>, <app.database.models.Group object at 0x0000028E402FA250>, <app.database.models.Group object at 0x0000028E402FA360>, <app.database.models.Group object at 0x0000028E402FA470>, <app.database.models.Group object at 0x0000028E402FA580>, <app.database.models.Group object at 0x0000028E402FA690>, <app.database.models.Group object at 0x0000028E402FA7A0>, <app.database.models.Group object at 0x0000028E402FA8B0>, <app.database.models.Group object at 0x0000028E402FA9C0>, <app.database.models.Group object at 0x0000028E402FAAD0>, <app.database.models.Group object at 0x0000028E402FABE0>, <app.database.models.Group object at 0x0000028E402FACF0>, <app.database.models.Group object at 0x0000028E402FAE00>, <app.database.models.Group object at 0x0000028E402FAF10>, <app.database.models.Group object at 0x0000028E402FB020>, <app.database.models.Group object at 0x0000028E402FB130>, <app.database.models.Group object at 0x0000028E402FB240>, <app.database.models.Group object at 0x0000028E402FB350>, <app.database.models.Group object at 0x0000028E402FB460>, <app.database.models.Group object at 0x0000028E402FB570>, <app.database.models.Group object at 0x0000028E402FB680>, <app.database.models.Group object at 0x0000028E402FB790>, <app.database.models.Group object at 0x0000028E402FB8A0>, <app.database.models.Group object at 0x0000028E402FB9B0>, <app.database.models.Group object at 0x0000028E402FBAC0>, <app.database.models.Group object at 0x0000028E402FBBD0>, <app.database.models.Group object at 0x0000028E402FBCE0>]
2025-06-04 05:14:48,974 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 05:14:48,974 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 05:14:48,974 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 05:14:48,974 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 05:14:48,974 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1.00000000, NetQty=1.00000000
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526')], HighestMarginPerLot=655.81629526
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=655.82, ContributingOrders=1 (based on individual stored margins)
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=655.7540913037451024741169861
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913037451024741169861
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913037451024741169861')], HighestMarginPerLot=655.81629526
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1311.63, ContributingOrders=2 (based on individual stored margins)
2025-06-04 05:14:49,316 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=655.82, MarginAfter=1311.63, AdditionalMargin=655.81
2025-06-04 05:14:49,322 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=655.82000000, CalculatedNewMargin=1311.63
2025-06-04 05:14:49,332 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '1855881167', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8886700000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('655.7540913037451024741169861'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-04 05:14:49,349 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1311.63
2025-06-04 05:14:49,398 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-04 05:18:15,971 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:18:15,971 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:18:15,971 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:18:15,972 - ERROR - orders - Error in close_order endpoint: name 'generate_10_digit_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 490, in close_order
    close_order_id = generate_10_digit_id() # Generate close_order_id
                     ^^^^^^^^^^^^^^^^^^^^
NameError: name 'generate_10_digit_id' is not defined
2025-06-04 05:19:12,789 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:20:27,925 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:20:34,981 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:21:27,966 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:21:27,967 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:21:27,967 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:21:27,967 - ERROR - orders - Error in close_order endpoint: type object 'UserOrder' has no attribute 'close_order_id'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 490, in close_order
    close_order_id = await generate_unique_10_digit_id(db, order_model_class, 'close_order_id')
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 11, in generate_unique_10_digit_id
    stmt = select(model).where(getattr(model, column) == candidate)
                               ~~~~~~~^^^^^^^^^^^^^^^
AttributeError: type object 'UserOrder' has no attribute 'close_order_id'
2025-06-04 05:21:53,507 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:22:36,515 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:22:36,515 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:22:36,515 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:22:36,554 - ERROR - orders - Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 676, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.
2025-06-04 05:22:36,559 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 676, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 775, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 404: Order not found.
2025-06-04 05:27:20,773 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:27:24,862 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:28:05,857 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:28:05,857 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:28:05,857 - INFO - orders - Using order model: user_orders for user 1 (DemoUser)
2025-06-04 05:28:05,857 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:28:05,873 - ERROR - orders - Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 677, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.
2025-06-04 05:28:05,875 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 677, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 776, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 404: Order not found.
2025-06-04 05:28:40,636 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:29:28,620 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:29:28,620 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:29:28,620 - INFO - orders - Using order model: user_orders for user 1 (DemoUser)
2025-06-04 05:29:28,620 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:29:28,635 - ERROR - orders - Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 700, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.
2025-06-04 05:29:28,636 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 700, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 799, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 404: Order not found.
2025-06-04 05:32:03,632 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:32:42,068 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:32:42,068 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:32:42,068 - INFO - orders - Using order model: user_orders for user 1 (DemoUser)
2025-06-04 05:32:42,068 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:32:42,084 - ERROR - orders - Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 716, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.
2025-06-04 05:32:42,086 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 716, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 815, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 404: Order not found.
2025-06-04 05:35:56,399 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:37:07,593 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:37:07,593 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:37:07,593 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001BCCD6260D0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 05:37:07,593 - INFO - orders - Using order model: user_orders for user 1 (DemoUser)
2025-06-04 05:37:07,594 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:37:07,675 - ERROR - orders - Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 716, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.
2025-06-04 05:37:07,683 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 716, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 815, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 404: Order not found.
2025-06-04 05:40:05,217 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:41:07,974 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:41:07,974 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:41:07,974 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000002704B6796A0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 05:41:07,974 - INFO - orders - Using order model: user_orders for user 1 (DemoUser)
2025-06-04 05:41:07,974 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:41:07,996 - ERROR - orders - Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 716, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.
2025-06-04 05:41:07,997 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 716, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 815, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 404: Order not found.
2025-06-04 05:42:12,084 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:42:43,438 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:42:43,438 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:42:43,438 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000193263496A0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 05:42:43,438 - INFO - orders - Using order model: user_orders for user 1 (DemoUser)
2025-06-04 05:42:43,438 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:42:43,455 - ERROR - orders - Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 717, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.
2025-06-04 05:42:43,457 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 717, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 816, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 404: Order not found.
2025-06-04 05:44:09,965 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:45:27,580 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:45:50,551 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:45:50,552 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:45:50,552 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000027321AB16A0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 05:45:50,552 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x0000027321AB16A0> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 05:45:50,552 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 05:45:50,552 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 05:45:50,552 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 05:45:50,552 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 05:45:50,552 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 05:45:50,552 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:45:50,583 - ERROR - orders - Error processing close order: name 'get_user_by_id_with_lock_fn' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 728, in close_order
    db_user_locked = await get_user_by_id_with_lock_fn(db, user_to_operate_on.id, model_class=type(user_to_operate_on))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_by_id_with_lock_fn' is not defined
2025-06-04 05:45:50,589 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: name 'get_user_by_id_with_lock_fn' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 728, in close_order
    db_user_locked = await get_user_by_id_with_lock_fn(db, user_to_operate_on.id, model_class=type(user_to_operate_on))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_by_id_with_lock_fn' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 816, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: name 'get_user_by_id_with_lock_fn' is not defined
2025-06-04 05:49:29,204 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:49:31,254 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:49:31,255 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:49:31,255 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001FFD37AD7F0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 05:49:31,255 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000001FFD37AD7F0> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 05:49:31,255 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 05:49:31,255 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 05:49:31,255 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 05:49:31,255 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 05:49:31,255 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 05:49:31,255 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:49:31,268 - ERROR - orders - Error processing close order: cannot access local variable 'db_user_locked' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 731, in close_order
    current_overall_margin = Decimal(str(db_user_locked.margin))
                                         ^^^^^^^^^^^^^^
UnboundLocalError: cannot access local variable 'db_user_locked' where it is not associated with a value
2025-06-04 05:49:31,269 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: cannot access local variable 'db_user_locked' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 731, in close_order
    current_overall_margin = Decimal(str(db_user_locked.margin))
                                         ^^^^^^^^^^^^^^
UnboundLocalError: cannot access local variable 'db_user_locked' where it is not associated with a value

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 807, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: cannot access local variable 'db_user_locked' where it is not associated with a value
2025-06-04 05:49:44,169 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:49:44,170 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:49:44,170 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001FFD3900CD0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 05:49:44,170 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000001FFD3900CD0> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 05:49:44,170 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 05:49:44,171 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 05:49:44,171 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 05:49:44,171 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 05:49:44,171 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 05:49:44,171 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:49:44,198 - ERROR - orders - Error processing close order: cannot access local variable 'db_user_locked' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 731, in close_order
    current_overall_margin = Decimal(str(db_user_locked.margin))
                                         ^^^^^^^^^^^^^^
UnboundLocalError: cannot access local variable 'db_user_locked' where it is not associated with a value
2025-06-04 05:49:44,201 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: cannot access local variable 'db_user_locked' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 731, in close_order
    current_overall_margin = Decimal(str(db_user_locked.margin))
                                         ^^^^^^^^^^^^^^
UnboundLocalError: cannot access local variable 'db_user_locked' where it is not associated with a value

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 807, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: cannot access local variable 'db_user_locked' where it is not associated with a value
2025-06-04 06:02:00,550 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 06:05:03,729 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 06:05:16,639 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 06:05:16,639 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 06:05:16,639 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000177DFABD7F0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 06:05:16,639 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x00000177DFABD7F0> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 06:05:16,639 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 06:05:16,639 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 06:05:16,640 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 06:05:16,640 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 06:05:16,640 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 06:05:16,640 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 06:05:16,651 - ERROR - orders - Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 689, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 06:05:16,652 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 689, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 792, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 06:06:38,323 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 06:08:27,924 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 06:08:27,924 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 06:08:27,924 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001617F5D20D0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 06:08:27,924 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000001617F5D20D0> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 06:08:27,924 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 06:08:27,924 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 06:08:27,925 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 06:08:27,925 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 06:08:27,925 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 06:08:27,925 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 06:08:27,956 - ERROR - orders - Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 691, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 06:08:27,959 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 691, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 794, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 06:10:12,719 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 06:10:22,637 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 06:10:22,637 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 06:10:22,637 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000232BB5916A0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 06:10:22,637 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x00000232BB5916A0> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 06:10:22,637 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 06:10:22,637 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 06:10:22,637 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 06:10:22,637 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 06:10:22,637 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 06:10:22,637 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 06:10:22,645 - ERROR - orders - Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 692, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 06:10:22,646 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 692, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 795, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 06:21:25,433 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 06:21:25,433 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 06:21:25,433 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000232BB6DC910>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 06:21:25,434 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x00000232BB6DC910> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 06:21:25,434 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 06:21:25,434 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 06:21:25,434 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 06:21:25,434 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 06:21:25,434 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 06:21:25,434 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 06:21:25,441 - ERROR - orders - Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 692, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 06:21:25,444 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 692, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 795, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 21:39:46,786 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 21:44:56,554 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 21:44:56,569 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000002B39F87BE00>, <app.database.models.Group object at 0x000002B39FA079D0>, <app.database.models.Group object at 0x000002B39FA07B10>, <app.database.models.Group object at 0x000002B39FAF55B0>, <app.database.models.Group object at 0x000002B39FAF5940>, <app.database.models.Group object at 0x000002B39FA87650>, <app.database.models.Group object at 0x000002B39FA26030>, <app.database.models.Group object at 0x000002B39FA26140>, <app.database.models.Group object at 0x000002B39FA26250>, <app.database.models.Group object at 0x000002B39FA26360>, <app.database.models.Group object at 0x000002B39FA26470>, <app.database.models.Group object at 0x000002B39FA26580>, <app.database.models.Group object at 0x000002B39FA26690>, <app.database.models.Group object at 0x000002B39FA267A0>, <app.database.models.Group object at 0x000002B39FA268B0>, <app.database.models.Group object at 0x000002B39FA269C0>, <app.database.models.Group object at 0x000002B39FA26AD0>, <app.database.models.Group object at 0x000002B39FA26BE0>, <app.database.models.Group object at 0x000002B39FA26CF0>, <app.database.models.Group object at 0x000002B39FA26E00>, <app.database.models.Group object at 0x000002B39FA26F10>, <app.database.models.Group object at 0x000002B39FA27020>, <app.database.models.Group object at 0x000002B39FA27130>, <app.database.models.Group object at 0x000002B39FA27240>, <app.database.models.Group object at 0x000002B39FA27350>, <app.database.models.Group object at 0x000002B39FA27460>, <app.database.models.Group object at 0x000002B39FA27570>, <app.database.models.Group object at 0x000002B39FA27680>, <app.database.models.Group object at 0x000002B39FA27790>, <app.database.models.Group object at 0x000002B39FA278A0>, <app.database.models.Group object at 0x000002B39FA279B0>, <app.database.models.Group object at 0x000002B39FA27AC0>, <app.database.models.Group object at 0x000002B39FA27BD0>, <app.database.models.Group object at 0x000002B39FA27CE0>, <app.database.models.Group object at 0x000002B39FA27DF0>, <app.database.models.Group object at 0x000002B39FA27F00>, <app.database.models.Group object at 0x000002B39FC64050>, <app.database.models.Group object at 0x000002B39FC64160>, <app.database.models.Group object at 0x000002B39FC64270>, <app.database.models.Group object at 0x000002B39FC64380>, <app.database.models.Group object at 0x000002B39FC64490>, <app.database.models.Group object at 0x000002B39FC645A0>, <app.database.models.Group object at 0x000002B39FC646B0>, <app.database.models.Group object at 0x000002B39FC647C0>, <app.database.models.Group object at 0x000002B39FC648D0>, <app.database.models.Group object at 0x000002B39FC649E0>, <app.database.models.Group object at 0x000002B39FC64AF0>, <app.database.models.Group object at 0x000002B39FC64C00>, <app.database.models.Group object at 0x000002B39FC64D10>, <app.database.models.Group object at 0x000002B39FC64E20>, <app.database.models.Group object at 0x000002B39FC64F30>, <app.database.models.Group object at 0x000002B39FC65040>, <app.database.models.Group object at 0x000002B39FC65150>, <app.database.models.Group object at 0x000002B39FC65260>, <app.database.models.Group object at 0x000002B39FC65370>, <app.database.models.Group object at 0x000002B39FC65480>, <app.database.models.Group object at 0x000002B39FC65590>, <app.database.models.Group object at 0x000002B39FC656A0>, <app.database.models.Group object at 0x000002B39FC657B0>, <app.database.models.Group object at 0x000002B39FC658C0>, <app.database.models.Group object at 0x000002B39FC659D0>, <app.database.models.Group object at 0x000002B39FC65AE0>, <app.database.models.Group object at 0x000002B39FC65BF0>, <app.database.models.Group object at 0x000002B39FC65D00>, <app.database.models.Group object at 0x000002B39FC65E10>, <app.database.models.Group object at 0x000002B39FC65F20>, <app.database.models.Group object at 0x000002B39FC66030>, <app.database.models.Group object at 0x000002B39FC66140>, <app.database.models.Group object at 0x000002B39FC66250>, <app.database.models.Group object at 0x000002B39FC66360>, <app.database.models.Group object at 0x000002B39FC66470>, <app.database.models.Group object at 0x000002B39FC66580>, <app.database.models.Group object at 0x000002B39FC66690>, <app.database.models.Group object at 0x000002B39FC667A0>, <app.database.models.Group object at 0x000002B39FC668B0>, <app.database.models.Group object at 0x000002B39FC669C0>, <app.database.models.Group object at 0x000002B39FC66AD0>, <app.database.models.Group object at 0x000002B39FC66BE0>, <app.database.models.Group object at 0x000002B39FC66CF0>]
2025-06-04 21:44:56,569 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 21:44:56,569 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 21:44:56,569 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 21:44:56,569 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 21:44:56,569 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-04 21:44:57,331 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 21:44:57,332 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 21:44:57,332 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 21:44:57,332 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 21:44:57,332 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 21:44:57,332 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-04 21:44:57,332 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913')], HighestMarginPerLot=655.81629526
2025-06-04 21:44:57,332 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1311.63, ContributingOrders=2 (based on individual stored margins)
2025-06-04 21:44:57,332 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-04 21:44:57,333 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 21:44:57,333 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 21:44:57,333 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 21:44:57,333 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 21:44:57,333 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=656.5355988711304780148273795
2025-06-04 21:44:57,333 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.5355988711304780148273795
2025-06-04 21:44:57,333 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=3.00000000, NetQty=3.00000000
2025-06-04 21:44:57,333 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913'), Decimal('656.5355988711304780148273795')], HighestMarginPerLot=656.5355988711304780148273795
2025-06-04 21:44:57,333 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1969.61, ContributingOrders=3 (based on individual stored margins)
2025-06-04 21:44:57,333 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=1311.63, MarginAfter=1969.61, AdditionalMargin=657.98
2025-06-04 21:44:57,341 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=1311.63000000, CalculatedNewMargin=1969.61
2025-06-04 21:44:57,361 - INFO - orders - [get_order_model] called with: 'demo' (type: <class 'str'>)
2025-06-04 21:44:57,361 - INFO - orders - [get_order_model] Branch: isinstance(user_or_type, str)
2025-06-04 21:44:57,362 - INFO - orders - [get_order_model] Branch: user_type string is 'demo' -> DemoUserOrder
2025-06-04 21:44:57,362 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '9447353637', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8879700000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('656.5355988711304780148273795'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-04 21:44:57,388 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1969.61
2025-06-04 21:44:57,432 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-04 21:45:35,363 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 21:45:35,363 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 21:45:35,363 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000002B39FA05950>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 21:45:35,363 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000002B39FA05950> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 21:45:35,363 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 21:45:35,363 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 21:45:35,363 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 21:45:35,363 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 21:45:35,363 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 21:45:35,363 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 21:45:35,368 - ERROR - orders - Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 692, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 21:45:35,371 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 692, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 795, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 21:50:35,416 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 21:52:56,482 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 21:53:00,648 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 21:53:00,648 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 21:53:00,648 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000002808D3BD550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 21:53:00,648 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000002808D3BD550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 21:53:00,648 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 21:53:00,648 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 21:53:00,648 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 21:53:00,649 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 21:53:00,649 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 21:53:00,649 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 21:53:00,663 - ERROR - orders - Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 693, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 21:53:00,666 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 693, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 796, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 21:55:12,028 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 21:55:36,033 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 21:55:36,033 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 21:55:36,033 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000002C912441550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 21:55:36,034 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000002C912441550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 21:55:36,034 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 21:55:36,034 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 21:55:36,034 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 21:55:36,034 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 21:55:36,034 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 21:55:36,034 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 21:55:36,058 - INFO - orders - Live user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 21:55:36,077 - ERROR - orders - Could not retrieve and lock user record for user ID: 1
2025-06-04 21:55:36,080 - ERROR - orders - Error processing close order: 500: Could not retrieve user data securely.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 717, in close_order
    raise HTTPException(status_code=500, detail="Could not retrieve user data securely.")
fastapi.exceptions.HTTPException: 500: Could not retrieve user data securely.
2025-06-04 21:55:36,082 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Could not retrieve user data securely.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 717, in close_order
    raise HTTPException(status_code=500, detail="Could not retrieve user data securely.")
fastapi.exceptions.HTTPException: 500: Could not retrieve user data securely.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 802, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Could not retrieve user data securely.
2025-06-04 22:00:46,696 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 22:32:36,138 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 22:35:04,922 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 22:35:04,922 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 22:35:04,923 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000023C90585450>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 22:35:04,923 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x0000023C90585450> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 22:35:04,923 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 22:35:04,923 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 22:35:04,923 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 22:35:04,923 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 22:35:04,923 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 22:35:04,923 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 22:35:04,959 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 22:35:05,007 - ERROR - orders - Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 735, in close_order
    margin_before_recalc = await calculate_total_symbol_margin_contribution(
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        db=db, redis_client=redis_client, user_id=db_user_locked.id, symbol=order_symbol,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        open_positions_for_symbol=all_open_orders_for_symbol, order_model_for_calc=order_model_class
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
2025-06-04 22:35:05,011 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 735, in close_order
    margin_before_recalc = await calculate_total_symbol_margin_contribution(
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        db=db, redis_client=redis_client, user_id=db_user_locked.id, symbol=order_symbol,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        open_positions_for_symbol=all_open_orders_for_symbol, order_model_for_calc=order_model_class
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 815, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
2025-06-04 22:37:14,085 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 22:37:42,186 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 22:37:42,186 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 22:37:42,187 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000254B3015550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 22:37:42,187 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x00000254B3015550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 22:37:42,187 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 22:37:42,187 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 22:37:42,187 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 22:37:42,187 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 22:37:42,187 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 22:37:42,187 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 22:37:42,207 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 22:37:42,226 - ERROR - orders - Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 735, in close_order
    margin_before_recalc = await calculate_total_symbol_margin_contribution(
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        db=db, redis_client=redis_client, user_id=db_user_locked.id, symbol=order_symbol,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        open_positions_for_symbol=all_open_orders_for_symbol, order_model_for_calc=order_model_class
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
2025-06-04 22:37:42,227 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 735, in close_order
    margin_before_recalc = await calculate_total_symbol_margin_contribution(
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        db=db, redis_client=redis_client, user_id=db_user_locked.id, symbol=order_symbol,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        open_positions_for_symbol=all_open_orders_for_symbol, order_model_for_calc=order_model_class
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 815, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
2025-06-04 22:46:53,658 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 22:47:31,562 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 22:59:06,116 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:00:35,897 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:00:40,004 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:00:40,005 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:00:40,005 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000255AC019550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:00:40,005 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x00000255AC019550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:00:40,005 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:00:40,005 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:00:40,006 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:00:40,006 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:00:40,007 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:00:40,007 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:00:40,050 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:00:40,102 - ERROR - orders - Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 737, in close_order
    margin_before_recalc = await calculate_total_symbol_margin_contribution(
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        db=db, redis_client=redis_client, user_id=db_user_locked.id, symbol=order_symbol,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        open_positions_for_symbol=all_open_orders_for_symbol, order_model_for_calc=order_model_class
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
2025-06-04 23:00:40,106 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 737, in close_order
    margin_before_recalc = await calculate_total_symbol_margin_contribution(
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        db=db, redis_client=redis_client, user_id=db_user_locked.id, symbol=order_symbol,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        open_positions_for_symbol=all_open_orders_for_symbol, order_model_for_calc=order_model_class
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 817, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
2025-06-04 23:06:24,131 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:07:41,883 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:08:44,174 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:10:35,778 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:10:35,779 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:10:35,779 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000002BD7D0416D0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:10:35,779 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000002BD7D0416D0> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:10:35,779 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:10:35,779 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:10:35,779 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:10:35,780 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:10:35,780 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:10:35,780 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:10:35,847 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:10:35,874 - ERROR - orders - Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 738, in close_order
    margin_before_recalc = await calculate_total_symbol_margin_contribution(
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        db=db, redis_client=redis_client, user_id=db_user_locked.id, symbol=order_symbol,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        open_positions_for_symbol=all_open_orders_for_symbol, order_model_for_calc=order_model_class
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
2025-06-04 23:10:35,877 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 738, in close_order
    margin_before_recalc = await calculate_total_symbol_margin_contribution(
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        db=db, redis_client=redis_client, user_id=db_user_locked.id, symbol=order_symbol,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        open_positions_for_symbol=all_open_orders_for_symbol, order_model_for_calc=order_model_class
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 818, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
2025-06-04 23:11:19,007 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:11:25,550 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:11:25,550 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:11:25,550 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001FD7E57D550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:11:25,550 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000001FD7E57D550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:11:25,550 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:11:25,551 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:11:25,551 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:11:25,551 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:11:25,551 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:11:25,551 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:11:25,585 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:11:25,605 - ERROR - orders - Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 738, in close_order
    margin_before_recalc = await calculate_total_symbol_margin_contribution(
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        db=db, redis_client=redis_client, user_id=db_user_locked.id, symbol=order_symbol,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        open_positions_for_symbol=all_open_orders_for_symbol, order_model_for_calc=order_model_class
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
2025-06-04 23:11:25,607 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 738, in close_order
    margin_before_recalc = await calculate_total_symbol_margin_contribution(
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        db=db, redis_client=redis_client, user_id=db_user_locked.id, symbol=order_symbol,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        open_positions_for_symbol=all_open_orders_for_symbol, order_model_for_calc=order_model_class
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 818, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
2025-06-04 23:14:39,779 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:14:44,111 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:15:10,659 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:15:10,659 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:15:10,659 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001BB1DD1D550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:15:10,659 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000001BB1DD1D550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:15:10,660 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:15:10,660 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:15:10,660 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:15:10,660 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:15:10,660 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:15:10,660 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:15:10,674 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:15:10,690 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-04 23:15:10,691 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:15:10,691 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:15:10,691 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:15:10,691 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:15:10,691 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 81): Type=SELL, Qty=1.00000000, StoredMargin=656.53559887
2025-06-04 23:15:10,691 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.53559887
2025-06-04 23:15:10,691 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=3.00000000, NetQty=3.00000000
2025-06-04 23:15:10,691 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913'), Decimal('656.53559887')], HighestMarginPerLot=656.53559887
2025-06-04 23:15:10,691 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1969.61, ContributingOrders=3 (based on individual stored margins)
2025-06-04 23:15:10,692 - ERROR - orders - Error processing close order: unsupported operand type(s) for -: 'decimal.Decimal' and 'dict'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 743, in close_order
    non_symbol_margin = current_overall_margin - margin_before_recalc
                        ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
TypeError: unsupported operand type(s) for -: 'decimal.Decimal' and 'dict'
2025-06-04 23:15:10,694 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: unsupported operand type(s) for -: 'decimal.Decimal' and 'dict'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 743, in close_order
    non_symbol_margin = current_overall_margin - margin_before_recalc
                        ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
TypeError: unsupported operand type(s) for -: 'decimal.Decimal' and 'dict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 818, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: unsupported operand type(s) for -: 'decimal.Decimal' and 'dict'
2025-06-04 23:16:39,870 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:16:45,312 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:16:45,312 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:16:45,312 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000002E4FAC2D550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:16:45,313 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000002E4FAC2D550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:16:45,313 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:16:45,313 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:16:45,313 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:16:45,314 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:16:45,314 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:16:45,314 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:16:45,361 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:16:45,405 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-04 23:16:45,405 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:16:45,405 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:16:45,405 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:16:45,405 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:16:45,406 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 81): Type=SELL, Qty=1.00000000, StoredMargin=656.53559887
2025-06-04 23:16:45,406 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.53559887
2025-06-04 23:16:45,406 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=3.00000000, NetQty=3.00000000
2025-06-04 23:16:45,406 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913'), Decimal('656.53559887')], HighestMarginPerLot=656.53559887
2025-06-04 23:16:45,406 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1969.61, ContributingOrders=3 (based on individual stored margins)
2025-06-04 23:16:45,407 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 23:16:45,407 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:16:45,407 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:16:45,407 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:16:45,407 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:16:45,407 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-04 23:16:45,408 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913')], HighestMarginPerLot=655.81629526
2025-06-04 23:16:45,408 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1311.63, ContributingOrders=2 (based on individual stored margins)
2025-06-04 23:16:45,436 - ERROR - orders - Error converting PnL on Close from CAD to USD: object dict can't be used in 'await' expression
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 32, in _convert_to_usd
    raw_market_data = await get_latest_market_data()
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: object dict can't be used in 'await' expression
2025-06-04 23:16:45,441 - ERROR - orders - Order 9447353637: PnL conversion failed. Rates missing for CAD/USD.
2025-06-04 23:16:45,453 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 791, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.
2025-06-04 23:16:45,457 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 791, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 820, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
2025-06-04 23:25:01,357 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:25:15,692 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:25:20,947 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:25:20,947 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:25:20,948 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000016DF629D550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:25:20,948 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x0000016DF629D550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:25:20,948 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:25:20,948 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:25:20,948 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:25:20,949 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:25:20,949 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:25:20,949 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:25:20,990 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:25:21,010 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-04 23:25:21,010 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:25:21,010 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:25:21,010 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:25:21,010 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:25:21,010 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 81): Type=SELL, Qty=1.00000000, StoredMargin=656.53559887
2025-06-04 23:25:21,010 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.53559887
2025-06-04 23:25:21,011 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=3.00000000, NetQty=3.00000000
2025-06-04 23:25:21,011 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913'), Decimal('656.53559887')], HighestMarginPerLot=656.53559887
2025-06-04 23:25:21,011 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1969.61, ContributingOrders=3 (based on individual stored margins)
2025-06-04 23:25:21,011 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 23:25:21,011 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:25:21,011 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:25:21,011 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:25:21,011 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:25:21,011 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-04 23:25:21,011 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913')], HighestMarginPerLot=655.81629526
2025-06-04 23:25:21,011 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1311.63, ContributingOrders=2 (based on individual stored margins)
2025-06-04 23:25:21,049 - ERROR - orders - Error converting PnL on Close from CAD to USD: get_last_known_price() missing 2 required positional arguments: 'redis_client' and 'symbol'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 33, in _convert_to_usd
    raw_market_data = await get_last_known_price()
                            ~~~~~~~~~~~~~~~~~~~~^^
TypeError: get_last_known_price() missing 2 required positional arguments: 'redis_client' and 'symbol'
2025-06-04 23:25:21,053 - ERROR - orders - Order 9447353637: PnL conversion failed. Rates missing for CAD/USD.
2025-06-04 23:25:21,056 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 791, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.
2025-06-04 23:25:21,059 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 791, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 820, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
2025-06-04 23:26:06,614 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:27:22,695 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:28:08,861 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:28:08,861 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:28:08,861 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000021E6A0AD550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:28:08,861 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x0000021E6A0AD550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:28:08,861 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:28:08,861 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:28:08,861 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:28:08,861 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:28:08,861 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:28:08,861 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:28:08,895 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:28:08,918 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-04 23:28:08,918 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 81): Type=SELL, Qty=1.00000000, StoredMargin=656.53559887
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.53559887
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=3.00000000, NetQty=3.00000000
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913'), Decimal('656.53559887')], HighestMarginPerLot=656.53559887
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1969.61, ContributingOrders=3 (based on individual stored margins)
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-04 23:28:08,920 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913')], HighestMarginPerLot=655.81629526
2025-06-04 23:28:08,920 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1311.63, ContributingOrders=2 (based on individual stored margins)
2025-06-04 23:28:08,937 - ERROR - orders - Error processing close order: _convert_to_usd() missing 1 required positional argument: 'redis_client'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 788, in close_order
    profit_usd = await _convert_to_usd(profit, profit_currency, db_user_locked.id, db_order.order_id, "PnL on Close", db=db)
                       ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: _convert_to_usd() missing 1 required positional argument: 'redis_client'
2025-06-04 23:28:08,940 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: _convert_to_usd() missing 1 required positional argument: 'redis_client'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 788, in close_order
    profit_usd = await _convert_to_usd(profit, profit_currency, db_user_locked.id, db_order.order_id, "PnL on Close", db=db)
                       ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: _convert_to_usd() missing 1 required positional argument: 'redis_client'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 820, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: _convert_to_usd() missing 1 required positional argument: 'redis_client'
2025-06-04 23:28:27,170 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:32:35,789 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:32:49,723 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:33:03,496 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:34:15,432 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:34:28,871 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:35:51,596 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:36:41,279 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:36:41,279 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:36:41,279 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000002A101DDD550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:36:41,279 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000002A101DDD550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:36:41,279 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:36:41,279 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:36:41,279 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:36:41,279 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:36:41,279 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:36:41,279 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:36:41,303 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:36:41,322 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-04 23:36:41,322 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 81): Type=SELL, Qty=1.00000000, StoredMargin=656.53559887
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.53559887
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=3.00000000, NetQty=3.00000000
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913'), Decimal('656.53559887')], HighestMarginPerLot=656.53559887
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1969.61, ContributingOrders=3 (based on individual stored margins)
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913')], HighestMarginPerLot=655.81629526
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1311.63, ContributingOrders=2 (based on individual stored margins)
2025-06-04 23:36:41,343 - ERROR - orders - No conversion rate found for CAD to USD for PnL on Close
2025-06-04 23:36:41,343 - ERROR - orders - Order 9447353637: PnL conversion failed. Rates missing for CAD/USD.
2025-06-04 23:36:41,347 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 791, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.
2025-06-04 23:36:41,348 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 791, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 820, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
2025-06-04 23:43:29,892 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:43:29,893 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:43:29,893 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000002A101DC3B10>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:43:29,894 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000002A101DC3B10> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:43:29,894 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:43:29,894 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:43:29,894 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:43:29,894 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:43:29,894 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:43:29,894 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:43:29,919 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:43:29,942 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-04 23:43:29,943 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:43:29,943 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:43:29,943 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:43:29,943 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:43:29,943 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 81): Type=SELL, Qty=1.00000000, StoredMargin=656.53559887
2025-06-04 23:43:29,943 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.53559887
2025-06-04 23:43:29,943 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=3.00000000, NetQty=3.00000000
2025-06-04 23:43:29,943 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913'), Decimal('656.53559887')], HighestMarginPerLot=656.53559887
2025-06-04 23:43:29,943 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1969.61, ContributingOrders=3 (based on individual stored margins)
2025-06-04 23:43:29,944 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 23:43:29,944 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:43:29,944 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:43:29,944 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:43:29,945 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:43:29,945 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-04 23:43:29,946 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913')], HighestMarginPerLot=655.81629526
2025-06-04 23:43:29,946 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1311.63, ContributingOrders=2 (based on individual stored margins)
2025-06-04 23:43:29,966 - ERROR - orders - No conversion rate found for CAD to USD for PnL on Close
2025-06-04 23:43:29,967 - ERROR - orders - Order 9447353637: PnL conversion failed. Rates missing for CAD/USD.
2025-06-04 23:43:29,970 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 791, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.
2025-06-04 23:43:29,972 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 791, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 820, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
2025-06-04 23:44:12,434 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:44:21,734 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:44:21,734 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:44:21,735 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001CB6615D550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:44:21,735 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000001CB6615D550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:44:21,735 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:44:21,735 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:44:21,735 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:44:21,735 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:44:21,735 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:44:21,735 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:44:21,754 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:44:21,779 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-04 23:44:21,779 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:44:21,779 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:44:21,779 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:44:21,779 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:44:21,779 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 81): Type=SELL, Qty=1.00000000, StoredMargin=656.53559887
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.53559887
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=3.00000000, NetQty=3.00000000
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913'), Decimal('656.53559887')], HighestMarginPerLot=656.53559887
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1969.61, ContributingOrders=3 (based on individual stored margins)
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913')], HighestMarginPerLot=655.81629526
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1311.63, ContributingOrders=2 (based on individual stored margins)
2025-06-04 23:44:21,803 - DEBUG - orders - Inverse conversion for PnL on Close: -103.000000000000000000000000 CAD / 1.3704900000 = -75.15560128129355194127647776 USD
2025-06-04 23:44:21,812 - ERROR - orders - Error processing close order: name 'generate_10_digit_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 809, in close_order
    db.add(Wallet(**WalletCreate(**wallet_common_data, transaction_type="Profit/Loss", transaction_amount=db_order.net_profit, description=f"P/L for closing order {db_order.order_id}").model_dump(exclude_none=True), transaction_id=generate_10_digit_id()))
                                                                                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^
NameError: name 'generate_10_digit_id' is not defined. Did you mean: 'generate_unique_10_digit_id'?
2025-06-04 23:44:21,820 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: name 'generate_10_digit_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 809, in close_order
    db.add(Wallet(**WalletCreate(**wallet_common_data, transaction_type="Profit/Loss", transaction_amount=db_order.net_profit, description=f"P/L for closing order {db_order.order_id}").model_dump(exclude_none=True), transaction_id=generate_10_digit_id()))
                                                                                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^
NameError: name 'generate_10_digit_id' is not defined. Did you mean: 'generate_unique_10_digit_id'?

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 820, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: name 'generate_10_digit_id' is not defined
2025-06-04 23:46:34,664 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:46:41,630 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:47:09,567 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:47:09,568 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:47:09,568 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000218010DD550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:47:09,568 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x00000218010DD550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:47:09,568 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:47:09,568 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:47:09,568 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:47:09,568 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:47:09,568 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:47:09,568 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:47:09,597 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:47:09,621 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-04 23:47:09,621 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 81): Type=SELL, Qty=1.00000000, StoredMargin=656.53559887
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.53559887
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=3.00000000, NetQty=3.00000000
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913'), Decimal('656.53559887')], HighestMarginPerLot=656.53559887
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1969.61, ContributingOrders=3 (based on individual stored margins)
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913')], HighestMarginPerLot=655.81629526
2025-06-04 23:47:09,623 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1311.63, ContributingOrders=2 (based on individual stored margins)
2025-06-04 23:47:09,666 - DEBUG - orders - Inverse conversion for PnL on Close: -103.000000000000000000000000 CAD / 1.3704900000 = -75.15560128129355194127647776 USD
2025-06-04 23:47:09,743 - ERROR - orders - Error processing close order: Can't operate on closed transaction inside context manager.  Please complete the context manager before emitting further commands.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 819, in close_order
    await db.refresh(db_order)
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 331, in refresh
    await greenlet_spawn(
    ...<4 lines>...
    )
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 190, in greenlet_spawn
    result = context.switch(*args, **kwargs)
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 3168, in refresh
    loading.load_on_ident(
    ~~~~~~~~~~~~~~~~~~~~~^
        self,
        ^^^^^
    ...<10 lines>...
        is_user_refresh=True,
        ^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\loading.py", line 509, in load_on_ident
    return load_on_pk_identity(
        session,
    ...<11 lines>...
        is_user_refresh=is_user_refresh,
    )
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\loading.py", line 694, in load_on_pk_identity
    session.execute(
    ~~~~~~~~~~~~~~~^
        q,
        ^^
    ...<2 lines>...
        bind_arguments=bind_arguments,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 2241, in _execute_internal
    conn = self._connection_for_bind(bind)
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 2105, in _connection_for_bind
    TransactionalContext._trans_ctx_check(self)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\util.py", line 111, in _trans_ctx_check
    raise exc.InvalidRequestError(
    ...<3 lines>...
    )
sqlalchemy.exc.InvalidRequestError: Can't operate on closed transaction inside context manager.  Please complete the context manager before emitting further commands.
2025-06-04 23:47:09,756 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: Can't operate on closed transaction inside context manager.  Please complete the context manager before emitting further commands.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 819, in close_order
    await db.refresh(db_order)
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 331, in refresh
    await greenlet_spawn(
    ...<4 lines>...
    )
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 190, in greenlet_spawn
    result = context.switch(*args, **kwargs)
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 3168, in refresh
    loading.load_on_ident(
    ~~~~~~~~~~~~~~~~~~~~~^
        self,
        ^^^^^
    ...<10 lines>...
        is_user_refresh=True,
        ^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\loading.py", line 509, in load_on_ident
    return load_on_pk_identity(
        session,
    ...<11 lines>...
        is_user_refresh=is_user_refresh,
    )
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\loading.py", line 694, in load_on_pk_identity
    session.execute(
    ~~~~~~~~~~~~~~~^
        q,
        ^^
    ...<2 lines>...
        bind_arguments=bind_arguments,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 2241, in _execute_internal
    conn = self._connection_for_bind(bind)
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 2105, in _connection_for_bind
    TransactionalContext._trans_ctx_check(self)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\util.py", line 111, in _trans_ctx_check
    raise exc.InvalidRequestError(
    ...<3 lines>...
    )
sqlalchemy.exc.InvalidRequestError: Can't operate on closed transaction inside context manager.  Please complete the context manager before emitting further commands.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 823, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: Can't operate on closed transaction inside context manager.  Please complete the context manager before emitting further commands.
2025-06-04 23:51:56,574 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:52:33,026 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:52:33,026 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:52:33,026 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000201E69B9550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:52:33,026 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x00000201E69B9550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:52:33,026 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:52:33,026 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:52:33,026 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:52:33,026 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:52:33,026 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:52:33,026 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:52:33,045 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:52:33,049 - ERROR - orders - Error processing close order: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 710, in close_order
    raise HTTPException(status_code=400, detail=f"Order status is '{db_order.order_status}'. Only 'OPEN' orders can be closed.")
fastapi.exceptions.HTTPException: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.
2025-06-04 23:52:33,052 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 710, in close_order
    raise HTTPException(status_code=400, detail=f"Order status is '{db_order.order_status}'. Only 'OPEN' orders can be closed.")
fastapi.exceptions.HTTPException: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 822, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.
2025-06-04 23:54:07,887 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 23:54:07,887 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:54:07,887 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000201E6B3C550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:54:07,888 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x00000201E6B3C550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:54:07,888 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:54:07,888 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:54:07,888 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:54:07,888 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:54:07,888 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:54:07,889 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:54:07,921 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:54:07,957 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 23:54:07,957 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:54:07,958 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:54:07,958 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:54:07,959 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:54:07,959 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-04 23:54:07,959 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913')], HighestMarginPerLot=655.81629526
2025-06-04 23:54:07,959 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1311.63, ContributingOrders=2 (based on individual stored margins)
2025-06-04 23:54:07,959 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-04 23:54:07,959 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:54:07,959 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:54:07,960 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1.00000000, NetQty=1.00000000
2025-06-04 23:54:07,960 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526')], HighestMarginPerLot=655.81629526
2025-06-04 23:54:07,960 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=655.82, ContributingOrders=1 (based on individual stored margins)
2025-06-04 23:54:07,986 - DEBUG - orders - Inverse conversion for PnL on Close: -33.000000000000000000000000 CAD / 1.3704900000 = -24.07897905128822537924392006 USD
2025-06-04 23:54:08,050 - ERROR - orders - Error processing close order: 1 validation error for OrderResponse
  Input should be a valid dictionary or instance of OrderResponse [type=model_type, input_value=<app.database.models.Demo...t at 0x00000201E6B3C410>, input_type=DemoUserOrder]
    For further information visit https://errors.pydantic.dev/2.11/v/model_type
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 819, in close_order
    return OrderResponse.model_validate(db_order)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 705, in model_validate
    return cls.__pydantic_validator__.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        obj, strict=strict, from_attributes=from_attributes, context=context, by_alias=by_alias, by_name=by_name
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
pydantic_core._pydantic_core.ValidationError: 1 validation error for OrderResponse
  Input should be a valid dictionary or instance of OrderResponse [type=model_type, input_value=<app.database.models.Demo...t at 0x00000201E6B3C410>, input_type=DemoUserOrder]
    For further information visit https://errors.pydantic.dev/2.11/v/model_type
2025-06-04 23:54:08,055 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 1 validation error for OrderResponse
  Input should be a valid dictionary or instance of OrderResponse [type=model_type, input_value=<app.database.models.Demo...t at 0x00000201E6B3C410>, input_type=DemoUserOrder]
    For further information visit https://errors.pydantic.dev/2.11/v/model_type
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 819, in close_order
    return OrderResponse.model_validate(db_order)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 705, in model_validate
    return cls.__pydantic_validator__.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        obj, strict=strict, from_attributes=from_attributes, context=context, by_alias=by_alias, by_name=by_name
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
pydantic_core._pydantic_core.ValidationError: 1 validation error for OrderResponse
  Input should be a valid dictionary or instance of OrderResponse [type=model_type, input_value=<app.database.models.Demo...t at 0x00000201E6B3C410>, input_type=DemoUserOrder]
    For further information visit https://errors.pydantic.dev/2.11/v/model_type

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 822, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 1 validation error for OrderResponse
  Input should be a valid dictionary or instance of OrderResponse [type=model_type, input_value=<app.database.models.Demo...t at 0x00000201E6B3C410>, input_type=DemoUserOrder]
    For further information visit https://errors.pydantic.dev/2.11/v/model_type
2025-06-04 23:54:56,412 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:56:05,278 - INFO - orders - Close order request received - Order ID: 1688253127, User ID: 1, User Type: demo
2025-06-04 23:56:05,279 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:56:05,279 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001F89146D550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:56:05,279 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000001F89146D550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:56:05,280 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:56:05,280 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:56:05,280 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:56:05,281 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:56:05,281 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:56:05,281 - INFO - orders - Request to close order 1688253127 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:56:05,319 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:56:05,371 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-04 23:56:05,371 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:56:05,371 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:56:05,372 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1.00000000, NetQty=1.00000000
2025-06-04 23:56:05,372 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526')], HighestMarginPerLot=655.81629526
2025-06-04 23:56:05,372 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=655.82, ContributingOrders=1 (based on individual stored margins)
2025-06-04 23:56:05,372 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-04 23:56:05,372 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-04 23:56:05,394 - DEBUG - orders - Inverse conversion for PnL on Close: -31.000000000000000000000000 CAD / 1.3704900000 = -22.61964698757378747747156127 USD
2025-06-05 00:01:50,094 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-05 00:01:50,115 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001F89028BBD0>, <app.database.models.Group object at 0x000001F89028BCE0>, <app.database.models.Group object at 0x000001F891461480>, <app.database.models.Group object at 0x000001F891461370>, <app.database.models.Group object at 0x000001F8914618C0>, <app.database.models.Group object at 0x000001F8914619D0>, <app.database.models.Group object at 0x000001F8914608D0>, <app.database.models.Group object at 0x000001F891462140>, <app.database.models.Group object at 0x000001F891462250>, <app.database.models.Group object at 0x000001F891462360>, <app.database.models.Group object at 0x000001F891462470>, <app.database.models.Group object at 0x000001F891462580>, <app.database.models.Group object at 0x000001F891462690>, <app.database.models.Group object at 0x000001F8914627A0>, <app.database.models.Group object at 0x000001F8914628B0>, <app.database.models.Group object at 0x000001F8914629C0>, <app.database.models.Group object at 0x000001F891462AD0>, <app.database.models.Group object at 0x000001F891462BE0>, <app.database.models.Group object at 0x000001F891462CF0>, <app.database.models.Group object at 0x000001F891462E00>, <app.database.models.Group object at 0x000001F891462F10>, <app.database.models.Group object at 0x000001F891463020>, <app.database.models.Group object at 0x000001F891463130>, <app.database.models.Group object at 0x000001F891463240>, <app.database.models.Group object at 0x000001F891463350>, <app.database.models.Group object at 0x000001F891463460>, <app.database.models.Group object at 0x000001F891463570>, <app.database.models.Group object at 0x000001F891463680>, <app.database.models.Group object at 0x000001F891463790>, <app.database.models.Group object at 0x000001F8914638A0>, <app.database.models.Group object at 0x000001F8914639B0>, <app.database.models.Group object at 0x000001F891463AC0>, <app.database.models.Group object at 0x000001F891463BD0>, <app.database.models.Group object at 0x000001F891463CE0>, <app.database.models.Group object at 0x000001F891463DF0>, <app.database.models.Group object at 0x000001F891463F00>, <app.database.models.Group object at 0x000001F8914605A0>, <app.database.models.Group object at 0x000001F8915E4050>, <app.database.models.Group object at 0x000001F8915E4160>, <app.database.models.Group object at 0x000001F8915E4270>, <app.database.models.Group object at 0x000001F8915E4380>, <app.database.models.Group object at 0x000001F8915E4490>, <app.database.models.Group object at 0x000001F8915E45A0>, <app.database.models.Group object at 0x000001F8915E46B0>, <app.database.models.Group object at 0x000001F8915E47C0>, <app.database.models.Group object at 0x000001F8915E48D0>, <app.database.models.Group object at 0x000001F8915E49E0>, <app.database.models.Group object at 0x000001F8915E4AF0>, <app.database.models.Group object at 0x000001F8915E4C00>, <app.database.models.Group object at 0x000001F8915E4D10>, <app.database.models.Group object at 0x000001F8915E4E20>, <app.database.models.Group object at 0x000001F8915E4F30>, <app.database.models.Group object at 0x000001F8915E5040>, <app.database.models.Group object at 0x000001F8915E5150>, <app.database.models.Group object at 0x000001F8915E5260>, <app.database.models.Group object at 0x000001F8915E5370>, <app.database.models.Group object at 0x000001F8915E5480>, <app.database.models.Group object at 0x000001F8915E5590>, <app.database.models.Group object at 0x000001F8915E56A0>, <app.database.models.Group object at 0x000001F8915E57B0>, <app.database.models.Group object at 0x000001F8915E58C0>, <app.database.models.Group object at 0x000001F8915E59D0>, <app.database.models.Group object at 0x000001F8915E5AE0>, <app.database.models.Group object at 0x000001F8915E5BF0>, <app.database.models.Group object at 0x000001F8915E5D00>, <app.database.models.Group object at 0x000001F8915E5E10>, <app.database.models.Group object at 0x000001F8915E5F20>, <app.database.models.Group object at 0x000001F8915E6030>, <app.database.models.Group object at 0x000001F8915E6140>, <app.database.models.Group object at 0x000001F8915E6250>, <app.database.models.Group object at 0x000001F8915E6360>, <app.database.models.Group object at 0x000001F8915E6470>, <app.database.models.Group object at 0x000001F8915E69C0>, <app.database.models.Group object at 0x000001F8915E6AD0>, <app.database.models.Group object at 0x000001F8915E6F10>, <app.database.models.Group object at 0x000001F8915E7130>, <app.database.models.Group object at 0x000001F8915E7020>, <app.database.models.Group object at 0x000001F8915E7240>, <app.database.models.Group object at 0x000001F8915E7350>]
2025-06-05 00:01:50,115 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-05 00:01:50,116 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-05 00:01:50,117 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-05 00:01:50,118 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-05 00:01:50,119 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-05 00:01:50,803 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-05 00:01:50,803 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-05 00:01:50,804 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-05 00:01:50,804 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=656.8341271060582782813540226
2025-06-05 00:01:50,804 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.8341271060582782813540226
2025-06-05 00:01:50,804 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1, TotalSellQty=0, NetQty=1
2025-06-05 00:01:50,804 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.8341271060582782813540226')], HighestMarginPerLot=656.8341271060582782813540226
2025-06-05 00:01:50,805 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=656.83, ContributingOrders=1 (based on individual stored margins)
2025-06-05 00:01:50,805 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=656.83, AdditionalMargin=656.83
2025-06-05 00:01:50,813 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=656.83
2025-06-05 00:01:50,851 - INFO - orders - [get_order_model] called with: 'demo' (type: <class 'str'>)
2025-06-05 00:01:50,852 - INFO - orders - [get_order_model] Branch: isinstance(user_or_type, str)
2025-06-05 00:01:50,853 - INFO - orders - [get_order_model] Branch: user_type string is 'demo' -> DemoUserOrder
2025-06-05 00:01:50,854 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '9602639657', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8878200000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('656.8341271060582782813540226'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-05 00:01:50,928 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 656.83
2025-06-05 00:01:51,047 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-05 00:02:51,077 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-05 00:02:51,077 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '5d469dac-cd90-4774-97c6-035e12eb7bf0', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.8885'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-05 00:02:51,078 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-05 00:02:51,078 - INFO - orders - [get_order_model] called with: 'demo' (type: <class 'str'>)
2025-06-05 00:02:51,078 - INFO - orders - [get_order_model] Branch: isinstance(user_or_type, str)
2025-06-05 00:02:51,078 - INFO - orders - [get_order_model] Branch: user_type string is 'demo' -> DemoUserOrder
2025-06-05 00:02:51,120 - INFO - orders - Pending order 5d469dac-cd90-4774-97c6-035e12eb7bf0 added to Redis.
2025-06-05 00:08:33,562 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 00:08:41,804 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 00:20:59,055 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 00:22:57,996 - INFO - orders - Close order request received - Order ID: 9602639657, User ID: 1, User Type: demo
2025-06-05 00:22:57,996 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-05 00:22:57,997 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001496F681E50>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-05 00:22:57,997 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000001496F681E50> (type: <class 'app.database.models.DemoUser'>)
2025-06-05 00:22:57,997 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-05 00:22:57,998 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-05 00:22:57,998 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-05 00:22:57,998 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-05 00:22:57,998 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-05 00:22:57,999 - INFO - orders - Request to close order 9602639657 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-05 00:22:58,092 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-05 00:22:58,164 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-05 00:22:58,165 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 82): Type=BUY, Qty=1.00000000, StoredMargin=656.83412711
2025-06-05 00:22:58,165 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.83412711
2025-06-05 00:22:58,167 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-05 00:22:58,167 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.83412711')], HighestMarginPerLot=656.83412711
2025-06-05 00:22:58,167 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=656.83, ContributingOrders=1 (based on individual stored margins)
2025-06-05 00:22:58,168 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-05 00:22:58,168 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-05 00:22:58,221 - DEBUG - orders - Inverse conversion for PnL on Close: 118.000000000000000000000000 CAD / 1.3704900000 = 86.10059175915183620456916869 USD
2025-06-05 00:24:40,274 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 00:28:45,001 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 00:30:23,530 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 00:30:39,449 - INFO - orders - Close order request received - Order ID: 9602639657, User ID: 1, User Type: demo
2025-06-05 00:30:39,449 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-05 00:30:39,450 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000019FDA4256A0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-05 00:30:39,450 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x0000019FDA4256A0> (type: <class 'app.database.models.DemoUser'>)
2025-06-05 00:30:39,450 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-05 00:30:39,450 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-05 00:30:39,450 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-05 00:30:39,451 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-05 00:30:39,451 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-05 00:30:39,451 - INFO - orders - Request to close order 9602639657 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-05 00:30:39,475 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-05 00:30:39,482 - ERROR - orders - Error processing close order: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 709, in close_order
    raise HTTPException(status_code=400, detail=f"Order status is '{db_order.order_status}'. Only 'OPEN' orders can be closed.")
fastapi.exceptions.HTTPException: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.
2025-06-05 00:30:39,483 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 709, in close_order
    raise HTTPException(status_code=400, detail=f"Order status is '{db_order.order_status}'. Only 'OPEN' orders can be closed.")
fastapi.exceptions.HTTPException: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 821, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.
2025-06-05 00:31:25,904 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-05 00:31:25,921 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000019FDA3F5260>, <app.database.models.Group object at 0x0000019FDA3F5150>, <app.database.models.Group object at 0x0000019FDA3F5040>, <app.database.models.Group object at 0x0000019FDA3F4F30>, <app.database.models.Group object at 0x0000019FDA3F6AD0>, <app.database.models.Group object at 0x0000019FDA3F5BF0>, <app.database.models.Group object at 0x0000019FDA3F7680>, <app.database.models.Group object at 0x0000019FDA3F7790>, <app.database.models.Group object at 0x0000019FDA3F78A0>, <app.database.models.Group object at 0x0000019FDA3F79B0>, <app.database.models.Group object at 0x0000019FDA3F7AC0>, <app.database.models.Group object at 0x0000019FDA3F7BD0>, <app.database.models.Group object at 0x0000019FDA3F7CE0>, <app.database.models.Group object at 0x0000019FDA3F7DF0>, <app.database.models.Group object at 0x0000019FDA3F7F00>, <app.database.models.Group object at 0x0000019FDA3F5AE0>, <app.database.models.Group object at 0x0000019FDA3F6BE0>, <app.database.models.Group object at 0x0000019FDA608050>, <app.database.models.Group object at 0x0000019FDA608160>, <app.database.models.Group object at 0x0000019FDA608270>, <app.database.models.Group object at 0x0000019FDA608380>, <app.database.models.Group object at 0x0000019FDA608490>, <app.database.models.Group object at 0x0000019FDA6085A0>, <app.database.models.Group object at 0x0000019FDA6086B0>, <app.database.models.Group object at 0x0000019FDA6087C0>, <app.database.models.Group object at 0x0000019FDA6088D0>, <app.database.models.Group object at 0x0000019FDA6089E0>, <app.database.models.Group object at 0x0000019FDA608AF0>, <app.database.models.Group object at 0x0000019FDA608C00>, <app.database.models.Group object at 0x0000019FDA608D10>, <app.database.models.Group object at 0x0000019FDA608E20>, <app.database.models.Group object at 0x0000019FDA608F30>, <app.database.models.Group object at 0x0000019FDA609040>, <app.database.models.Group object at 0x0000019FDA609150>, <app.database.models.Group object at 0x0000019FDA609260>, <app.database.models.Group object at 0x0000019FDA609370>, <app.database.models.Group object at 0x0000019FDA609480>, <app.database.models.Group object at 0x0000019FDA609590>, <app.database.models.Group object at 0x0000019FDA6096A0>, <app.database.models.Group object at 0x0000019FDA6097B0>, <app.database.models.Group object at 0x0000019FDA6098C0>, <app.database.models.Group object at 0x0000019FDA6099D0>, <app.database.models.Group object at 0x0000019FDA609AE0>, <app.database.models.Group object at 0x0000019FDA609BF0>, <app.database.models.Group object at 0x0000019FDA609D00>, <app.database.models.Group object at 0x0000019FDA609E10>, <app.database.models.Group object at 0x0000019FDA609F20>, <app.database.models.Group object at 0x0000019FDA60A030>, <app.database.models.Group object at 0x0000019FDA60A140>, <app.database.models.Group object at 0x0000019FDA60A250>, <app.database.models.Group object at 0x0000019FDA60A360>, <app.database.models.Group object at 0x0000019FDA60A470>, <app.database.models.Group object at 0x0000019FDA60A580>, <app.database.models.Group object at 0x0000019FDA60A690>, <app.database.models.Group object at 0x0000019FDA60A7A0>, <app.database.models.Group object at 0x0000019FDA60A8B0>, <app.database.models.Group object at 0x0000019FDA60A9C0>, <app.database.models.Group object at 0x0000019FDA60AAD0>, <app.database.models.Group object at 0x0000019FDA60ABE0>, <app.database.models.Group object at 0x0000019FDA60ACF0>, <app.database.models.Group object at 0x0000019FDA60AE00>, <app.database.models.Group object at 0x0000019FDA60AF10>, <app.database.models.Group object at 0x0000019FDA60B020>, <app.database.models.Group object at 0x0000019FDA60B130>, <app.database.models.Group object at 0x0000019FDA60B240>, <app.database.models.Group object at 0x0000019FDA60B350>, <app.database.models.Group object at 0x0000019FDA60B460>, <app.database.models.Group object at 0x0000019FDA60B570>, <app.database.models.Group object at 0x0000019FDA60B680>, <app.database.models.Group object at 0x0000019FDA60B790>, <app.database.models.Group object at 0x0000019FDA60B8A0>, <app.database.models.Group object at 0x0000019FDA60B9B0>, <app.database.models.Group object at 0x0000019FDA60BAC0>, <app.database.models.Group object at 0x0000019FDA60BBD0>, <app.database.models.Group object at 0x0000019FDA60BCE0>, <app.database.models.Group object at 0x0000019FDA60BDF0>, <app.database.models.Group object at 0x0000019FDA60BF00>, <app.database.models.Group object at 0x0000019FDA61C050>, <app.database.models.Group object at 0x0000019FDA61C160>]
2025-06-05 00:31:25,921 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-05 00:31:25,921 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-05 00:31:25,921 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-05 00:31:25,921 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-05 00:31:25,921 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-05 00:31:26,295 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-05 00:31:26,295 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-05 00:31:26,295 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-05 00:31:26,296 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=657.8621875800490357521864822
2025-06-05 00:31:26,296 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=657.8621875800490357521864822
2025-06-05 00:31:26,296 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1, TotalSellQty=0, NetQty=1
2025-06-05 00:31:26,296 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('657.8621875800490357521864822')], HighestMarginPerLot=657.8621875800490357521864822
2025-06-05 00:31:26,296 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=657.86, ContributingOrders=1 (based on individual stored margins)
2025-06-05 00:31:26,296 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=657.86, AdditionalMargin=657.86
2025-06-05 00:31:26,303 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=657.86
2025-06-05 00:31:26,354 - INFO - orders - [get_order_model] called with: 'demo' (type: <class 'str'>)
2025-06-05 00:31:26,354 - INFO - orders - [get_order_model] Branch: isinstance(user_or_type, str)
2025-06-05 00:31:26,355 - INFO - orders - [get_order_model] Branch: user_type string is 'demo' -> DemoUserOrder
2025-06-05 00:31:26,355 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '4104060571', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8888700000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('657.8621875800490357521864822'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-05 00:31:26,393 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 657.86
2025-06-05 00:31:26,465 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-05 00:31:55,264 - INFO - orders - Close order request received - Order ID: 4104060571, User ID: 1, User Type: demo
2025-06-05 00:31:55,264 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-05 00:31:55,265 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000019FDA5C5450>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-05 00:31:55,265 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x0000019FDA5C5450> (type: <class 'app.database.models.DemoUser'>)
2025-06-05 00:31:55,265 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-05 00:31:55,265 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-05 00:31:55,266 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-05 00:31:55,266 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-05 00:31:55,266 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-05 00:31:55,266 - INFO - orders - Request to close order 4104060571 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-05 00:31:55,285 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-05 00:31:55,308 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-05 00:31:55,309 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 84): Type=BUY, Qty=1.00000000, StoredMargin=657.86218758
2025-06-05 00:31:55,309 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=657.86218758
2025-06-05 00:31:55,309 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-05 00:31:55,309 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('657.86218758')], HighestMarginPerLot=657.86218758
2025-06-05 00:31:55,309 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=657.86, ContributingOrders=1 (based on individual stored margins)
2025-06-05 00:31:55,309 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-05 00:31:55,309 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-05 00:31:55,325 - DEBUG - orders - Inverse conversion for PnL on Close: 13.000000000000000000000000 CAD / 1.3704900000 = 9.485658414143846361520332144 USD
2025-06-05 02:30:56,384 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 02:36:07,667 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-05 02:36:07,667 - INFO - orders - [get_order_model] called with: 'demo' (type: <class 'str'>)
2025-06-05 02:36:07,667 - INFO - orders - [get_order_model] Branch: isinstance(user_or_type, str)
2025-06-05 02:36:07,667 - INFO - orders - [get_order_model] Branch: user_type string is 'demo' -> DemoUserOrder
2025-06-05 02:36:07,668 - ERROR - orders - Unexpected error in place_pending_order: name 'generate_unique_10_digit_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 384, in place_pending_order
    new_order_id = await generate_unique_10_digit_id(db, order_model, 'order_id')
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'generate_unique_10_digit_id' is not defined
2025-06-05 02:39:08,017 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 02:39:25,381 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 02:42:55,508 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-05 02:42:55,509 - INFO - orders - [get_order_model] called with: 'demo' (type: <class 'str'>)
2025-06-05 02:42:55,509 - INFO - orders - [get_order_model] Branch: isinstance(user_or_type, str)
2025-06-05 02:42:55,509 - INFO - orders - [get_order_model] Branch: user_type string is 'demo' -> DemoUserOrder
2025-06-05 02:42:55,522 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '6892778776', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.8885'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-05 02:42:55,522 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-05 02:42:55,619 - INFO - orders - Pending order 6892778776 added to Redis.
2025-06-05 02:47:37,879 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 02:47:58,640 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 03:01:24,110 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 03:37:07,719 - INFO - orders - [get_order_model] called with: 'demo' (type: <class 'str'>)
2025-06-05 03:37:07,720 - INFO - orders - [get_order_model] Branch: isinstance(user_or_type, str)
2025-06-05 03:37:07,720 - INFO - orders - [get_order_model] Branch: user_type string is 'demo' -> DemoUserOrder
2025-06-05 03:38:07,812 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 03:39:49,128 - INFO - orders - [get_order_model] called with: 'demo' (type: <class 'str'>)
2025-06-05 03:39:49,128 - INFO - orders - [get_order_model] Branch: isinstance(user_or_type, str)
2025-06-05 03:39:49,128 - INFO - orders - [get_order_model] Branch: user_type string is 'demo' -> DemoUserOrder
2025-06-05 03:39:49,136 - INFO - orders - [get_order_model] called with: 'demo' (type: <class 'str'>)
2025-06-05 03:39:49,136 - INFO - orders - [get_order_model] Branch: isinstance(user_or_type, str)
2025-06-05 03:39:49,136 - INFO - orders - [get_order_model] Branch: user_type string is 'demo' -> DemoUserOrder
2025-06-06 00:55:59,112 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 00:56:10,587 - INFO - orders - Close order request received - Order ID: 3942036292, User ID: 1, User Type: demo
2025-06-06 00:56:10,588 - INFO - orders - Close request details - Price: 0.89, Type: SELL, Symbol: AUDCAD
2025-06-06 00:56:10,588 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000014CCAD357F0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-06 00:56:10,588 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x0000014CCAD357F0> (type: <class 'app.database.models.DemoUser'>)
2025-06-06 00:56:10,588 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-06 00:56:10,588 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-06 00:56:10,588 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-06 00:56:10,589 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-06 00:56:10,590 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-06 00:56:10,590 - INFO - orders - Request to close order 3942036292 for user 1 (DemoUser) with price 0.89. Frontend provided type: SELL, company: AUDCAD, status: CLOSE, frontend_status: CLOSE.
2025-06-06 00:56:10,622 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-06 00:56:10,656 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-06 00:56:10,657 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 00:56:10,657 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 00:56:10,658 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 93): Type=SELL, Qty=2.00000000, StoredMargin=1314.77957965
2025-06-06 00:56:10,658 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=657.389789825
2025-06-06 00:56:10,658 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-06 00:56:10,658 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425'), Decimal('657.389789825')], HighestMarginPerLot=657.389789825
2025-06-06 00:56:10,658 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1314.78, ContributingOrders=2 (based on individual stored margins)
2025-06-06 00:56:10,659 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-06 00:56:10,660 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 00:56:10,660 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 00:56:10,662 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-06 00:56:10,662 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425')], HighestMarginPerLot=656.68966425
2025-06-06 00:56:10,662 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=656.69, ContributingOrders=1 (based on individual stored margins)
2025-06-06 00:56:10,691 - DEBUG - orders - Inverse conversion for PnL on Close: -338.000000000000000000000000 CAD / 1.3665600000 = -247.3363774733637747336377473 USD
2025-06-06 00:58:50,578 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 01:00:39,545 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 01:04:07,503 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 01:04:43,082 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-06 01:04:43,082 - app.api.v1.endpoints.orders - ERROR - [get_rejected_orders] Could not determine order model for user_type: demo
2025-06-06 01:05:54,163 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 01:06:07,418 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-06 01:06:50,378 - app.api.v1.endpoints.orders - INFO - [get_pending_orders] user_type: demo
2025-06-06 01:06:57,849 - app.api.v1.endpoints.orders - INFO - [get_closed_orders] user_type: demo
2025-06-06 01:20:00,369 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 01:21:33,113 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 2
2025-06-06 01:21:33,127 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000002809C9DC270>, <app.database.models.Group object at 0x000002809C9DC160>, <app.database.models.Group object at 0x000002809C9DC9E0>, <app.database.models.Group object at 0x000002809C9DCAF0>, <app.database.models.Group object at 0x000002809C9DCC00>, <app.database.models.Group object at 0x000002809C9DCD10>, <app.database.models.Group object at 0x000002809C9DCE20>, <app.database.models.Group object at 0x000002809C9DCF30>, <app.database.models.Group object at 0x000002809C9DD040>, <app.database.models.Group object at 0x000002809C9DD150>, <app.database.models.Group object at 0x000002809C9DD260>, <app.database.models.Group object at 0x000002809C9DD370>, <app.database.models.Group object at 0x000002809C9DD480>, <app.database.models.Group object at 0x000002809C9DD590>, <app.database.models.Group object at 0x000002809C9DD6A0>, <app.database.models.Group object at 0x000002809C9DD7B0>, <app.database.models.Group object at 0x000002809C9DD8C0>, <app.database.models.Group object at 0x000002809C9DD9D0>, <app.database.models.Group object at 0x000002809C9DDAE0>, <app.database.models.Group object at 0x000002809C9DDBF0>, <app.database.models.Group object at 0x000002809C9DDD00>, <app.database.models.Group object at 0x000002809C9DDE10>, <app.database.models.Group object at 0x000002809C9DDF20>, <app.database.models.Group object at 0x000002809C9DE030>, <app.database.models.Group object at 0x000002809C9DE140>, <app.database.models.Group object at 0x000002809C9DE250>, <app.database.models.Group object at 0x000002809C9DE360>, <app.database.models.Group object at 0x000002809C9DE470>, <app.database.models.Group object at 0x000002809C9DE580>, <app.database.models.Group object at 0x000002809C9DE690>, <app.database.models.Group object at 0x000002809C9DE7A0>, <app.database.models.Group object at 0x000002809C9DE8B0>, <app.database.models.Group object at 0x000002809C9DE9C0>, <app.database.models.Group object at 0x000002809C9DEAD0>, <app.database.models.Group object at 0x000002809C9DEBE0>, <app.database.models.Group object at 0x000002809C9DECF0>, <app.database.models.Group object at 0x000002809C9DEE00>, <app.database.models.Group object at 0x000002809C9DEF10>, <app.database.models.Group object at 0x000002809C9DF020>, <app.database.models.Group object at 0x000002809C9DF130>, <app.database.models.Group object at 0x000002809C9DF240>, <app.database.models.Group object at 0x000002809C9DF350>, <app.database.models.Group object at 0x000002809C9DF460>, <app.database.models.Group object at 0x000002809C9DF570>, <app.database.models.Group object at 0x000002809C9DF680>, <app.database.models.Group object at 0x000002809C9DF790>, <app.database.models.Group object at 0x000002809C9DF8A0>, <app.database.models.Group object at 0x000002809C9DF9B0>, <app.database.models.Group object at 0x000002809C9DFAC0>, <app.database.models.Group object at 0x000002809C9DFBD0>, <app.database.models.Group object at 0x000002809C9DFCE0>, <app.database.models.Group object at 0x000002809C9DFDF0>, <app.database.models.Group object at 0x000002809C9DFF00>, <app.database.models.Group object at 0x000002809CAC8050>, <app.database.models.Group object at 0x000002809CAC8160>, <app.database.models.Group object at 0x000002809CAC8270>, <app.database.models.Group object at 0x000002809CAC8380>, <app.database.models.Group object at 0x000002809CAC8490>, <app.database.models.Group object at 0x000002809CAC85A0>, <app.database.models.Group object at 0x000002809CAC86B0>, <app.database.models.Group object at 0x000002809CAC87C0>, <app.database.models.Group object at 0x000002809CAC88D0>, <app.database.models.Group object at 0x000002809CAC89E0>, <app.database.models.Group object at 0x000002809CAC8AF0>, <app.database.models.Group object at 0x000002809CAC8C00>, <app.database.models.Group object at 0x000002809CAC8D10>, <app.database.models.Group object at 0x000002809CAC8E20>, <app.database.models.Group object at 0x000002809CAC8F30>, <app.database.models.Group object at 0x000002809CAC9040>, <app.database.models.Group object at 0x000002809CAC9150>, <app.database.models.Group object at 0x000002809CAC9260>, <app.database.models.Group object at 0x000002809CAC9370>, <app.database.models.Group object at 0x000002809CAC9480>, <app.database.models.Group object at 0x000002809CAC9590>, <app.database.models.Group object at 0x000002809CAC96A0>, <app.database.models.Group object at 0x000002809CAC97B0>, <app.database.models.Group object at 0x000002809CAC98C0>, <app.database.models.Group object at 0x000002809CAC99D0>, <app.database.models.Group object at 0x000002809CAC9AE0>]
2025-06-06 01:21:33,128 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-06 01:21:33,129 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-06 01:21:33,129 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-06 01:21:33,129 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-06 01:21:33,129 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-06 01:21:33,748 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-06 01:21:33,748 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 01:21:33,749 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 01:21:33,749 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-06 01:21:33,749 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425')], HighestMarginPerLot=656.68966425
2025-06-06 01:21:33,749 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=656.69, ContributingOrders=1 (based on individual stored margins)
2025-06-06 01:21:33,749 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-06 01:21:33,749 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 01:21:33,749 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 01:21:33,749 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=SELL, Qty=2, StoredMargin=1313.493311489318130288823714
2025-06-06 01:21:33,750 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=656.746655744659065144411857
2025-06-06 01:21:33,750 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=2, NetQty=2
2025-06-06 01:21:33,750 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425'), Decimal('656.746655744659065144411857')], HighestMarginPerLot=656.746655744659065144411857
2025-06-06 01:21:33,750 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1313.49, ContributingOrders=2 (based on individual stored margins)
2025-06-06 01:21:33,750 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=656.69, MarginAfter=1313.49, AdditionalMargin=656.80
2025-06-06 01:21:33,766 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=4608.56000000, CalculatedNewMargin=5265.36
2025-06-06 01:21:33,785 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '2974676362', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8879500000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1313.493311489318130288823714'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-06 01:21:33,817 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 5265.36
2025-06-06 01:21:33,884 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-06 01:25:14,593 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 01:25:29,437 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 01:25:44,098 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 01:27:32,947 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 01:29:00,618 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 01:35:41,034 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 01:36:46,527 - INFO - orders - Close order request received - Order ID: 2974676362, User ID: 1, User Type: demo
2025-06-06 01:36:46,528 - INFO - orders - Close request details - Price: 0.89, Type: SELL, Symbol: AUDCAD
2025-06-06 01:36:46,528 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000254B50A2350>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-06 01:36:46,528 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-06 01:36:46,528 - INFO - orders - Request to close order 2974676362 for user 1 (DemoUser) with price 0.89. Frontend provided type: SELL, company: AUDCAD, status: CLOSE, frontend_status: CLOSE.
2025-06-06 01:36:46,569 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-06 01:36:46,633 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-06 01:36:46,633 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 01:36:46,633 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 01:36:46,633 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 94): Type=SELL, Qty=2.00000000, StoredMargin=1313.49331149
2025-06-06 01:36:46,633 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=656.746655745
2025-06-06 01:36:46,634 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-06 01:36:46,634 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425'), Decimal('656.746655745')], HighestMarginPerLot=656.746655745
2025-06-06 01:36:46,634 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1313.49, ContributingOrders=2 (based on individual stored margins)
2025-06-06 01:36:46,634 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-06 01:36:46,634 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 01:36:46,634 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 01:36:46,634 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-06 01:36:46,634 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425')], HighestMarginPerLot=656.68966425
2025-06-06 01:36:46,634 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=656.69, ContributingOrders=1 (based on individual stored margins)
2025-06-06 01:36:46,665 - DEBUG - orders - Inverse conversion for PnL on Close: -410.000000000000000000000000 CAD / 1.3675500000 = -299.8062228072099740411685130 USD
2025-06-06 01:45:01,717 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 2
2025-06-06 01:45:01,726 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x00000254B51696A0>, <app.database.models.Group object at 0x00000254B51697B0>, <app.database.models.Group object at 0x00000254B51698C0>, <app.database.models.Group object at 0x00000254B51699D0>, <app.database.models.Group object at 0x00000254B5169AE0>, <app.database.models.Group object at 0x00000254B5169BF0>, <app.database.models.Group object at 0x00000254B5169D00>, <app.database.models.Group object at 0x00000254B5169E10>, <app.database.models.Group object at 0x00000254B5169F20>, <app.database.models.Group object at 0x00000254B516A030>, <app.database.models.Group object at 0x00000254B516A140>, <app.database.models.Group object at 0x00000254B516A250>, <app.database.models.Group object at 0x00000254B516A360>, <app.database.models.Group object at 0x00000254B516A470>, <app.database.models.Group object at 0x00000254B516A580>, <app.database.models.Group object at 0x00000254B516A690>, <app.database.models.Group object at 0x00000254B516A7A0>, <app.database.models.Group object at 0x00000254B516A8B0>, <app.database.models.Group object at 0x00000254B516A9C0>, <app.database.models.Group object at 0x00000254B516AAD0>, <app.database.models.Group object at 0x00000254B516ABE0>, <app.database.models.Group object at 0x00000254B516ACF0>, <app.database.models.Group object at 0x00000254B516AE00>, <app.database.models.Group object at 0x00000254B516AF10>, <app.database.models.Group object at 0x00000254B516B020>, <app.database.models.Group object at 0x00000254B516B130>, <app.database.models.Group object at 0x00000254B516B240>, <app.database.models.Group object at 0x00000254B516B350>, <app.database.models.Group object at 0x00000254B516B460>, <app.database.models.Group object at 0x00000254B516B570>, <app.database.models.Group object at 0x00000254B516B680>, <app.database.models.Group object at 0x00000254B516B790>, <app.database.models.Group object at 0x00000254B516B8A0>, <app.database.models.Group object at 0x00000254B516B9B0>, <app.database.models.Group object at 0x00000254B516BAC0>, <app.database.models.Group object at 0x00000254B516BBD0>, <app.database.models.Group object at 0x00000254B516BDF0>, <app.database.models.Group object at 0x00000254B51687C0>, <app.database.models.Group object at 0x00000254B4E738A0>, <app.database.models.Group object at 0x00000254B4E73790>, <app.database.models.Group object at 0x00000254B4E739B0>, <app.database.models.Group object at 0x00000254B4E73AC0>, <app.database.models.Group object at 0x00000254B4E73BD0>, <app.database.models.Group object at 0x00000254B4E73CE0>, <app.database.models.Group object at 0x00000254B4E73DF0>, <app.database.models.Group object at 0x00000254B4E73F00>, <app.database.models.Group object at 0x00000254B4E71F20>, <app.database.models.Group object at 0x00000254B4E73350>, <app.database.models.Group object at 0x00000254B4E72030>, <app.database.models.Group object at 0x00000254B4E72250>, <app.database.models.Group object at 0x00000254B4E72140>, <app.database.models.Group object at 0x00000254B4E73240>, <app.database.models.Group object at 0x00000254B4E72470>, <app.database.models.Group object at 0x00000254B523CE20>, <app.database.models.Group object at 0x00000254B523CD10>, <app.database.models.Group object at 0x00000254B523D370>, <app.database.models.Group object at 0x00000254B523C050>, <app.database.models.Group object at 0x00000254B523C160>, <app.database.models.Group object at 0x00000254B523C270>, <app.database.models.Group object at 0x00000254B523C380>, <app.database.models.Group object at 0x00000254B523C490>, <app.database.models.Group object at 0x00000254B523C5A0>, <app.database.models.Group object at 0x00000254B523C6B0>, <app.database.models.Group object at 0x00000254B523C7C0>, <app.database.models.Group object at 0x00000254B523C8D0>, <app.database.models.Group object at 0x00000254B523C9E0>, <app.database.models.Group object at 0x00000254B523CAF0>, <app.database.models.Group object at 0x00000254B523CC00>, <app.database.models.Group object at 0x00000254B523CF30>, <app.database.models.Group object at 0x00000254B523D040>, <app.database.models.Group object at 0x00000254B523D260>, <app.database.models.Group object at 0x00000254B523D6A0>, <app.database.models.Group object at 0x00000254B523DAE0>, <app.database.models.Group object at 0x00000254B523DBF0>, <app.database.models.Group object at 0x00000254B523DD00>, <app.database.models.Group object at 0x00000254B523DE10>, <app.database.models.Group object at 0x00000254B523DF20>, <app.database.models.Group object at 0x00000254B523E030>, <app.database.models.Group object at 0x00000254B523E140>]
2025-06-06 01:45:01,726 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-06 01:45:01,726 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-06 01:45:01,726 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-06 01:45:01,726 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-06 01:45:01,726 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-06 01:45:02,592 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-06 01:45:02,592 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 01:45:02,592 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 01:45:02,592 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-06 01:45:02,592 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425')], HighestMarginPerLot=656.68966425
2025-06-06 01:45:02,592 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=656.69, ContributingOrders=1 (based on individual stored margins)
2025-06-06 01:45:02,592 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-06 01:45:02,592 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 01:45:02,592 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 01:45:02,592 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=SELL, Qty=2, StoredMargin=1312.398096087620913790204064
2025-06-06 01:45:02,592 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=656.199048043810456895102032
2025-06-06 01:45:02,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=2, NetQty=2
2025-06-06 01:45:02,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425'), Decimal('656.199048043810456895102032')], HighestMarginPerLot=656.68966425
2025-06-06 01:45:02,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1313.38, ContributingOrders=2 (based on individual stored margins)
2025-06-06 01:45:02,622 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=656.69, MarginAfter=1313.38, AdditionalMargin=656.69
2025-06-06 01:45:02,628 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=4608.56000000, CalculatedNewMargin=5265.25
2025-06-06 01:45:02,637 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '8166038961', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8874900000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1312.398096087620913790204064'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-06 01:45:02,661 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 5265.25
2025-06-06 01:45:02,736 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-06 01:49:42,028 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 01:49:46,674 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 01:49:50,971 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 2
2025-06-06 01:49:51,021 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001DAB8E89550>, <app.database.models.Group object at 0x000001DAB8E9D090>, <app.database.models.Group object at 0x000001DAB8E9D1D0>, <app.database.models.Group object at 0x000001DAB8EC1810>, <app.database.models.Group object at 0x000001DAB8EC1940>, <app.database.models.Group object at 0x000001DAB8FA1250>, <app.database.models.Group object at 0x000001DAB8CCF130>, <app.database.models.Group object at 0x000001DAB8CCF240>, <app.database.models.Group object at 0x000001DAB8CCF350>, <app.database.models.Group object at 0x000001DAB8CCF460>, <app.database.models.Group object at 0x000001DAB8CCF570>, <app.database.models.Group object at 0x000001DAB8CCF680>, <app.database.models.Group object at 0x000001DAB8CCF790>, <app.database.models.Group object at 0x000001DAB8CCF8A0>, <app.database.models.Group object at 0x000001DAB8CCF9B0>, <app.database.models.Group object at 0x000001DAB8CCFAC0>, <app.database.models.Group object at 0x000001DAB8CCFBD0>, <app.database.models.Group object at 0x000001DAB8CCFCE0>, <app.database.models.Group object at 0x000001DAB8CCFDF0>, <app.database.models.Group object at 0x000001DAB8CCFF00>, <app.database.models.Group object at 0x000001DAB8FEC050>, <app.database.models.Group object at 0x000001DAB8FEC160>, <app.database.models.Group object at 0x000001DAB8FEC270>, <app.database.models.Group object at 0x000001DAB8FEC380>, <app.database.models.Group object at 0x000001DAB8FEC490>, <app.database.models.Group object at 0x000001DAB8FEC5A0>, <app.database.models.Group object at 0x000001DAB8FEC6B0>, <app.database.models.Group object at 0x000001DAB8FEC7C0>, <app.database.models.Group object at 0x000001DAB8FEC8D0>, <app.database.models.Group object at 0x000001DAB8FEC9E0>, <app.database.models.Group object at 0x000001DAB8FECAF0>, <app.database.models.Group object at 0x000001DAB8FECC00>, <app.database.models.Group object at 0x000001DAB8FECD10>, <app.database.models.Group object at 0x000001DAB8FECE20>, <app.database.models.Group object at 0x000001DAB8FECF30>, <app.database.models.Group object at 0x000001DAB8FED040>, <app.database.models.Group object at 0x000001DAB8FED150>, <app.database.models.Group object at 0x000001DAB8FED260>, <app.database.models.Group object at 0x000001DAB8FED370>, <app.database.models.Group object at 0x000001DAB8FED480>, <app.database.models.Group object at 0x000001DAB8FED590>, <app.database.models.Group object at 0x000001DAB8FED6A0>, <app.database.models.Group object at 0x000001DAB8FED7B0>, <app.database.models.Group object at 0x000001DAB8FED8C0>, <app.database.models.Group object at 0x000001DAB8FED9D0>, <app.database.models.Group object at 0x000001DAB8FEDAE0>, <app.database.models.Group object at 0x000001DAB8FEDBF0>, <app.database.models.Group object at 0x000001DAB8FEDD00>, <app.database.models.Group object at 0x000001DAB8FEDE10>, <app.database.models.Group object at 0x000001DAB8FEDF20>, <app.database.models.Group object at 0x000001DAB8FEE030>, <app.database.models.Group object at 0x000001DAB8FEE140>, <app.database.models.Group object at 0x000001DAB8FEE250>, <app.database.models.Group object at 0x000001DAB8FEE360>, <app.database.models.Group object at 0x000001DAB8FEE470>, <app.database.models.Group object at 0x000001DAB8FEE580>, <app.database.models.Group object at 0x000001DAB8FEE690>, <app.database.models.Group object at 0x000001DAB8FEE7A0>, <app.database.models.Group object at 0x000001DAB8FEE8B0>, <app.database.models.Group object at 0x000001DAB8FEE9C0>, <app.database.models.Group object at 0x000001DAB8FEEAD0>, <app.database.models.Group object at 0x000001DAB8FEEBE0>, <app.database.models.Group object at 0x000001DAB8FEECF0>, <app.database.models.Group object at 0x000001DAB8FEEE00>, <app.database.models.Group object at 0x000001DAB8FEEF10>, <app.database.models.Group object at 0x000001DAB8FEF020>, <app.database.models.Group object at 0x000001DAB8FEF130>, <app.database.models.Group object at 0x000001DAB8FEF240>, <app.database.models.Group object at 0x000001DAB8FEF350>, <app.database.models.Group object at 0x000001DAB8FEF460>, <app.database.models.Group object at 0x000001DAB8FEF570>, <app.database.models.Group object at 0x000001DAB8FEF680>, <app.database.models.Group object at 0x000001DAB8FEF790>, <app.database.models.Group object at 0x000001DAB8FEF8A0>, <app.database.models.Group object at 0x000001DAB8FEF9B0>, <app.database.models.Group object at 0x000001DAB8FEFAC0>, <app.database.models.Group object at 0x000001DAB8FEFBD0>, <app.database.models.Group object at 0x000001DAB8FEFCE0>, <app.database.models.Group object at 0x000001DAB8FEFDF0>]
2025-06-06 01:49:51,022 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-06 01:49:51,022 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-06 01:49:51,022 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-06 01:49:51,022 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-06 01:49:51,022 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-06 01:49:51,398 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-06 01:49:51,399 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 01:49:51,399 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 01:49:51,399 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 95): Type=SELL, Qty=2.00000000, StoredMargin=1312.39809609
2025-06-06 01:49:51,399 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=656.199048045
2025-06-06 01:49:51,400 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-06 01:49:51,400 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425'), Decimal('656.199048045')], HighestMarginPerLot=656.68966425
2025-06-06 01:49:51,400 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1313.38, ContributingOrders=2 (based on individual stored margins)
2025-06-06 01:49:51,400 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-06 01:49:51,400 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 01:49:51,400 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 01:49:51,400 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 95): Type=SELL, Qty=2.00000000, StoredMargin=1312.39809609
2025-06-06 01:49:51,401 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=656.199048045
2025-06-06 01:49:51,401 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: NEW_UNSAVED): Type=SELL, Qty=2, StoredMargin=1312.118952585639721040396509
2025-06-06 01:49:51,401 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.0594762928198605201982545
2025-06-06 01:49:51,401 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=4.00000000, NetQty=4.00000000
2025-06-06 01:49:51,401 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425'), Decimal('656.199048045'), Decimal('656.0594762928198605201982545')], HighestMarginPerLot=656.68966425
2025-06-06 01:49:51,401 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=2626.76, ContributingOrders=3 (based on individual stored margins)
2025-06-06 01:49:51,401 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=1313.38, MarginAfter=2626.76, AdditionalMargin=1313.38
2025-06-06 01:49:51,411 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=5265.25000000, CalculatedNewMargin=6578.63
2025-06-06 01:49:51,432 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '5378433022', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8874500000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1312.118952585639721040396509'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-06 01:49:51,468 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 6578.63
2025-06-06 01:49:51,620 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-06 01:53:33,541 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 01:55:57,043 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 01:56:03,866 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 01:56:19,347 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 01:56:38,885 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 2
2025-06-06 01:56:38,913 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001A4FDDDBE00>, <app.database.models.Group object at 0x000001A4FDFC8CD0>, <app.database.models.Group object at 0x000001A4FDFC8910>, <app.database.models.Group object at 0x000001A4FCC2FBB0>, <app.database.models.Group object at 0x000001A4FCC2FA80>, <app.database.models.Group object at 0x000001A4FE0D1010>, <app.database.models.Group object at 0x000001A4FDDDF9B0>, <app.database.models.Group object at 0x000001A4FDDDFAC0>, <app.database.models.Group object at 0x000001A4FDDDFBD0>, <app.database.models.Group object at 0x000001A4FDDDFCE0>, <app.database.models.Group object at 0x000001A4FDDDFDF0>, <app.database.models.Group object at 0x000001A4FDDDFF00>, <app.database.models.Group object at 0x000001A4FE13C050>, <app.database.models.Group object at 0x000001A4FE13C160>, <app.database.models.Group object at 0x000001A4FE13C270>, <app.database.models.Group object at 0x000001A4FE13C380>, <app.database.models.Group object at 0x000001A4FE13C490>, <app.database.models.Group object at 0x000001A4FE13C5A0>, <app.database.models.Group object at 0x000001A4FE13C6B0>, <app.database.models.Group object at 0x000001A4FE13C7C0>, <app.database.models.Group object at 0x000001A4FE13C8D0>, <app.database.models.Group object at 0x000001A4FE13C9E0>, <app.database.models.Group object at 0x000001A4FE13CAF0>, <app.database.models.Group object at 0x000001A4FE13CC00>, <app.database.models.Group object at 0x000001A4FE13CD10>, <app.database.models.Group object at 0x000001A4FE13CE20>, <app.database.models.Group object at 0x000001A4FE13CF30>, <app.database.models.Group object at 0x000001A4FE13D040>, <app.database.models.Group object at 0x000001A4FE13D150>, <app.database.models.Group object at 0x000001A4FE13D260>, <app.database.models.Group object at 0x000001A4FE13D370>, <app.database.models.Group object at 0x000001A4FE13D480>, <app.database.models.Group object at 0x000001A4FE13D590>, <app.database.models.Group object at 0x000001A4FE13D6A0>, <app.database.models.Group object at 0x000001A4FE13D7B0>, <app.database.models.Group object at 0x000001A4FE13D8C0>, <app.database.models.Group object at 0x000001A4FE13D9D0>, <app.database.models.Group object at 0x000001A4FE13DAE0>, <app.database.models.Group object at 0x000001A4FE13DBF0>, <app.database.models.Group object at 0x000001A4FE13DD00>, <app.database.models.Group object at 0x000001A4FE13DE10>, <app.database.models.Group object at 0x000001A4FE13DF20>, <app.database.models.Group object at 0x000001A4FE13E030>, <app.database.models.Group object at 0x000001A4FE13E140>, <app.database.models.Group object at 0x000001A4FE13E250>, <app.database.models.Group object at 0x000001A4FE13E360>, <app.database.models.Group object at 0x000001A4FE13E470>, <app.database.models.Group object at 0x000001A4FE13E580>, <app.database.models.Group object at 0x000001A4FE13E690>, <app.database.models.Group object at 0x000001A4FE13E7A0>, <app.database.models.Group object at 0x000001A4FE13E8B0>, <app.database.models.Group object at 0x000001A4FE13E9C0>, <app.database.models.Group object at 0x000001A4FE13EAD0>, <app.database.models.Group object at 0x000001A4FE13EBE0>, <app.database.models.Group object at 0x000001A4FE13ECF0>, <app.database.models.Group object at 0x000001A4FE13EE00>, <app.database.models.Group object at 0x000001A4FE13EF10>, <app.database.models.Group object at 0x000001A4FE13F020>, <app.database.models.Group object at 0x000001A4FE13F130>, <app.database.models.Group object at 0x000001A4FE13F240>, <app.database.models.Group object at 0x000001A4FE13F350>, <app.database.models.Group object at 0x000001A4FE13F460>, <app.database.models.Group object at 0x000001A4FE13F570>, <app.database.models.Group object at 0x000001A4FE13F680>, <app.database.models.Group object at 0x000001A4FE13F790>, <app.database.models.Group object at 0x000001A4FE13F8A0>, <app.database.models.Group object at 0x000001A4FE13F9B0>, <app.database.models.Group object at 0x000001A4FE13FAC0>, <app.database.models.Group object at 0x000001A4FE13FBD0>, <app.database.models.Group object at 0x000001A4FE13FCE0>, <app.database.models.Group object at 0x000001A4FE13FDF0>, <app.database.models.Group object at 0x000001A4FE13FF00>, <app.database.models.Group object at 0x000001A4FE14C050>, <app.database.models.Group object at 0x000001A4FE14C160>, <app.database.models.Group object at 0x000001A4FE14C270>, <app.database.models.Group object at 0x000001A4FE14C380>, <app.database.models.Group object at 0x000001A4FE14C490>, <app.database.models.Group object at 0x000001A4FE14C5A0>, <app.database.models.Group object at 0x000001A4FE14C6B0>]
2025-06-06 01:56:38,913 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-06 01:56:38,914 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-06 01:56:38,914 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-06 01:56:38,914 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-06 01:56:38,914 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-06 01:56:39,262 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-06 01:56:39,262 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 01:56:39,263 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 01:56:39,263 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 95): Type=SELL, Qty=2.00000000, StoredMargin=1312.39809609
2025-06-06 01:56:39,263 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=656.199048045
2025-06-06 01:56:39,263 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 96): Type=SELL, Qty=2.00000000, StoredMargin=1312.11895259
2025-06-06 01:56:39,263 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.059476295
2025-06-06 01:56:39,263 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=4.00000000, NetQty=4.00000000
2025-06-06 01:56:39,264 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425'), Decimal('656.199048045'), Decimal('656.059476295')], HighestMarginPerLot=656.68966425
2025-06-06 01:56:39,264 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=2626.76, ContributingOrders=3 (based on individual stored margins)
2025-06-06 01:56:39,264 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 4
2025-06-06 01:56:39,264 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 01:56:39,264 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 01:56:39,264 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 95): Type=SELL, Qty=2.00000000, StoredMargin=1312.39809609
2025-06-06 01:56:39,264 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=656.199048045
2025-06-06 01:56:39,265 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 96): Type=SELL, Qty=2.00000000, StoredMargin=1312.11895259
2025-06-06 01:56:39,265 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.059476295
2025-06-06 01:56:39,265 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: NEW_UNSAVED): Type=SELL, Qty=2, StoredMargin=1312.519188877030365941022530
2025-06-06 01:56:39,265 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=656.259594438515182970511265
2025-06-06 01:56:39,265 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=6.00000000, NetQty=6.00000000
2025-06-06 01:56:39,265 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425'), Decimal('656.199048045'), Decimal('656.059476295'), Decimal('656.259594438515182970511265')], HighestMarginPerLot=656.68966425
2025-06-06 01:56:39,265 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=3940.14, ContributingOrders=4 (based on individual stored margins)
2025-06-06 01:56:39,265 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=2626.76, MarginAfter=3940.14, AdditionalMargin=1313.38
2025-06-06 01:56:39,279 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=6578.63000000, CalculatedNewMargin=7892.01
2025-06-06 01:56:39,297 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '5850907365', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8877400000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1312.519188877030365941022530'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-06 01:56:39,335 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 7892.01
2025-06-06 01:56:39,412 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-06 01:58:26,578 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 01:58:46,171 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 2
2025-06-06 01:58:46,189 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001D97731E470>, <app.database.models.Group object at 0x000001D97731FF00>, <app.database.models.Group object at 0x000001D977658270>, <app.database.models.Group object at 0x000001D977658050>, <app.database.models.Group object at 0x000001D977658160>, <app.database.models.Group object at 0x000001D977658380>, <app.database.models.Group object at 0x000001D9776585A0>, <app.database.models.Group object at 0x000001D9776587C0>, <app.database.models.Group object at 0x000001D9776588D0>, <app.database.models.Group object at 0x000001D9776589E0>, <app.database.models.Group object at 0x000001D977658AF0>, <app.database.models.Group object at 0x000001D977658C00>, <app.database.models.Group object at 0x000001D977658D10>, <app.database.models.Group object at 0x000001D977658E20>, <app.database.models.Group object at 0x000001D977658F30>, <app.database.models.Group object at 0x000001D977659040>, <app.database.models.Group object at 0x000001D977659150>, <app.database.models.Group object at 0x000001D977659260>, <app.database.models.Group object at 0x000001D977659370>, <app.database.models.Group object at 0x000001D977659480>, <app.database.models.Group object at 0x000001D977659590>, <app.database.models.Group object at 0x000001D9776596A0>, <app.database.models.Group object at 0x000001D9776597B0>, <app.database.models.Group object at 0x000001D9776598C0>, <app.database.models.Group object at 0x000001D9776599D0>, <app.database.models.Group object at 0x000001D977659AE0>, <app.database.models.Group object at 0x000001D977659BF0>, <app.database.models.Group object at 0x000001D977659D00>, <app.database.models.Group object at 0x000001D977659E10>, <app.database.models.Group object at 0x000001D977659F20>, <app.database.models.Group object at 0x000001D97765A030>, <app.database.models.Group object at 0x000001D97765A140>, <app.database.models.Group object at 0x000001D97765A250>, <app.database.models.Group object at 0x000001D97765A360>, <app.database.models.Group object at 0x000001D97765A470>, <app.database.models.Group object at 0x000001D97765A580>, <app.database.models.Group object at 0x000001D97765A690>, <app.database.models.Group object at 0x000001D97765A7A0>, <app.database.models.Group object at 0x000001D97765A8B0>, <app.database.models.Group object at 0x000001D97765A9C0>, <app.database.models.Group object at 0x000001D97765AAD0>, <app.database.models.Group object at 0x000001D97765ABE0>, <app.database.models.Group object at 0x000001D97765ACF0>, <app.database.models.Group object at 0x000001D97765AE00>, <app.database.models.Group object at 0x000001D97765AF10>, <app.database.models.Group object at 0x000001D97765B020>, <app.database.models.Group object at 0x000001D97765B130>, <app.database.models.Group object at 0x000001D97765B240>, <app.database.models.Group object at 0x000001D97765B350>, <app.database.models.Group object at 0x000001D97765B460>, <app.database.models.Group object at 0x000001D97765B570>, <app.database.models.Group object at 0x000001D97765B680>, <app.database.models.Group object at 0x000001D97765B790>, <app.database.models.Group object at 0x000001D97765B8A0>, <app.database.models.Group object at 0x000001D97765B9B0>, <app.database.models.Group object at 0x000001D97765BAC0>, <app.database.models.Group object at 0x000001D97765BBD0>, <app.database.models.Group object at 0x000001D97765BCE0>, <app.database.models.Group object at 0x000001D97765BDF0>, <app.database.models.Group object at 0x000001D97765BF00>, <app.database.models.Group object at 0x000001D9776F8050>, <app.database.models.Group object at 0x000001D9776F8160>, <app.database.models.Group object at 0x000001D9776F8270>, <app.database.models.Group object at 0x000001D9776F8380>, <app.database.models.Group object at 0x000001D9776F8490>, <app.database.models.Group object at 0x000001D9776F85A0>, <app.database.models.Group object at 0x000001D9776F86B0>, <app.database.models.Group object at 0x000001D9776F87C0>, <app.database.models.Group object at 0x000001D9776F88D0>, <app.database.models.Group object at 0x000001D9776F89E0>, <app.database.models.Group object at 0x000001D9776F8AF0>, <app.database.models.Group object at 0x000001D9776F8C00>, <app.database.models.Group object at 0x000001D9776F8D10>, <app.database.models.Group object at 0x000001D9776F8E20>, <app.database.models.Group object at 0x000001D9776F8F30>, <app.database.models.Group object at 0x000001D9776F9040>, <app.database.models.Group object at 0x000001D9776F9150>, <app.database.models.Group object at 0x000001D9776F9260>, <app.database.models.Group object at 0x000001D9776F9370>]
2025-06-06 01:58:46,189 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-06 01:58:46,190 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-06 01:58:46,190 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-06 01:58:46,190 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-06 01:58:46,190 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-06 01:58:46,546 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-06 01:58:46,546 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 01:58:46,546 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 01:58:46,546 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-06 01:58:46,546 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425')], HighestMarginPerLot=656.68966425
2025-06-06 01:58:46,546 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=656.69, ContributingOrders=1 (based on individual stored margins)
2025-06-06 01:58:46,546 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-06 01:58:46,547 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 01:58:46,547 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 01:58:46,547 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=SELL, Qty=2, StoredMargin=1312.500456861326140508614577
2025-06-06 01:58:46,547 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=656.2502284306630702543072885
2025-06-06 01:58:46,547 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=2, NetQty=2
2025-06-06 01:58:46,547 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425'), Decimal('656.2502284306630702543072885')], HighestMarginPerLot=656.68966425
2025-06-06 01:58:46,547 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1313.38, ContributingOrders=2 (based on individual stored margins)
2025-06-06 01:58:46,547 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=656.69, MarginAfter=1313.38, AdditionalMargin=656.69
2025-06-06 01:58:46,553 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=7892.01000000, CalculatedNewMargin=8548.70
2025-06-06 01:58:46,571 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '4839409552', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8877700000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1312.500456861326140508614577'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-06 01:58:46,622 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 8548.70
2025-06-06 01:58:46,763 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-06 02:06:36,988 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 02:07:23,178 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 2
2025-06-06 02:07:23,191 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000023938B4E360>, <app.database.models.Group object at 0x0000023938B4FF00>, <app.database.models.Group object at 0x0000023938E8C160>, <app.database.models.Group object at 0x0000023938E8C050>, <app.database.models.Group object at 0x0000023938E8C270>, <app.database.models.Group object at 0x0000023938E8C490>, <app.database.models.Group object at 0x0000023938E8C6B0>, <app.database.models.Group object at 0x0000023938E8C7C0>, <app.database.models.Group object at 0x0000023938E8C8D0>, <app.database.models.Group object at 0x0000023938E8C9E0>, <app.database.models.Group object at 0x0000023938E8CAF0>, <app.database.models.Group object at 0x0000023938E8CC00>, <app.database.models.Group object at 0x0000023938E8CD10>, <app.database.models.Group object at 0x0000023938E8CE20>, <app.database.models.Group object at 0x0000023938E8CF30>, <app.database.models.Group object at 0x0000023938E8D040>, <app.database.models.Group object at 0x0000023938E8D150>, <app.database.models.Group object at 0x0000023938E8D260>, <app.database.models.Group object at 0x0000023938E8D370>, <app.database.models.Group object at 0x0000023938E8D480>, <app.database.models.Group object at 0x0000023938E8D590>, <app.database.models.Group object at 0x0000023938E8D6A0>, <app.database.models.Group object at 0x0000023938E8D7B0>, <app.database.models.Group object at 0x0000023938E8D8C0>, <app.database.models.Group object at 0x0000023938E8D9D0>, <app.database.models.Group object at 0x0000023938E8DAE0>, <app.database.models.Group object at 0x0000023938E8DBF0>, <app.database.models.Group object at 0x0000023938E8DD00>, <app.database.models.Group object at 0x0000023938E8DE10>, <app.database.models.Group object at 0x0000023938E8DF20>, <app.database.models.Group object at 0x0000023938E8E030>, <app.database.models.Group object at 0x0000023938E8E140>, <app.database.models.Group object at 0x0000023938E8E250>, <app.database.models.Group object at 0x0000023938E8E360>, <app.database.models.Group object at 0x0000023938E8E470>, <app.database.models.Group object at 0x0000023938E8E580>, <app.database.models.Group object at 0x0000023938E8E690>, <app.database.models.Group object at 0x0000023938E8E7A0>, <app.database.models.Group object at 0x0000023938E8E8B0>, <app.database.models.Group object at 0x0000023938E8E9C0>, <app.database.models.Group object at 0x0000023938E8EAD0>, <app.database.models.Group object at 0x0000023938E8EBE0>, <app.database.models.Group object at 0x0000023938E8ECF0>, <app.database.models.Group object at 0x0000023938E8EE00>, <app.database.models.Group object at 0x0000023938E8EF10>, <app.database.models.Group object at 0x0000023938E8F020>, <app.database.models.Group object at 0x0000023938E8F130>, <app.database.models.Group object at 0x0000023938E8F240>, <app.database.models.Group object at 0x0000023938E8F350>, <app.database.models.Group object at 0x0000023938E8F460>, <app.database.models.Group object at 0x0000023938E8F570>, <app.database.models.Group object at 0x0000023938E8F680>, <app.database.models.Group object at 0x0000023938E8F790>, <app.database.models.Group object at 0x0000023938E8F8A0>, <app.database.models.Group object at 0x0000023938E8F9B0>, <app.database.models.Group object at 0x0000023938E8FAC0>, <app.database.models.Group object at 0x0000023938E8FBD0>, <app.database.models.Group object at 0x0000023938E8FCE0>, <app.database.models.Group object at 0x0000023938E8FDF0>, <app.database.models.Group object at 0x0000023938E8FF00>, <app.database.models.Group object at 0x0000023938F34050>, <app.database.models.Group object at 0x0000023938F34160>, <app.database.models.Group object at 0x0000023938F34270>, <app.database.models.Group object at 0x0000023938F34380>, <app.database.models.Group object at 0x0000023938F34490>, <app.database.models.Group object at 0x0000023938F345A0>, <app.database.models.Group object at 0x0000023938F346B0>, <app.database.models.Group object at 0x0000023938F347C0>, <app.database.models.Group object at 0x0000023938F348D0>, <app.database.models.Group object at 0x0000023938F349E0>, <app.database.models.Group object at 0x0000023938F34AF0>, <app.database.models.Group object at 0x0000023938F34C00>, <app.database.models.Group object at 0x0000023938F34D10>, <app.database.models.Group object at 0x0000023938F34E20>, <app.database.models.Group object at 0x0000023938F34F30>, <app.database.models.Group object at 0x0000023938F35040>, <app.database.models.Group object at 0x0000023938F35150>, <app.database.models.Group object at 0x0000023938F35260>, <app.database.models.Group object at 0x0000023938F35370>]
2025-06-06 02:07:23,192 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-06 02:07:23,192 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-06 02:07:23,192 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-06 02:07:23,192 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-06 02:07:23,192 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-06 02:07:23,534 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-06 02:07:23,534 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 02:07:23,535 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 02:07:23,535 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 98): Type=SELL, Qty=2.00000000, StoredMargin=1312.50045686
2025-06-06 02:07:23,535 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=656.25022843
2025-06-06 02:07:23,535 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-06 02:07:23,535 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425'), Decimal('656.25022843')], HighestMarginPerLot=656.68966425
2025-06-06 02:07:23,535 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1313.38, ContributingOrders=2 (based on individual stored margins)
2025-06-06 02:07:23,535 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-06 02:07:23,536 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 02:07:23,536 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 02:07:23,536 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 98): Type=SELL, Qty=2.00000000, StoredMargin=1312.50045686
2025-06-06 02:07:23,536 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=656.25022843
2025-06-06 02:07:23,536 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: NEW_UNSAVED): Type=SELL, Qty=2, StoredMargin=1312.410028571637352118027899
2025-06-06 02:07:23,536 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.2050142858186760590139495
2025-06-06 02:07:23,536 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=4.00000000, NetQty=4.00000000
2025-06-06 02:07:23,537 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425'), Decimal('656.25022843'), Decimal('656.2050142858186760590139495')], HighestMarginPerLot=656.68966425
2025-06-06 02:07:23,537 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=2626.76, ContributingOrders=3 (based on individual stored margins)
2025-06-06 02:07:23,537 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=1313.38, MarginAfter=2626.76, AdditionalMargin=1313.38
2025-06-06 02:07:23,548 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=8548.70000000, CalculatedNewMargin=9862.08
2025-06-06 02:07:23,580 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '9363065456', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8880100000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1312.410028571637352118027899'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-06 02:07:23,652 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 9862.08
2025-06-06 02:07:23,865 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'REDIS_MARKET_DATA_CHANNEL' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 366, in place_order
    await redis_client.publish(REDIS_MARKET_DATA_CHANNEL, json.dumps({"type": "market_data_update", "user_id": user_id}))
                               ^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'REDIS_MARKET_DATA_CHANNEL' is not defined
2025-06-06 02:07:23,890 - ERROR - orders - Unexpected error in place_order: name 'REDIS_MARKET_DATA_CHANNEL' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 420, in place_order
    await redis_client.publish(REDIS_MARKET_DATA_CHANNEL, json.dumps({"type": "market_data_update", "user_id": current_user.id}))
                               ^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'REDIS_MARKET_DATA_CHANNEL' is not defined
2025-06-06 02:08:16,985 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 02:08:55,723 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 2
2025-06-06 02:08:55,737 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000019C546EE360>, <app.database.models.Group object at 0x0000019C546EFF00>, <app.database.models.Group object at 0x0000019C54A2C160>, <app.database.models.Group object at 0x0000019C54A2C050>, <app.database.models.Group object at 0x0000019C54A2C270>, <app.database.models.Group object at 0x0000019C54A2C490>, <app.database.models.Group object at 0x0000019C54A2C6B0>, <app.database.models.Group object at 0x0000019C54A2C7C0>, <app.database.models.Group object at 0x0000019C54A2C8D0>, <app.database.models.Group object at 0x0000019C54A2C9E0>, <app.database.models.Group object at 0x0000019C54A2CAF0>, <app.database.models.Group object at 0x0000019C54A2CC00>, <app.database.models.Group object at 0x0000019C54A2CD10>, <app.database.models.Group object at 0x0000019C54A2CE20>, <app.database.models.Group object at 0x0000019C54A2CF30>, <app.database.models.Group object at 0x0000019C54A2D040>, <app.database.models.Group object at 0x0000019C54A2D150>, <app.database.models.Group object at 0x0000019C54A2D260>, <app.database.models.Group object at 0x0000019C54A2D370>, <app.database.models.Group object at 0x0000019C54A2D480>, <app.database.models.Group object at 0x0000019C54A2D590>, <app.database.models.Group object at 0x0000019C54A2D6A0>, <app.database.models.Group object at 0x0000019C54A2D7B0>, <app.database.models.Group object at 0x0000019C54A2D8C0>, <app.database.models.Group object at 0x0000019C54A2D9D0>, <app.database.models.Group object at 0x0000019C54A2DAE0>, <app.database.models.Group object at 0x0000019C54A2DBF0>, <app.database.models.Group object at 0x0000019C54A2DD00>, <app.database.models.Group object at 0x0000019C54A2DE10>, <app.database.models.Group object at 0x0000019C54A2DF20>, <app.database.models.Group object at 0x0000019C54A2E030>, <app.database.models.Group object at 0x0000019C54A2E140>, <app.database.models.Group object at 0x0000019C54A2E250>, <app.database.models.Group object at 0x0000019C54A2E360>, <app.database.models.Group object at 0x0000019C54A2E470>, <app.database.models.Group object at 0x0000019C54A2E580>, <app.database.models.Group object at 0x0000019C54A2E690>, <app.database.models.Group object at 0x0000019C54A2E7A0>, <app.database.models.Group object at 0x0000019C54A2E8B0>, <app.database.models.Group object at 0x0000019C54A2E9C0>, <app.database.models.Group object at 0x0000019C54A2EAD0>, <app.database.models.Group object at 0x0000019C54A2EBE0>, <app.database.models.Group object at 0x0000019C54A2ECF0>, <app.database.models.Group object at 0x0000019C54A2EE00>, <app.database.models.Group object at 0x0000019C54A2EF10>, <app.database.models.Group object at 0x0000019C54A2F020>, <app.database.models.Group object at 0x0000019C54A2F130>, <app.database.models.Group object at 0x0000019C54A2F240>, <app.database.models.Group object at 0x0000019C54A2F350>, <app.database.models.Group object at 0x0000019C54A2F460>, <app.database.models.Group object at 0x0000019C54A2F570>, <app.database.models.Group object at 0x0000019C54A2F680>, <app.database.models.Group object at 0x0000019C54A2F790>, <app.database.models.Group object at 0x0000019C54A2F8A0>, <app.database.models.Group object at 0x0000019C54A2F9B0>, <app.database.models.Group object at 0x0000019C54A2FAC0>, <app.database.models.Group object at 0x0000019C54A2FBD0>, <app.database.models.Group object at 0x0000019C54A2FCE0>, <app.database.models.Group object at 0x0000019C54A2FDF0>, <app.database.models.Group object at 0x0000019C54A2FF00>, <app.database.models.Group object at 0x0000019C54AD4050>, <app.database.models.Group object at 0x0000019C54AD4160>, <app.database.models.Group object at 0x0000019C54AD4270>, <app.database.models.Group object at 0x0000019C54AD4380>, <app.database.models.Group object at 0x0000019C54AD4490>, <app.database.models.Group object at 0x0000019C54AD45A0>, <app.database.models.Group object at 0x0000019C54AD46B0>, <app.database.models.Group object at 0x0000019C54AD47C0>, <app.database.models.Group object at 0x0000019C54AD48D0>, <app.database.models.Group object at 0x0000019C54AD49E0>, <app.database.models.Group object at 0x0000019C54AD4AF0>, <app.database.models.Group object at 0x0000019C54AD4C00>, <app.database.models.Group object at 0x0000019C54AD4D10>, <app.database.models.Group object at 0x0000019C54AD4E20>, <app.database.models.Group object at 0x0000019C54AD4F30>, <app.database.models.Group object at 0x0000019C54AD5040>, <app.database.models.Group object at 0x0000019C54AD5150>, <app.database.models.Group object at 0x0000019C54AD5260>, <app.database.models.Group object at 0x0000019C54AD5370>]
2025-06-06 02:08:55,737 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-06 02:08:55,737 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-06 02:08:55,737 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-06 02:08:55,737 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-06 02:08:55,738 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-06 02:08:56,083 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-06 02:08:56,083 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 02:08:56,083 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 02:08:56,084 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 98): Type=SELL, Qty=2.00000000, StoredMargin=1312.50045686
2025-06-06 02:08:56,085 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=656.25022843
2025-06-06 02:08:56,085 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 99): Type=SELL, Qty=2.00000000, StoredMargin=1312.41002857
2025-06-06 02:08:56,086 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.205014285
2025-06-06 02:08:56,086 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=4.00000000, NetQty=4.00000000
2025-06-06 02:08:56,086 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425'), Decimal('656.25022843'), Decimal('656.205014285')], HighestMarginPerLot=656.68966425
2025-06-06 02:08:56,086 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=2626.76, ContributingOrders=3 (based on individual stored margins)
2025-06-06 02:08:56,086 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 4
2025-06-06 02:08:56,086 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 02:08:56,086 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 02:08:56,086 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 98): Type=SELL, Qty=2.00000000, StoredMargin=1312.50045686
2025-06-06 02:08:56,086 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=656.25022843
2025-06-06 02:08:56,087 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 99): Type=SELL, Qty=2.00000000, StoredMargin=1312.41002857
2025-06-06 02:08:56,087 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.205014285
2025-06-06 02:08:56,087 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: NEW_UNSAVED): Type=SELL, Qty=2, StoredMargin=1312.385364677340387439987724
2025-06-06 02:08:56,087 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=656.192682338670193719993862
2025-06-06 02:08:56,087 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=6.00000000, NetQty=6.00000000
2025-06-06 02:08:56,089 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425'), Decimal('656.25022843'), Decimal('656.205014285'), Decimal('656.192682338670193719993862')], HighestMarginPerLot=656.68966425
2025-06-06 02:08:56,089 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=3940.14, ContributingOrders=4 (based on individual stored margins)
2025-06-06 02:08:56,089 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=2626.76, MarginAfter=3940.14, AdditionalMargin=1313.38
2025-06-06 02:08:56,122 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=9862.08000000, CalculatedNewMargin=11175.46
2025-06-06 02:08:56,148 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '3955852287', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8879700000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1312.385364677340387439987724'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-06 02:08:56,188 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 11175.46
2025-06-06 02:08:56,267 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-06 02:10:54,123 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 02:13:20,255 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 02:15:06,865 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 02:18:44,431 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 02:19:00,371 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 02:19:09,909 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 02:20:05,936 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 2
2025-06-06 02:20:05,944 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000002D675221040>, <app.database.models.Group object at 0x000002D675220F30>, <app.database.models.Group object at 0x000002D675220E20>, <app.database.models.Group object at 0x000002D675220D10>, <app.database.models.Group object at 0x000002D675221150>, <app.database.models.Group object at 0x000002D675221260>, <app.database.models.Group object at 0x000002D675221370>, <app.database.models.Group object at 0x000002D675221480>, <app.database.models.Group object at 0x000002D675221590>, <app.database.models.Group object at 0x000002D6752216A0>, <app.database.models.Group object at 0x000002D6752217B0>, <app.database.models.Group object at 0x000002D6752218C0>, <app.database.models.Group object at 0x000002D6752219D0>, <app.database.models.Group object at 0x000002D675221AE0>, <app.database.models.Group object at 0x000002D675221BF0>, <app.database.models.Group object at 0x000002D675221D00>, <app.database.models.Group object at 0x000002D675221E10>, <app.database.models.Group object at 0x000002D675221F20>, <app.database.models.Group object at 0x000002D675222030>, <app.database.models.Group object at 0x000002D675222140>, <app.database.models.Group object at 0x000002D675222250>, <app.database.models.Group object at 0x000002D675222360>, <app.database.models.Group object at 0x000002D675222470>, <app.database.models.Group object at 0x000002D675222580>, <app.database.models.Group object at 0x000002D675222690>, <app.database.models.Group object at 0x000002D6752227A0>, <app.database.models.Group object at 0x000002D6752228B0>, <app.database.models.Group object at 0x000002D6752229C0>, <app.database.models.Group object at 0x000002D675222AD0>, <app.database.models.Group object at 0x000002D675222BE0>, <app.database.models.Group object at 0x000002D675222CF0>, <app.database.models.Group object at 0x000002D675222E00>, <app.database.models.Group object at 0x000002D675222F10>, <app.database.models.Group object at 0x000002D675223020>, <app.database.models.Group object at 0x000002D675223130>, <app.database.models.Group object at 0x000002D675223240>, <app.database.models.Group object at 0x000002D675223350>, <app.database.models.Group object at 0x000002D675223460>, <app.database.models.Group object at 0x000002D675223570>, <app.database.models.Group object at 0x000002D675223680>, <app.database.models.Group object at 0x000002D675223790>, <app.database.models.Group object at 0x000002D6752238A0>, <app.database.models.Group object at 0x000002D6752239B0>, <app.database.models.Group object at 0x000002D675223AC0>, <app.database.models.Group object at 0x000002D675223BD0>, <app.database.models.Group object at 0x000002D675223CE0>, <app.database.models.Group object at 0x000002D675223DF0>, <app.database.models.Group object at 0x000002D675223F00>, <app.database.models.Group object at 0x000002D674EDFCE0>, <app.database.models.Group object at 0x000002D674EDFBD0>, <app.database.models.Group object at 0x000002D674EDFDF0>, <app.database.models.Group object at 0x000002D674EDFF00>, <app.database.models.Group object at 0x000002D674EDE470>, <app.database.models.Group object at 0x000002D674EDE690>, <app.database.models.Group object at 0x000002D674EDE580>, <app.database.models.Group object at 0x000002D674EDF790>, <app.database.models.Group object at 0x000002D674EDE7A0>, <app.database.models.Group object at 0x000002D674EDF9B0>, <app.database.models.Group object at 0x000002D674EDE8B0>, <app.database.models.Group object at 0x000002D6752C4050>, <app.database.models.Group object at 0x000002D6752C4160>, <app.database.models.Group object at 0x000002D6752C4270>, <app.database.models.Group object at 0x000002D6752C4380>, <app.database.models.Group object at 0x000002D6752C4490>, <app.database.models.Group object at 0x000002D6752C45A0>, <app.database.models.Group object at 0x000002D6752C46B0>, <app.database.models.Group object at 0x000002D6752C47C0>, <app.database.models.Group object at 0x000002D6752C48D0>, <app.database.models.Group object at 0x000002D6752C49E0>, <app.database.models.Group object at 0x000002D6752C4AF0>, <app.database.models.Group object at 0x000002D6752C4C00>, <app.database.models.Group object at 0x000002D6752C4D10>, <app.database.models.Group object at 0x000002D6752C4E20>, <app.database.models.Group object at 0x000002D6752C4F30>, <app.database.models.Group object at 0x000002D6752C5040>, <app.database.models.Group object at 0x000002D6752C5150>, <app.database.models.Group object at 0x000002D6752C5260>, <app.database.models.Group object at 0x000002D6752C5370>, <app.database.models.Group object at 0x000002D6752C5480>]
2025-06-06 02:20:05,944 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-06 02:20:05,944 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-06 02:20:05,944 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-06 02:20:05,944 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-06 02:20:05,944 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-06 02:20:06,297 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-06 02:20:06,297 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 02:20:06,297 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 02:20:06,297 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-06 02:20:06,297 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425')], HighestMarginPerLot=656.68966425
2025-06-06 02:20:06,297 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=656.69, ContributingOrders=1 (based on individual stored margins)
2025-06-06 02:20:06,297 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-06 02:20:06,297 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 02:20:06,297 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 02:20:06,297 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=SELL, Qty=2, StoredMargin=1312.554821355476287936377990
2025-06-06 02:20:06,297 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=656.277410677738143968188995
2025-06-06 02:20:06,297 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=2, NetQty=2
2025-06-06 02:20:06,298 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425'), Decimal('656.277410677738143968188995')], HighestMarginPerLot=656.68966425
2025-06-06 02:20:06,298 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1313.38, ContributingOrders=2 (based on individual stored margins)
2025-06-06 02:20:06,298 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=656.69, MarginAfter=1313.38, AdditionalMargin=656.69
2025-06-06 02:20:06,302 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=11175.46000000, CalculatedNewMargin=11832.15
2025-06-06 02:20:06,310 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '8915135127', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8878400000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1312.554821355476287936377990'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-06 02:20:06,327 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 11832.15
2025-06-06 02:20:06,392 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-06 02:22:33,177 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 02:22:44,542 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 02:23:04,117 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 2
2025-06-06 02:23:04,138 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x00000207EDD2E470>, <app.database.models.Group object at 0x00000207EDD2FF00>, <app.database.models.Group object at 0x00000207EE06C270>, <app.database.models.Group object at 0x00000207EE06C050>, <app.database.models.Group object at 0x00000207EE06C160>, <app.database.models.Group object at 0x00000207EE06C380>, <app.database.models.Group object at 0x00000207EE06C5A0>, <app.database.models.Group object at 0x00000207EE06C7C0>, <app.database.models.Group object at 0x00000207EE06C8D0>, <app.database.models.Group object at 0x00000207EE06C9E0>, <app.database.models.Group object at 0x00000207EE06CAF0>, <app.database.models.Group object at 0x00000207EE06CC00>, <app.database.models.Group object at 0x00000207EE06CD10>, <app.database.models.Group object at 0x00000207EE06CE20>, <app.database.models.Group object at 0x00000207EE06CF30>, <app.database.models.Group object at 0x00000207EE06D040>, <app.database.models.Group object at 0x00000207EE06D150>, <app.database.models.Group object at 0x00000207EE06D260>, <app.database.models.Group object at 0x00000207EE06D370>, <app.database.models.Group object at 0x00000207EE06D480>, <app.database.models.Group object at 0x00000207EE06D590>, <app.database.models.Group object at 0x00000207EE06D6A0>, <app.database.models.Group object at 0x00000207EE06D7B0>, <app.database.models.Group object at 0x00000207EE06D8C0>, <app.database.models.Group object at 0x00000207EE06D9D0>, <app.database.models.Group object at 0x00000207EE06DAE0>, <app.database.models.Group object at 0x00000207EE06DBF0>, <app.database.models.Group object at 0x00000207EE06DD00>, <app.database.models.Group object at 0x00000207EE06DE10>, <app.database.models.Group object at 0x00000207EE06DF20>, <app.database.models.Group object at 0x00000207EE06E030>, <app.database.models.Group object at 0x00000207EE06E140>, <app.database.models.Group object at 0x00000207EE06E250>, <app.database.models.Group object at 0x00000207EE06E360>, <app.database.models.Group object at 0x00000207EE06E470>, <app.database.models.Group object at 0x00000207EE06E580>, <app.database.models.Group object at 0x00000207EE06E690>, <app.database.models.Group object at 0x00000207EE06E7A0>, <app.database.models.Group object at 0x00000207EE06E8B0>, <app.database.models.Group object at 0x00000207EE06E9C0>, <app.database.models.Group object at 0x00000207EE06EAD0>, <app.database.models.Group object at 0x00000207EE06EBE0>, <app.database.models.Group object at 0x00000207EE06ECF0>, <app.database.models.Group object at 0x00000207EE06EE00>, <app.database.models.Group object at 0x00000207EE06EF10>, <app.database.models.Group object at 0x00000207EE06F020>, <app.database.models.Group object at 0x00000207EE06F130>, <app.database.models.Group object at 0x00000207EE06F240>, <app.database.models.Group object at 0x00000207EE06F350>, <app.database.models.Group object at 0x00000207EE06F460>, <app.database.models.Group object at 0x00000207EE06F570>, <app.database.models.Group object at 0x00000207EE06F680>, <app.database.models.Group object at 0x00000207EE06F790>, <app.database.models.Group object at 0x00000207EE06F8A0>, <app.database.models.Group object at 0x00000207EE06F9B0>, <app.database.models.Group object at 0x00000207EE06FAC0>, <app.database.models.Group object at 0x00000207EE06FBD0>, <app.database.models.Group object at 0x00000207EE06FCE0>, <app.database.models.Group object at 0x00000207EE06FDF0>, <app.database.models.Group object at 0x00000207EE06FF00>, <app.database.models.Group object at 0x00000207EE110050>, <app.database.models.Group object at 0x00000207EE110160>, <app.database.models.Group object at 0x00000207EE110270>, <app.database.models.Group object at 0x00000207EE110380>, <app.database.models.Group object at 0x00000207EE110490>, <app.database.models.Group object at 0x00000207EE1105A0>, <app.database.models.Group object at 0x00000207EE1106B0>, <app.database.models.Group object at 0x00000207EE1107C0>, <app.database.models.Group object at 0x00000207EE1108D0>, <app.database.models.Group object at 0x00000207EE1109E0>, <app.database.models.Group object at 0x00000207EE110AF0>, <app.database.models.Group object at 0x00000207EE110C00>, <app.database.models.Group object at 0x00000207EE110D10>, <app.database.models.Group object at 0x00000207EE110E20>, <app.database.models.Group object at 0x00000207EE110F30>, <app.database.models.Group object at 0x00000207EE111040>, <app.database.models.Group object at 0x00000207EE111150>, <app.database.models.Group object at 0x00000207EE111260>, <app.database.models.Group object at 0x00000207EE111370>]
2025-06-06 02:23:04,138 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-06 02:23:04,138 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-06 02:23:04,138 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-06 02:23:04,138 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-06 02:23:04,138 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-06 02:23:04,567 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-06 02:23:04,567 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 02:23:04,567 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 02:23:04,567 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 101): Type=SELL, Qty=2.00000000, StoredMargin=1312.55482136
2025-06-06 02:23:04,567 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=656.27741068
2025-06-06 02:23:04,567 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-06 02:23:04,568 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425'), Decimal('656.27741068')], HighestMarginPerLot=656.68966425
2025-06-06 02:23:04,568 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1313.38, ContributingOrders=2 (based on individual stored margins)
2025-06-06 02:23:04,568 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-06 02:23:04,568 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 02:23:04,568 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 02:23:04,568 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 101): Type=SELL, Qty=2.00000000, StoredMargin=1312.55482136
2025-06-06 02:23:04,568 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=656.27741068
2025-06-06 02:23:04,568 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: NEW_UNSAVED): Type=SELL, Qty=2, StoredMargin=1312.488122907804528643891886
2025-06-06 02:23:04,568 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.244061453902264321945943
2025-06-06 02:23:04,569 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=4.00000000, NetQty=4.00000000
2025-06-06 02:23:04,569 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425'), Decimal('656.27741068'), Decimal('656.244061453902264321945943')], HighestMarginPerLot=656.68966425
2025-06-06 02:23:04,569 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=2626.76, ContributingOrders=3 (based on individual stored margins)
2025-06-06 02:23:04,569 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=1313.38, MarginAfter=2626.76, AdditionalMargin=1313.38
2025-06-06 02:23:04,600 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=11832.15000000, CalculatedNewMargin=13145.53
2025-06-06 02:23:04,683 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '4245704161', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8878600000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1312.488122907804528643891886'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-06 02:23:04,747 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 13145.53
2025-06-06 02:23:04,831 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-06 02:27:01,725 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 02:27:56,049 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 02:28:25,988 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 02:34:17,605 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 02:35:00,350 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 2
2025-06-06 02:35:00,364 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000023AC918F570>, <app.database.models.Group object at 0x0000023AC918F790>, <app.database.models.Group object at 0x0000023AC918E250>, <app.database.models.Group object at 0x0000023AC918FCE0>, <app.database.models.Group object at 0x0000023AC918E360>, <app.database.models.Group object at 0x0000023AC94C88D0>, <app.database.models.Group object at 0x0000023AC94C89E0>, <app.database.models.Group object at 0x0000023AC94C8AF0>, <app.database.models.Group object at 0x0000023AC94C8C00>, <app.database.models.Group object at 0x0000023AC94C8D10>, <app.database.models.Group object at 0x0000023AC94C8E20>, <app.database.models.Group object at 0x0000023AC94C8F30>, <app.database.models.Group object at 0x0000023AC94C9040>, <app.database.models.Group object at 0x0000023AC94C9150>, <app.database.models.Group object at 0x0000023AC94C9260>, <app.database.models.Group object at 0x0000023AC94C9370>, <app.database.models.Group object at 0x0000023AC94C9480>, <app.database.models.Group object at 0x0000023AC94C9590>, <app.database.models.Group object at 0x0000023AC94C96A0>, <app.database.models.Group object at 0x0000023AC94C97B0>, <app.database.models.Group object at 0x0000023AC94C98C0>, <app.database.models.Group object at 0x0000023AC94C99D0>, <app.database.models.Group object at 0x0000023AC94C9AE0>, <app.database.models.Group object at 0x0000023AC94C9BF0>, <app.database.models.Group object at 0x0000023AC94C9D00>, <app.database.models.Group object at 0x0000023AC94C9E10>, <app.database.models.Group object at 0x0000023AC94C9F20>, <app.database.models.Group object at 0x0000023AC94CA030>, <app.database.models.Group object at 0x0000023AC94CA140>, <app.database.models.Group object at 0x0000023AC94CA250>, <app.database.models.Group object at 0x0000023AC94CA360>, <app.database.models.Group object at 0x0000023AC94CA470>, <app.database.models.Group object at 0x0000023AC94CA580>, <app.database.models.Group object at 0x0000023AC94CA690>, <app.database.models.Group object at 0x0000023AC94CA7A0>, <app.database.models.Group object at 0x0000023AC94CA8B0>, <app.database.models.Group object at 0x0000023AC94CA9C0>, <app.database.models.Group object at 0x0000023AC94CAAD0>, <app.database.models.Group object at 0x0000023AC94CABE0>, <app.database.models.Group object at 0x0000023AC94CACF0>, <app.database.models.Group object at 0x0000023AC94CAE00>, <app.database.models.Group object at 0x0000023AC94CAF10>, <app.database.models.Group object at 0x0000023AC94CB020>, <app.database.models.Group object at 0x0000023AC94CB130>, <app.database.models.Group object at 0x0000023AC94CB240>, <app.database.models.Group object at 0x0000023AC94CB350>, <app.database.models.Group object at 0x0000023AC94CB460>, <app.database.models.Group object at 0x0000023AC94CB570>, <app.database.models.Group object at 0x0000023AC94CB680>, <app.database.models.Group object at 0x0000023AC94CB790>, <app.database.models.Group object at 0x0000023AC94CB8A0>, <app.database.models.Group object at 0x0000023AC94CB9B0>, <app.database.models.Group object at 0x0000023AC94CBAC0>, <app.database.models.Group object at 0x0000023AC94CBBD0>, <app.database.models.Group object at 0x0000023AC94CBCE0>, <app.database.models.Group object at 0x0000023AC94CBDF0>, <app.database.models.Group object at 0x0000023AC94CBF00>, <app.database.models.Group object at 0x0000023AC95BC050>, <app.database.models.Group object at 0x0000023AC95BC160>, <app.database.models.Group object at 0x0000023AC95BC270>, <app.database.models.Group object at 0x0000023AC95BC380>, <app.database.models.Group object at 0x0000023AC95BC490>, <app.database.models.Group object at 0x0000023AC95BC5A0>, <app.database.models.Group object at 0x0000023AC95BC6B0>, <app.database.models.Group object at 0x0000023AC95BC7C0>, <app.database.models.Group object at 0x0000023AC95BC8D0>, <app.database.models.Group object at 0x0000023AC95BC9E0>, <app.database.models.Group object at 0x0000023AC95BCAF0>, <app.database.models.Group object at 0x0000023AC95BCC00>, <app.database.models.Group object at 0x0000023AC95BCD10>, <app.database.models.Group object at 0x0000023AC95BCE20>, <app.database.models.Group object at 0x0000023AC95BCF30>, <app.database.models.Group object at 0x0000023AC95BD040>, <app.database.models.Group object at 0x0000023AC95BD150>, <app.database.models.Group object at 0x0000023AC95BD260>, <app.database.models.Group object at 0x0000023AC95BD370>, <app.database.models.Group object at 0x0000023AC95BD480>, <app.database.models.Group object at 0x0000023AC95BD590>, <app.database.models.Group object at 0x0000023AC95BD6A0>]
2025-06-06 02:35:00,364 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-06 02:35:00,365 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-06 02:35:00,365 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-06 02:35:00,365 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-06 02:35:00,365 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-06 02:35:00,718 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-06 02:35:00,718 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 02:35:00,719 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 02:35:00,719 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-06 02:35:00,719 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425')], HighestMarginPerLot=656.68966425
2025-06-06 02:35:00,719 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=656.69, ContributingOrders=1 (based on individual stored margins)
2025-06-06 02:35:00,719 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-06 02:35:00,719 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 02:35:00,719 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 02:35:00,719 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=SELL, Qty=2, StoredMargin=1312.832133328460217097328314
2025-06-06 02:35:00,720 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=656.416066664230108548664157
2025-06-06 02:35:00,720 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=2, NetQty=2
2025-06-06 02:35:00,720 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425'), Decimal('656.416066664230108548664157')], HighestMarginPerLot=656.68966425
2025-06-06 02:35:00,720 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1313.38, ContributingOrders=2 (based on individual stored margins)
2025-06-06 02:35:00,720 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=656.69, MarginAfter=1313.38, AdditionalMargin=656.69
2025-06-06 02:35:00,741 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=13145.53000000, CalculatedNewMargin=13802.22
2025-06-06 02:35:00,789 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '9439211266', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8880100000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1312.832133328460217097328314'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-06 02:35:00,834 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 13802.22
2025-06-06 02:35:00,985 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-06 05:46:23,234 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 05:53:58,178 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 05:55:18,522 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 06:04:10,674 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 06:04:34,329 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 10
2025-06-06 06:04:34,364 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x00000121F265BCB0>, <app.database.models.Group object at 0x00000121F2940550>, <app.database.models.Group object at 0x00000121F2940690>, <app.database.models.Group object at 0x00000121F28F1350>, <app.database.models.Group object at 0x00000121F28F1480>, <app.database.models.Group object at 0x00000121F292AD50>, <app.database.models.Group object at 0x00000121F2808E20>, <app.database.models.Group object at 0x00000121F280A250>, <app.database.models.Group object at 0x00000121F280A360>, <app.database.models.Group object at 0x00000121F280A470>, <app.database.models.Group object at 0x00000121F280A580>, <app.database.models.Group object at 0x00000121F280A690>, <app.database.models.Group object at 0x00000121F280A7A0>, <app.database.models.Group object at 0x00000121F280A8B0>, <app.database.models.Group object at 0x00000121F280A9C0>, <app.database.models.Group object at 0x00000121F280AAD0>, <app.database.models.Group object at 0x00000121F280ABE0>, <app.database.models.Group object at 0x00000121F280ACF0>, <app.database.models.Group object at 0x00000121F280AE00>, <app.database.models.Group object at 0x00000121F280AF10>, <app.database.models.Group object at 0x00000121F280B020>, <app.database.models.Group object at 0x00000121F280B130>, <app.database.models.Group object at 0x00000121F280B240>, <app.database.models.Group object at 0x00000121F280B350>, <app.database.models.Group object at 0x00000121F280B460>, <app.database.models.Group object at 0x00000121F280B570>, <app.database.models.Group object at 0x00000121F280B680>, <app.database.models.Group object at 0x00000121F280B790>, <app.database.models.Group object at 0x00000121F280B8A0>, <app.database.models.Group object at 0x00000121F280B9B0>, <app.database.models.Group object at 0x00000121F280BAC0>, <app.database.models.Group object at 0x00000121F280BBD0>, <app.database.models.Group object at 0x00000121F280BCE0>, <app.database.models.Group object at 0x00000121F280BDF0>, <app.database.models.Group object at 0x00000121F280BF00>, <app.database.models.Group object at 0x00000121F299C050>, <app.database.models.Group object at 0x00000121F299C160>, <app.database.models.Group object at 0x00000121F299C270>, <app.database.models.Group object at 0x00000121F299C380>, <app.database.models.Group object at 0x00000121F299C490>, <app.database.models.Group object at 0x00000121F299C5A0>, <app.database.models.Group object at 0x00000121F299C6B0>, <app.database.models.Group object at 0x00000121F299C7C0>, <app.database.models.Group object at 0x00000121F299C8D0>, <app.database.models.Group object at 0x00000121F299C9E0>, <app.database.models.Group object at 0x00000121F299CAF0>, <app.database.models.Group object at 0x00000121F299CC00>, <app.database.models.Group object at 0x00000121F299CD10>, <app.database.models.Group object at 0x00000121F299CE20>, <app.database.models.Group object at 0x00000121F299CF30>, <app.database.models.Group object at 0x00000121F299D040>, <app.database.models.Group object at 0x00000121F299D150>, <app.database.models.Group object at 0x00000121F299D260>, <app.database.models.Group object at 0x00000121F299D370>, <app.database.models.Group object at 0x00000121F299D480>, <app.database.models.Group object at 0x00000121F299D590>, <app.database.models.Group object at 0x00000121F299D6A0>, <app.database.models.Group object at 0x00000121F299D7B0>, <app.database.models.Group object at 0x00000121F299D8C0>, <app.database.models.Group object at 0x00000121F299D9D0>, <app.database.models.Group object at 0x00000121F299DAE0>, <app.database.models.Group object at 0x00000121F299DBF0>, <app.database.models.Group object at 0x00000121F299DD00>, <app.database.models.Group object at 0x00000121F299DE10>, <app.database.models.Group object at 0x00000121F299DF20>, <app.database.models.Group object at 0x00000121F299E030>, <app.database.models.Group object at 0x00000121F299E140>, <app.database.models.Group object at 0x00000121F299E250>, <app.database.models.Group object at 0x00000121F299E360>, <app.database.models.Group object at 0x00000121F299E470>, <app.database.models.Group object at 0x00000121F299E580>, <app.database.models.Group object at 0x00000121F299E690>, <app.database.models.Group object at 0x00000121F299E7A0>, <app.database.models.Group object at 0x00000121F299E8B0>, <app.database.models.Group object at 0x00000121F299E9C0>, <app.database.models.Group object at 0x00000121F299EAD0>, <app.database.models.Group object at 0x00000121F299EBE0>, <app.database.models.Group object at 0x00000121F299ECF0>, <app.database.models.Group object at 0x00000121F299EE00>]
2025-06-06 06:04:34,367 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-06 06:04:34,367 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-06 06:04:34,368 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-06 06:04:34,369 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-06 06:04:34,370 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-06 06:04:34,403 - ERROR - orders - Unexpected error in place_order: 'ExternalSymbolInfo' object has no attribute 'profit_currency'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 327, in place_order
    "profit_currency": ext_symbol_info_orm.profit_currency,
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ExternalSymbolInfo' object has no attribute 'profit_currency'
2025-06-06 06:06:13,255 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 06:06:16,686 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 10
2025-06-06 06:06:16,698 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x00000207B11756A0>, <app.database.models.Group object at 0x00000207B11A8910>, <app.database.models.Group object at 0x00000207B11A8A50>, <app.database.models.Group object at 0x00000207B11E5220>, <app.database.models.Group object at 0x00000207B11E5350>, <app.database.models.Group object at 0x00000207B11A70B0>, <app.database.models.Group object at 0x00000207B1159E10>, <app.database.models.Group object at 0x00000207B1159F20>, <app.database.models.Group object at 0x00000207B115A030>, <app.database.models.Group object at 0x00000207B115A140>, <app.database.models.Group object at 0x00000207B115A250>, <app.database.models.Group object at 0x00000207B115A360>, <app.database.models.Group object at 0x00000207B115A470>, <app.database.models.Group object at 0x00000207B115A580>, <app.database.models.Group object at 0x00000207B115A690>, <app.database.models.Group object at 0x00000207B115A7A0>, <app.database.models.Group object at 0x00000207B115A8B0>, <app.database.models.Group object at 0x00000207B115A9C0>, <app.database.models.Group object at 0x00000207B115AAD0>, <app.database.models.Group object at 0x00000207B115ABE0>, <app.database.models.Group object at 0x00000207B115ACF0>, <app.database.models.Group object at 0x00000207B115AE00>, <app.database.models.Group object at 0x00000207B115AF10>, <app.database.models.Group object at 0x00000207B115B020>, <app.database.models.Group object at 0x00000207B115B130>, <app.database.models.Group object at 0x00000207B115B240>, <app.database.models.Group object at 0x00000207B115B350>, <app.database.models.Group object at 0x00000207B115B460>, <app.database.models.Group object at 0x00000207B115B570>, <app.database.models.Group object at 0x00000207B115B680>, <app.database.models.Group object at 0x00000207B115B790>, <app.database.models.Group object at 0x00000207B115B8A0>, <app.database.models.Group object at 0x00000207B115B9B0>, <app.database.models.Group object at 0x00000207B115BAC0>, <app.database.models.Group object at 0x00000207B115BBD0>, <app.database.models.Group object at 0x00000207B115BCE0>, <app.database.models.Group object at 0x00000207B115BDF0>, <app.database.models.Group object at 0x00000207B115BF00>, <app.database.models.Group object at 0x00000207B12E4050>, <app.database.models.Group object at 0x00000207B12E4160>, <app.database.models.Group object at 0x00000207B12E4270>, <app.database.models.Group object at 0x00000207B12E4380>, <app.database.models.Group object at 0x00000207B12E4490>, <app.database.models.Group object at 0x00000207B12E45A0>, <app.database.models.Group object at 0x00000207B12E46B0>, <app.database.models.Group object at 0x00000207B12E47C0>, <app.database.models.Group object at 0x00000207B12E48D0>, <app.database.models.Group object at 0x00000207B12E49E0>, <app.database.models.Group object at 0x00000207B12E4AF0>, <app.database.models.Group object at 0x00000207B12E4C00>, <app.database.models.Group object at 0x00000207B12E4D10>, <app.database.models.Group object at 0x00000207B12E4E20>, <app.database.models.Group object at 0x00000207B12E4F30>, <app.database.models.Group object at 0x00000207B12E5040>, <app.database.models.Group object at 0x00000207B12E5150>, <app.database.models.Group object at 0x00000207B12E5260>, <app.database.models.Group object at 0x00000207B12E5370>, <app.database.models.Group object at 0x00000207B12E5480>, <app.database.models.Group object at 0x00000207B12E5590>, <app.database.models.Group object at 0x00000207B12E56A0>, <app.database.models.Group object at 0x00000207B12E57B0>, <app.database.models.Group object at 0x00000207B12E58C0>, <app.database.models.Group object at 0x00000207B12E59D0>, <app.database.models.Group object at 0x00000207B12E5AE0>, <app.database.models.Group object at 0x00000207B12E5BF0>, <app.database.models.Group object at 0x00000207B12E5D00>, <app.database.models.Group object at 0x00000207B12E5E10>, <app.database.models.Group object at 0x00000207B12E5F20>, <app.database.models.Group object at 0x00000207B12E6030>, <app.database.models.Group object at 0x00000207B12E6140>, <app.database.models.Group object at 0x00000207B12E6250>, <app.database.models.Group object at 0x00000207B12E6360>, <app.database.models.Group object at 0x00000207B12E6470>, <app.database.models.Group object at 0x00000207B12E6580>, <app.database.models.Group object at 0x00000207B12E6690>, <app.database.models.Group object at 0x00000207B12E67A0>, <app.database.models.Group object at 0x00000207B12E68B0>, <app.database.models.Group object at 0x00000207B12E69C0>, <app.database.models.Group object at 0x00000207B12E6AD0>]
2025-06-06 06:06:16,699 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-06 06:06:16,699 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-06 06:06:16,699 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-06 06:06:16,699 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-06 06:06:16,700 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-06 06:06:17,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-06 06:06:17,066 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-06 06:06:17,066 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-06 06:06:17,066 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=10, StoredMargin=6564.226620282398339521150642
2025-06-06 06:06:17,067 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.4226620282398339521150642
2025-06-06 06:06:17,067 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=10, NetQty=10
2025-06-06 06:06:17,067 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.4226620282398339521150642')], HighestMarginPerLot=656.4226620282398339521150642
2025-06-06 06:06:17,067 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=6564.23, ContributingOrders=1 (based on individual stored margins)
2025-06-06 06:06:17,067 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=6564.23, AdditionalMargin=6564.23
2025-06-06 06:06:17,076 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=6564.23
2025-06-06 06:06:17,096 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '7019168913', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8881300000'), 'order_quantity': Decimal('10'), 'contract_value': Decimal('1000000.00000000'), 'margin': Decimal('6564.226620282398339521150642'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-06 06:06:17,142 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 6564.23
2025-06-06 06:06:17,197 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-06 06:12:37,398 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 06:25:26,235 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 06:28:00,593 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 09:28:14,654 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 09:37:28,839 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 09:45:40,594 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 09:51:33,773 - INFO - orders - Close order request received - Order ID: 7019168913, User ID: 1, User Type: demo
2025-06-06 09:51:33,773 - INFO - orders - Close request details - Price: 0.89, Type: SELL, Symbol: AUDCAD
2025-06-06 09:51:33,773 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001C03F1A4180>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-06 09:51:33,774 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-06 09:51:33,774 - INFO - orders - Request to close order 7019168913 for user 1 (DemoUser) with price 0.89. Frontend provided type: SELL, company: AUDCAD, status: CLOSE, frontend_status: CLOSE.
2025-06-06 09:51:33,789 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-06 09:51:33,817 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-06 09:51:33,818 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 113): Type=SELL, Qty=10.00000000, StoredMargin=6564.22662028
2025-06-06 09:51:33,818 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.422662028
2025-06-06 09:51:33,818 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=10.00000000, NetQty=10.00000000
2025-06-06 09:51:33,818 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.422662028')], HighestMarginPerLot=656.422662028
2025-06-06 09:51:33,818 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=6564.23, ContributingOrders=1 (based on individual stored margins)
2025-06-06 09:51:33,818 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-06 09:51:33,818 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-06 09:51:33,850 - DEBUG - orders - Inverse conversion for PnL on Close: -1870.000000000000000000000000 CAD / 1.3690900000 = -1365.870760870359143664770030 USD
2025-06-06 09:54:17,138 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 02:36:02,909 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 02:39:44,739 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 02:40:51,332 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 02:41:16,307 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 02:48:06,169 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 02:51:30,426 - INFO - orders - Close order request received - Order ID: 4868413402, User ID: 1, User Type: demo
2025-06-09 02:51:30,426 - INFO - orders - Close request details - Price: 0.89, Type: SELL, Symbol: AUDCAD
2025-06-09 02:51:30,426 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000027A7E80A650>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-09 02:51:30,426 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-09 02:51:30,426 - INFO - orders - Request to close order 4868413402 for user 1 (DemoUser) with price 0.89. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-09 02:51:30,445 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-09 02:51:30,477 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-09 02:51:30,478 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 121): Type=SELL, Qty=2.00000000, StoredMargin=1317.69348827
2025-06-09 02:51:30,478 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=658.846744135
2025-06-09 02:51:30,478 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-09 02:51:30,478 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('658.846744135')], HighestMarginPerLot=658.846744135
2025-06-09 02:51:30,478 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1317.69, ContributingOrders=1 (based on individual stored margins)
2025-06-09 02:51:30,478 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-09 02:51:30,478 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-09 02:51:30,504 - DEBUG - orders - Inverse conversion for PnL on Close: 290.000000000000000000000000 CAD / 1.3672000000 = 212.1123464014043300175541252 USD
2025-06-09 02:59:06,739 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 02:59:47,939 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 03:00:13,200 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 03:00:54,890 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 03:01:20,147 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 03:01:48,519 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 03:04:55,128 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-09 03:04:55,154 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001AC8CBC0490>, <app.database.models.Group object at 0x000001AC8CBC0050>, <app.database.models.Group object at 0x000001AC8CBC08D0>, <app.database.models.Group object at 0x000001AC8CBC1040>, <app.database.models.Group object at 0x000001AC8CBC0F30>, <app.database.models.Group object at 0x000001AC8CBC0E20>, <app.database.models.Group object at 0x000001AC8CBC1260>, <app.database.models.Group object at 0x000001AC8CBC1370>, <app.database.models.Group object at 0x000001AC8CBC1480>, <app.database.models.Group object at 0x000001AC8CBC1590>, <app.database.models.Group object at 0x000001AC8CBC16A0>, <app.database.models.Group object at 0x000001AC8CBC17B0>, <app.database.models.Group object at 0x000001AC8CBC18C0>, <app.database.models.Group object at 0x000001AC8CBC19D0>, <app.database.models.Group object at 0x000001AC8CBC1AE0>, <app.database.models.Group object at 0x000001AC8CBC1BF0>, <app.database.models.Group object at 0x000001AC8CBC1D00>, <app.database.models.Group object at 0x000001AC8CBC1E10>, <app.database.models.Group object at 0x000001AC8CBC1F20>, <app.database.models.Group object at 0x000001AC8CBC2030>, <app.database.models.Group object at 0x000001AC8CBC2140>, <app.database.models.Group object at 0x000001AC8CBC2250>, <app.database.models.Group object at 0x000001AC8CBC2360>, <app.database.models.Group object at 0x000001AC8CBC2470>, <app.database.models.Group object at 0x000001AC8CBC2580>, <app.database.models.Group object at 0x000001AC8CBC2690>, <app.database.models.Group object at 0x000001AC8CBC27A0>, <app.database.models.Group object at 0x000001AC8CBC28B0>, <app.database.models.Group object at 0x000001AC8CBC29C0>, <app.database.models.Group object at 0x000001AC8CBC2AD0>, <app.database.models.Group object at 0x000001AC8CBC2BE0>, <app.database.models.Group object at 0x000001AC8CBC2CF0>, <app.database.models.Group object at 0x000001AC8CBC2E00>, <app.database.models.Group object at 0x000001AC8CBC2F10>, <app.database.models.Group object at 0x000001AC8CBC3020>, <app.database.models.Group object at 0x000001AC8CBC3130>, <app.database.models.Group object at 0x000001AC8CBC3240>, <app.database.models.Group object at 0x000001AC8CBC3350>, <app.database.models.Group object at 0x000001AC8CBC3460>, <app.database.models.Group object at 0x000001AC8CBC3570>, <app.database.models.Group object at 0x000001AC8CBC3680>, <app.database.models.Group object at 0x000001AC8CBC3790>, <app.database.models.Group object at 0x000001AC8CBC38A0>, <app.database.models.Group object at 0x000001AC8CBC39B0>, <app.database.models.Group object at 0x000001AC8CBC3AC0>, <app.database.models.Group object at 0x000001AC8CBC3BD0>, <app.database.models.Group object at 0x000001AC8CBC3CE0>, <app.database.models.Group object at 0x000001AC8CBC3DF0>, <app.database.models.Group object at 0x000001AC8CBC3F00>, <app.database.models.Group object at 0x000001AC8C887F00>, <app.database.models.Group object at 0x000001AC8C886360>, <app.database.models.Group object at 0x000001AC8C887DF0>, <app.database.models.Group object at 0x000001AC8C886580>, <app.database.models.Group object at 0x000001AC8C886470>, <app.database.models.Group object at 0x000001AC8C887790>, <app.database.models.Group object at 0x000001AC8C887240>, <app.database.models.Group object at 0x000001AC8C8878A0>, <app.database.models.Group object at 0x000001AC8C8868B0>, <app.database.models.Group object at 0x000001AC8CCA4050>, <app.database.models.Group object at 0x000001AC8CCA4160>, <app.database.models.Group object at 0x000001AC8CCA4270>, <app.database.models.Group object at 0x000001AC8CCA4380>, <app.database.models.Group object at 0x000001AC8CCA4490>, <app.database.models.Group object at 0x000001AC8CCA45A0>, <app.database.models.Group object at 0x000001AC8CCA46B0>, <app.database.models.Group object at 0x000001AC8CCA47C0>, <app.database.models.Group object at 0x000001AC8CCA48D0>, <app.database.models.Group object at 0x000001AC8CCA49E0>, <app.database.models.Group object at 0x000001AC8CCA4AF0>, <app.database.models.Group object at 0x000001AC8CCA4C00>, <app.database.models.Group object at 0x000001AC8CCA4D10>, <app.database.models.Group object at 0x000001AC8CCA4E20>, <app.database.models.Group object at 0x000001AC8CCA4F30>, <app.database.models.Group object at 0x000001AC8CCA5040>, <app.database.models.Group object at 0x000001AC8CCA5150>, <app.database.models.Group object at 0x000001AC8CCA5260>, <app.database.models.Group object at 0x000001AC8CCA5370>, <app.database.models.Group object at 0x000001AC8CCA5480>, <app.database.models.Group object at 0x000001AC8CCA5590>]
2025-06-09 03:04:55,156 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-09 03:04:55,156 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-09 03:04:55,156 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-09 03:04:55,156 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-09 03:04:55,156 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-09 03:04:55,913 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-09 03:04:55,922 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-09 03:04:55,922 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-09 03:04:55,923 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-09 03:04:55,923 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1306.009010590369200163828916
2025-06-09 03:04:55,923 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=653.004505295184600081914458
2025-06-09 03:04:55,923 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-09 03:04:55,923 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.004505295184600081914458')], HighestMarginPerLot=653.004505295184600081914458
2025-06-09 03:04:55,923 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1306.01, ContributingOrders=1 (based on individual stored margins)
2025-06-09 03:04:55,923 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=1306.01, AdditionalMargin=1306.01
2025-06-09 03:04:55,937 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=1306.01
2025-06-09 03:04:56,010 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '1006733173', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8928400000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1306.009010590369200163828916'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-09 03:04:56,081 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1306.01
2025-06-09 03:04:56,207 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-09 03:09:56,023 - INFO - orders - Close order request received - Order ID: 1006733173, User ID: 1, User Type: demo
2025-06-09 03:09:56,024 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-09 03:09:56,026 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001AC8CC0CFC0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-09 03:09:56,026 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-09 03:09:56,026 - INFO - orders - Request to close order 1006733173 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-09 03:09:56,120 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-09 03:09:56,203 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-09 03:09:56,203 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 122): Type=BUY, Qty=2.00000000, StoredMargin=1306.00901059
2025-06-09 03:09:56,203 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=653.004505295
2025-06-09 03:09:56,203 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-09 03:09:56,203 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.004505295')], HighestMarginPerLot=653.004505295
2025-06-09 03:09:56,204 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1306.01, ContributingOrders=1 (based on individual stored margins)
2025-06-09 03:09:56,204 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-09 03:09:56,204 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-09 03:09:56,270 - INFO - orders - Existing entry commission for order 1006733173: 20.00000000
2025-06-09 03:09:56,286 - INFO - orders - Commission calculation for order 1006733173: entry=20.00000000, exit=0.0, total=20.00
2025-06-09 03:09:56,294 - ERROR - orders - Error processing close order: _convert_to_usd() missing 1 required positional argument: 'redis_client'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 894, in close_order
    profit_usd = await _convert_to_usd(profit, profit_currency, db_user_locked.id, db_order.order_id, "PnL on Close", db=db)
                       ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: _convert_to_usd() missing 1 required positional argument: 'redis_client'
2025-06-09 03:09:56,310 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: _convert_to_usd() missing 1 required positional argument: 'redis_client'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 894, in close_order
    profit_usd = await _convert_to_usd(profit, profit_currency, db_user_locked.id, db_order.order_id, "PnL on Close", db=db)
                       ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: _convert_to_usd() missing 1 required positional argument: 'redis_client'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 929, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: _convert_to_usd() missing 1 required positional argument: 'redis_client'
2025-06-09 03:15:39,182 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 03:16:26,462 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 03:17:41,092 - INFO - orders - Close order request received - Order ID: 1006733173, User ID: 1, User Type: demo
2025-06-09 03:17:41,092 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-09 03:17:41,092 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001B65ED460D0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-09 03:17:41,092 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-09 03:17:41,092 - INFO - orders - Request to close order 1006733173 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-09 03:17:41,127 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-09 03:17:41,189 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-09 03:17:41,193 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 122): Type=BUY, Qty=2.00000000, StoredMargin=1306.00901059
2025-06-09 03:17:41,194 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=653.004505295
2025-06-09 03:17:41,194 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-09 03:17:41,195 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.004505295')], HighestMarginPerLot=653.004505295
2025-06-09 03:17:41,195 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1306.01, ContributingOrders=1 (based on individual stored margins)
2025-06-09 03:17:41,201 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-09 03:17:41,202 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-09 03:17:41,246 - INFO - orders - Existing entry commission for order 1006733173: 20.00000000
2025-06-09 03:17:41,246 - INFO - orders - Commission calculation for order 1006733173: entry=20.00000000, exit=20.000000000000, total=40.00
2025-06-09 03:17:41,249 - DEBUG - orders - Inverse conversion for PnL on Close: -568.000000000000000000000000 CAD / 1.3672900000 = -415.4202839192855941314571159 USD
2025-06-09 03:23:06,554 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 03:23:40,082 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-09 03:23:40,120 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000002B06C9A6360>, <app.database.models.Group object at 0x000002B06CCFC050>, <app.database.models.Group object at 0x000002B06CCFC380>, <app.database.models.Group object at 0x000002B06CCFC270>, <app.database.models.Group object at 0x000002B06CCFC5A0>, <app.database.models.Group object at 0x000002B06CCFC6B0>, <app.database.models.Group object at 0x000002B06CCFC7C0>, <app.database.models.Group object at 0x000002B06CCFC8D0>, <app.database.models.Group object at 0x000002B06CCFC9E0>, <app.database.models.Group object at 0x000002B06CCFCAF0>, <app.database.models.Group object at 0x000002B06CCFCC00>, <app.database.models.Group object at 0x000002B06CCFCD10>, <app.database.models.Group object at 0x000002B06CCFCE20>, <app.database.models.Group object at 0x000002B06CCFCF30>, <app.database.models.Group object at 0x000002B06CCFD040>, <app.database.models.Group object at 0x000002B06CCFD150>, <app.database.models.Group object at 0x000002B06CCFD260>, <app.database.models.Group object at 0x000002B06CCFD370>, <app.database.models.Group object at 0x000002B06CCFD480>, <app.database.models.Group object at 0x000002B06CCFD590>, <app.database.models.Group object at 0x000002B06CCFD6A0>, <app.database.models.Group object at 0x000002B06CCFD7B0>, <app.database.models.Group object at 0x000002B06CCFD8C0>, <app.database.models.Group object at 0x000002B06CCFD9D0>, <app.database.models.Group object at 0x000002B06CCFDAE0>, <app.database.models.Group object at 0x000002B06CCFDBF0>, <app.database.models.Group object at 0x000002B06CCFDD00>, <app.database.models.Group object at 0x000002B06CCFDE10>, <app.database.models.Group object at 0x000002B06CCFDF20>, <app.database.models.Group object at 0x000002B06CCFE030>, <app.database.models.Group object at 0x000002B06CCFE140>, <app.database.models.Group object at 0x000002B06CCFE250>, <app.database.models.Group object at 0x000002B06CCFE360>, <app.database.models.Group object at 0x000002B06CCFE470>, <app.database.models.Group object at 0x000002B06CCFE580>, <app.database.models.Group object at 0x000002B06CCFE690>, <app.database.models.Group object at 0x000002B06CCFE7A0>, <app.database.models.Group object at 0x000002B06CCFE8B0>, <app.database.models.Group object at 0x000002B06CCFE9C0>, <app.database.models.Group object at 0x000002B06CCFEAD0>, <app.database.models.Group object at 0x000002B06CCFEBE0>, <app.database.models.Group object at 0x000002B06CCFECF0>, <app.database.models.Group object at 0x000002B06CCFEE00>, <app.database.models.Group object at 0x000002B06CCFEF10>, <app.database.models.Group object at 0x000002B06CCFF020>, <app.database.models.Group object at 0x000002B06CCFF130>, <app.database.models.Group object at 0x000002B06CCFF240>, <app.database.models.Group object at 0x000002B06CCFF350>, <app.database.models.Group object at 0x000002B06CCFF460>, <app.database.models.Group object at 0x000002B06CCFF570>, <app.database.models.Group object at 0x000002B06CCFF680>, <app.database.models.Group object at 0x000002B06CCFF790>, <app.database.models.Group object at 0x000002B06CCFF8A0>, <app.database.models.Group object at 0x000002B06CCFF9B0>, <app.database.models.Group object at 0x000002B06CCFFAC0>, <app.database.models.Group object at 0x000002B06CCFFBD0>, <app.database.models.Group object at 0x000002B06CCFFCE0>, <app.database.models.Group object at 0x000002B06CCFFDF0>, <app.database.models.Group object at 0x000002B06CCFFF00>, <app.database.models.Group object at 0x000002B06CDAC050>, <app.database.models.Group object at 0x000002B06CDAC160>, <app.database.models.Group object at 0x000002B06CDAC270>, <app.database.models.Group object at 0x000002B06CDAC380>, <app.database.models.Group object at 0x000002B06CDAC490>, <app.database.models.Group object at 0x000002B06CDAC5A0>, <app.database.models.Group object at 0x000002B06CDAC6B0>, <app.database.models.Group object at 0x000002B06CDAC7C0>, <app.database.models.Group object at 0x000002B06CDAC8D0>, <app.database.models.Group object at 0x000002B06CDAC9E0>, <app.database.models.Group object at 0x000002B06CDACAF0>, <app.database.models.Group object at 0x000002B06CDACC00>, <app.database.models.Group object at 0x000002B06CDACD10>, <app.database.models.Group object at 0x000002B06CDACE20>, <app.database.models.Group object at 0x000002B06CDACF30>, <app.database.models.Group object at 0x000002B06CDAD040>, <app.database.models.Group object at 0x000002B06CDAD150>, <app.database.models.Group object at 0x000002B06CDAD260>, <app.database.models.Group object at 0x000002B06CDAD370>, <app.database.models.Group object at 0x000002B06CDAD480>]
2025-06-09 03:23:40,122 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-09 03:23:40,122 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-09 03:23:40,123 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-09 03:23:40,123 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-09 03:23:40,123 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-09 03:23:40,480 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-09 03:23:40,498 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-09 03:23:40,498 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-09 03:23:40,499 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-09 03:23:40,499 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1305.843030272001872344160261
2025-06-09 03:23:40,499 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=652.9215151360009361720801305
2025-06-09 03:23:40,499 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-09 03:23:40,500 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('652.9215151360009361720801305')], HighestMarginPerLot=652.9215151360009361720801305
2025-06-09 03:23:40,501 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1305.84, ContributingOrders=1 (based on individual stored margins)
2025-06-09 03:23:40,501 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=1305.84, AdditionalMargin=1305.84
2025-06-09 03:23:40,527 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=1305.84
2025-06-09 03:23:40,565 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '4551936328', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8927200000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1305.843030272001872344160261'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-09 03:23:40,624 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1305.84
2025-06-09 03:23:40,754 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-09 03:24:01,641 - INFO - orders - Close order request received - Order ID: 4551936328, User ID: 1, User Type: demo
2025-06-09 03:24:01,647 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-09 03:24:01,649 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000002B06CB7B110>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-09 03:24:01,654 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-09 03:24:01,663 - INFO - orders - Request to close order 4551936328 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-09 03:24:01,755 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-09 03:24:01,783 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-09 03:24:01,784 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 123): Type=BUY, Qty=2.00000000, StoredMargin=1305.84303027
2025-06-09 03:24:01,784 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=652.921515135
2025-06-09 03:24:01,784 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-09 03:24:01,784 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('652.921515135')], HighestMarginPerLot=652.921515135
2025-06-09 03:24:01,785 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1305.84, ContributingOrders=1 (based on individual stored margins)
2025-06-09 03:24:01,785 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-09 03:24:01,785 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-09 03:24:01,830 - INFO - orders - Existing entry commission for order 4551936328: 20.00000000
2025-06-09 03:24:01,830 - INFO - orders - Commission calculation for order 4551936328: entry=20.00000000, exit=20.000000000000, total=40.00
2025-06-09 03:24:01,837 - DEBUG - orders - Inverse conversion for PnL on Close: -544.000000000000000000000000 CAD / 1.3672900000 = -397.8673141762171887456208997 USD
2025-06-09 03:24:01,973 - ERROR - orders - Error processing close order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1002, in close_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-09 03:24:01,987 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1002, in close_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1025, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: name 'get_adjusted_market_price_cache' is not defined
2025-06-09 03:29:49,214 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 03:32:38,524 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 03:33:12,120 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-09 03:33:12,140 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000027D12A86580>, <app.database.models.Group object at 0x0000027D12A879B0>, <app.database.models.Group object at 0x0000027D12DC0160>, <app.database.models.Group object at 0x0000027D12DC0050>, <app.database.models.Group object at 0x0000027D12DC0270>, <app.database.models.Group object at 0x0000027D12DC0490>, <app.database.models.Group object at 0x0000027D12DC06B0>, <app.database.models.Group object at 0x0000027D12DC07C0>, <app.database.models.Group object at 0x0000027D12DC08D0>, <app.database.models.Group object at 0x0000027D12DC09E0>, <app.database.models.Group object at 0x0000027D12DC0AF0>, <app.database.models.Group object at 0x0000027D12DC0C00>, <app.database.models.Group object at 0x0000027D12DC0D10>, <app.database.models.Group object at 0x0000027D12DC0E20>, <app.database.models.Group object at 0x0000027D12DC0F30>, <app.database.models.Group object at 0x0000027D12DC1040>, <app.database.models.Group object at 0x0000027D12DC1150>, <app.database.models.Group object at 0x0000027D12DC1260>, <app.database.models.Group object at 0x0000027D12DC1370>, <app.database.models.Group object at 0x0000027D12DC1480>, <app.database.models.Group object at 0x0000027D12DC1590>, <app.database.models.Group object at 0x0000027D12DC16A0>, <app.database.models.Group object at 0x0000027D12DC17B0>, <app.database.models.Group object at 0x0000027D12DC18C0>, <app.database.models.Group object at 0x0000027D12DC19D0>, <app.database.models.Group object at 0x0000027D12DC1AE0>, <app.database.models.Group object at 0x0000027D12DC1BF0>, <app.database.models.Group object at 0x0000027D12DC1D00>, <app.database.models.Group object at 0x0000027D12DC1E10>, <app.database.models.Group object at 0x0000027D12DC1F20>, <app.database.models.Group object at 0x0000027D12DC2030>, <app.database.models.Group object at 0x0000027D12DC2140>, <app.database.models.Group object at 0x0000027D12DC2250>, <app.database.models.Group object at 0x0000027D12DC2360>, <app.database.models.Group object at 0x0000027D12DC2470>, <app.database.models.Group object at 0x0000027D12DC2580>, <app.database.models.Group object at 0x0000027D12DC2690>, <app.database.models.Group object at 0x0000027D12DC27A0>, <app.database.models.Group object at 0x0000027D12DC28B0>, <app.database.models.Group object at 0x0000027D12DC29C0>, <app.database.models.Group object at 0x0000027D12DC2AD0>, <app.database.models.Group object at 0x0000027D12DC2BE0>, <app.database.models.Group object at 0x0000027D12DC2CF0>, <app.database.models.Group object at 0x0000027D12DC2E00>, <app.database.models.Group object at 0x0000027D12DC2F10>, <app.database.models.Group object at 0x0000027D12DC3020>, <app.database.models.Group object at 0x0000027D12DC3130>, <app.database.models.Group object at 0x0000027D12DC3240>, <app.database.models.Group object at 0x0000027D12DC3350>, <app.database.models.Group object at 0x0000027D12DC3460>, <app.database.models.Group object at 0x0000027D12DC3570>, <app.database.models.Group object at 0x0000027D12DC3680>, <app.database.models.Group object at 0x0000027D12DC3790>, <app.database.models.Group object at 0x0000027D12DC38A0>, <app.database.models.Group object at 0x0000027D12DC39B0>, <app.database.models.Group object at 0x0000027D12DC3AC0>, <app.database.models.Group object at 0x0000027D12DC3BD0>, <app.database.models.Group object at 0x0000027D12DC3CE0>, <app.database.models.Group object at 0x0000027D12DC3DF0>, <app.database.models.Group object at 0x0000027D12DC3F00>, <app.database.models.Group object at 0x0000027D12E84050>, <app.database.models.Group object at 0x0000027D12E84160>, <app.database.models.Group object at 0x0000027D12E84270>, <app.database.models.Group object at 0x0000027D12E84380>, <app.database.models.Group object at 0x0000027D12E84490>, <app.database.models.Group object at 0x0000027D12E845A0>, <app.database.models.Group object at 0x0000027D12E846B0>, <app.database.models.Group object at 0x0000027D12E847C0>, <app.database.models.Group object at 0x0000027D12E848D0>, <app.database.models.Group object at 0x0000027D12E849E0>, <app.database.models.Group object at 0x0000027D12E84AF0>, <app.database.models.Group object at 0x0000027D12E84C00>, <app.database.models.Group object at 0x0000027D12E84D10>, <app.database.models.Group object at 0x0000027D12E84E20>, <app.database.models.Group object at 0x0000027D12E84F30>, <app.database.models.Group object at 0x0000027D12E85040>, <app.database.models.Group object at 0x0000027D12E85150>, <app.database.models.Group object at 0x0000027D12E85260>, <app.database.models.Group object at 0x0000027D12E85370>]
2025-06-09 03:33:12,140 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-09 03:33:12,140 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-09 03:33:12,140 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-09 03:33:12,141 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-09 03:33:12,141 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-09 03:33:12,449 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-09 03:33:12,497 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-09 03:33:12,497 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-09 03:33:12,498 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-09 03:33:12,498 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1305.760341700310104733485460
2025-06-09 03:33:12,498 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=652.880170850155052366742730
2025-06-09 03:33:12,498 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-09 03:33:12,499 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('652.880170850155052366742730')], HighestMarginPerLot=652.880170850155052366742730
2025-06-09 03:33:12,499 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1305.76, ContributingOrders=1 (based on individual stored margins)
2025-06-09 03:33:12,499 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=1305.76, AdditionalMargin=1305.76
2025-06-09 03:33:12,511 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=1305.76
2025-06-09 03:33:12,574 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '5545449380', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8926700000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1305.760341700310104733485460'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-09 03:33:12,644 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1305.76
2025-06-09 03:33:12,932 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-09 03:34:56,270 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 03:36:41,889 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 03:37:22,526 - INFO - orders - Close order request received - Order ID: 5545449380, User ID: 1, User Type: demo
2025-06-09 03:37:22,527 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-09 03:37:22,527 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001E9CFF9EC10>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-09 03:37:22,527 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-09 03:37:22,527 - INFO - orders - Request to close order 5545449380 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-09 03:37:22,570 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-09 03:37:22,617 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-09 03:37:22,618 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 124): Type=BUY, Qty=2.00000000, StoredMargin=1305.76034170
2025-06-09 03:37:22,618 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=652.88017085
2025-06-09 03:37:22,618 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-09 03:37:22,618 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('652.88017085')], HighestMarginPerLot=652.88017085
2025-06-09 03:37:22,619 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1305.76, ContributingOrders=1 (based on individual stored margins)
2025-06-09 03:37:22,619 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-09 03:37:22,619 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-09 03:37:22,646 - INFO - orders - Existing entry commission for order 5545449380: 20.00000000
2025-06-09 03:37:22,646 - INFO - orders - Commission calculation for order 5545449380: entry=20.00000000, exit=20.000000000000, total=40.00
2025-06-09 03:37:22,648 - DEBUG - orders - Inverse conversion for PnL on Close: -534.000000000000000000000000 CAD / 1.3673400000 = -390.5392952740357189872306815 USD
2025-06-09 03:37:22,850 - INFO - orders - Updated portfolio cache for user 1 after closing order
2025-06-09 03:44:44,647 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 03:46:01,964 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 03:46:50,102 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 03:47:15,484 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 03:48:08,554 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 03:49:11,239 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 03:50:17,296 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-09 03:50:17,331 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x00000216EA887680>, <app.database.models.Group object at 0x00000216EA887CE0>, <app.database.models.Group object at 0x00000216EACDC9E0>, <app.database.models.Group object at 0x00000216EACDCF30>, <app.database.models.Group object at 0x00000216EACDCE20>, <app.database.models.Group object at 0x00000216EACDCD10>, <app.database.models.Group object at 0x00000216EACDCC00>, <app.database.models.Group object at 0x00000216EACDD150>, <app.database.models.Group object at 0x00000216EACDD260>, <app.database.models.Group object at 0x00000216EACDD370>, <app.database.models.Group object at 0x00000216EACDD480>, <app.database.models.Group object at 0x00000216EACDD590>, <app.database.models.Group object at 0x00000216EACDD6A0>, <app.database.models.Group object at 0x00000216EACDD7B0>, <app.database.models.Group object at 0x00000216EACDD8C0>, <app.database.models.Group object at 0x00000216EACDD9D0>, <app.database.models.Group object at 0x00000216EACDDAE0>, <app.database.models.Group object at 0x00000216EACDDBF0>, <app.database.models.Group object at 0x00000216EACDDD00>, <app.database.models.Group object at 0x00000216EACDDE10>, <app.database.models.Group object at 0x00000216EACDDF20>, <app.database.models.Group object at 0x00000216EACDE030>, <app.database.models.Group object at 0x00000216EACDE140>, <app.database.models.Group object at 0x00000216EACDE250>, <app.database.models.Group object at 0x00000216EACDE360>, <app.database.models.Group object at 0x00000216EACDE470>, <app.database.models.Group object at 0x00000216EACDE580>, <app.database.models.Group object at 0x00000216EACDE690>, <app.database.models.Group object at 0x00000216EACDE7A0>, <app.database.models.Group object at 0x00000216EACDE8B0>, <app.database.models.Group object at 0x00000216EACDE9C0>, <app.database.models.Group object at 0x00000216EACDEAD0>, <app.database.models.Group object at 0x00000216EACDEBE0>, <app.database.models.Group object at 0x00000216EACDECF0>, <app.database.models.Group object at 0x00000216EACDEE00>, <app.database.models.Group object at 0x00000216EACDEF10>, <app.database.models.Group object at 0x00000216EACDF020>, <app.database.models.Group object at 0x00000216EACDF130>, <app.database.models.Group object at 0x00000216EACDF240>, <app.database.models.Group object at 0x00000216EACDF350>, <app.database.models.Group object at 0x00000216EACDF460>, <app.database.models.Group object at 0x00000216EACDF570>, <app.database.models.Group object at 0x00000216EACDF680>, <app.database.models.Group object at 0x00000216EACDF790>, <app.database.models.Group object at 0x00000216EACDF8A0>, <app.database.models.Group object at 0x00000216EACDF9B0>, <app.database.models.Group object at 0x00000216EACDFAC0>, <app.database.models.Group object at 0x00000216EACDFBD0>, <app.database.models.Group object at 0x00000216EACDFCE0>, <app.database.models.Group object at 0x00000216EACDFDF0>, <app.database.models.Group object at 0x00000216EACDFF00>, <app.database.models.Group object at 0x00000216EADBC050>, <app.database.models.Group object at 0x00000216EADBC160>, <app.database.models.Group object at 0x00000216EADBC270>, <app.database.models.Group object at 0x00000216EADBC380>, <app.database.models.Group object at 0x00000216EADBC490>, <app.database.models.Group object at 0x00000216EADBC5A0>, <app.database.models.Group object at 0x00000216EADBC6B0>, <app.database.models.Group object at 0x00000216EADBC7C0>, <app.database.models.Group object at 0x00000216EADBC8D0>, <app.database.models.Group object at 0x00000216EADBC9E0>, <app.database.models.Group object at 0x00000216EADBCAF0>, <app.database.models.Group object at 0x00000216EADBCC00>, <app.database.models.Group object at 0x00000216EADBCD10>, <app.database.models.Group object at 0x00000216EADBCE20>, <app.database.models.Group object at 0x00000216EADBCF30>, <app.database.models.Group object at 0x00000216EADBD040>, <app.database.models.Group object at 0x00000216EADBD150>, <app.database.models.Group object at 0x00000216EADBD260>, <app.database.models.Group object at 0x00000216EADBD370>, <app.database.models.Group object at 0x00000216EADBD480>, <app.database.models.Group object at 0x00000216EADBD590>, <app.database.models.Group object at 0x00000216EADBD6A0>, <app.database.models.Group object at 0x00000216EADBD7B0>, <app.database.models.Group object at 0x00000216EADBD8C0>, <app.database.models.Group object at 0x00000216EADBD9D0>, <app.database.models.Group object at 0x00000216EADBDAE0>, <app.database.models.Group object at 0x00000216EADBDBF0>, <app.database.models.Group object at 0x00000216EADBDD00>]
2025-06-09 03:50:17,332 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-09 03:50:17,332 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-09 03:50:17,332 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-09 03:50:17,332 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-09 03:50:17,332 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-09 03:50:17,742 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-09 03:50:17,781 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-09 03:50:17,799 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-09 03:50:17,806 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-09 03:50:17,806 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1304.625642450340325045145159
2025-06-09 03:50:17,806 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=652.3128212251701625225725795
2025-06-09 03:50:17,806 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-09 03:50:17,806 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('652.3128212251701625225725795')], HighestMarginPerLot=652.3128212251701625225725795
2025-06-09 03:50:17,807 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1304.63, ContributingOrders=1 (based on individual stored margins)
2025-06-09 03:50:17,807 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=1304.63, AdditionalMargin=1304.63
2025-06-09 03:50:17,820 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=1304.63
2025-06-09 03:50:17,852 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '4413085717', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8922400000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1304.625642450340325045145159'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-09 03:50:18,064 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1304.63
2025-06-09 03:50:18,667 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-09 04:02:35,385 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 04:03:19,185 - INFO - orders - Close order request received - Order ID: 4413085717, User ID: 1, User Type: demo
2025-06-09 04:03:19,185 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-09 04:03:19,185 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000002048C05E990>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-09 04:03:19,185 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-09 04:03:19,185 - INFO - orders - Request to close order 4413085717 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-09 04:03:19,246 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-09 04:03:19,297 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-09 04:03:19,298 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 125): Type=BUY, Qty=2.00000000, StoredMargin=1304.62564245
2025-06-09 04:03:19,298 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=652.312821225
2025-06-09 04:03:19,298 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-09 04:03:19,298 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('652.312821225')], HighestMarginPerLot=652.312821225
2025-06-09 04:03:19,298 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1304.63, ContributingOrders=1 (based on individual stored margins)
2025-06-09 04:03:19,298 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-09 04:03:19,298 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-09 04:03:19,347 - INFO - orders - Existing entry commission for order 4413085717: 20.00000000
2025-06-09 04:03:19,347 - INFO - orders - Commission calculation for order 4413085717: entry=20.00000000, exit=20.000000000000, total=40.00
2025-06-09 04:03:19,349 - DEBUG - orders - Inverse conversion for PnL on Close: -448.000000000000000000000000 CAD / 1.3678300000 = -327.5260814574910624858352281 USD
2025-06-09 04:03:19,476 - app.api.v1.endpoints.orders - INFO - Updated user data cache with fresh values after closing order: balance=97395.21000000, margin=0
2025-06-09 04:03:19,570 - INFO - orders - Updated portfolio cache for user 1 after closing order
2025-06-09 04:24:36,465 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 04:26:01,780 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-09 04:26:01,803 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000010C476F0C00>, <app.database.models.Group object at 0x0000010C476F0E20>, <app.database.models.Group object at 0x0000010C476F1260>, <app.database.models.Group object at 0x0000010C476F1150>, <app.database.models.Group object at 0x0000010C476F1040>, <app.database.models.Group object at 0x0000010C476F0F30>, <app.database.models.Group object at 0x0000010C476F1370>, <app.database.models.Group object at 0x0000010C476F1480>, <app.database.models.Group object at 0x0000010C476F1590>, <app.database.models.Group object at 0x0000010C476F16A0>, <app.database.models.Group object at 0x0000010C476F17B0>, <app.database.models.Group object at 0x0000010C476F18C0>, <app.database.models.Group object at 0x0000010C476F19D0>, <app.database.models.Group object at 0x0000010C476F1AE0>, <app.database.models.Group object at 0x0000010C476F1BF0>, <app.database.models.Group object at 0x0000010C476F1D00>, <app.database.models.Group object at 0x0000010C476F1E10>, <app.database.models.Group object at 0x0000010C476F1F20>, <app.database.models.Group object at 0x0000010C476F2030>, <app.database.models.Group object at 0x0000010C476F2140>, <app.database.models.Group object at 0x0000010C476F2250>, <app.database.models.Group object at 0x0000010C476F2360>, <app.database.models.Group object at 0x0000010C476F2470>, <app.database.models.Group object at 0x0000010C476F2580>, <app.database.models.Group object at 0x0000010C476F2690>, <app.database.models.Group object at 0x0000010C476F27A0>, <app.database.models.Group object at 0x0000010C476F28B0>, <app.database.models.Group object at 0x0000010C476F29C0>, <app.database.models.Group object at 0x0000010C476F2AD0>, <app.database.models.Group object at 0x0000010C476F2BE0>, <app.database.models.Group object at 0x0000010C476F2CF0>, <app.database.models.Group object at 0x0000010C476F2E00>, <app.database.models.Group object at 0x0000010C476F2F10>, <app.database.models.Group object at 0x0000010C476F3020>, <app.database.models.Group object at 0x0000010C476F3130>, <app.database.models.Group object at 0x0000010C476F3240>, <app.database.models.Group object at 0x0000010C476F3350>, <app.database.models.Group object at 0x0000010C476F3460>, <app.database.models.Group object at 0x0000010C476F3570>, <app.database.models.Group object at 0x0000010C476F3680>, <app.database.models.Group object at 0x0000010C476F3790>, <app.database.models.Group object at 0x0000010C476F38A0>, <app.database.models.Group object at 0x0000010C476F39B0>, <app.database.models.Group object at 0x0000010C476F3AC0>, <app.database.models.Group object at 0x0000010C476F3BD0>, <app.database.models.Group object at 0x0000010C476F3CE0>, <app.database.models.Group object at 0x0000010C476F3DF0>, <app.database.models.Group object at 0x0000010C476F3F00>, <app.database.models.Group object at 0x0000010C47824050>, <app.database.models.Group object at 0x0000010C47824160>, <app.database.models.Group object at 0x0000010C47824270>, <app.database.models.Group object at 0x0000010C47824380>, <app.database.models.Group object at 0x0000010C47824490>, <app.database.models.Group object at 0x0000010C478245A0>, <app.database.models.Group object at 0x0000010C478246B0>, <app.database.models.Group object at 0x0000010C478247C0>, <app.database.models.Group object at 0x0000010C478248D0>, <app.database.models.Group object at 0x0000010C478249E0>, <app.database.models.Group object at 0x0000010C47824AF0>, <app.database.models.Group object at 0x0000010C47824C00>, <app.database.models.Group object at 0x0000010C47824D10>, <app.database.models.Group object at 0x0000010C47824E20>, <app.database.models.Group object at 0x0000010C47824F30>, <app.database.models.Group object at 0x0000010C47825040>, <app.database.models.Group object at 0x0000010C47825150>, <app.database.models.Group object at 0x0000010C47825260>, <app.database.models.Group object at 0x0000010C47825370>, <app.database.models.Group object at 0x0000010C47825480>, <app.database.models.Group object at 0x0000010C47825590>, <app.database.models.Group object at 0x0000010C478256A0>, <app.database.models.Group object at 0x0000010C478257B0>, <app.database.models.Group object at 0x0000010C478258C0>, <app.database.models.Group object at 0x0000010C478259D0>, <app.database.models.Group object at 0x0000010C47825AE0>, <app.database.models.Group object at 0x0000010C47825BF0>, <app.database.models.Group object at 0x0000010C47825D00>, <app.database.models.Group object at 0x0000010C47825E10>, <app.database.models.Group object at 0x0000010C47825F20>, <app.database.models.Group object at 0x0000010C47826030>]
2025-06-09 04:26:01,803 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-09 04:26:01,803 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-09 04:26:01,804 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-09 04:26:01,804 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-09 04:26:01,804 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-09 04:26:02,570 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-09 04:26:02,578 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-09 04:26:02,578 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-09 04:26:02,578 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-09 04:26:02,579 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1304.710174063703952803222481
2025-06-09 04:26:02,579 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=652.3550870318519764016112405
2025-06-09 04:26:02,579 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-09 04:26:02,579 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('652.3550870318519764016112405')], HighestMarginPerLot=652.3550870318519764016112405
2025-06-09 04:26:02,579 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1304.71, ContributingOrders=1 (based on individual stored margins)
2025-06-09 04:26:02,579 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=1304.71, AdditionalMargin=1304.71
2025-06-09 04:26:02,609 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=1304.71
2025-06-09 04:26:02,731 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '7887070467', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8923500000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1304.710174063703952803222481'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-09 04:26:02,874 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1304.71
2025-06-09 04:26:03,827 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-09 04:41:05,148 - INFO - orders - Application starting up - Orders logging initialized
2025-06-09 05:03:48,137 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 00:56:48,813 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 01:05:36,868 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 01:39:05,150 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 01:42:14,979 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 01:55:50,770 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 01:57:20,707 - INFO - orders - Close order request received - Order ID: 3942872751, User ID: 1, User Type: demo
2025-06-10 01:57:20,708 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-10 01:57:20,708 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000270F04E49D0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-10 01:57:20,708 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-10 01:57:20,709 - INFO - orders - Request to close order 3942872751 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-10 01:57:20,746 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-10 01:57:20,776 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 01:57:20,777 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 144): Type=BUY, Qty=2.00000000, StoredMargin=1299.85424865
2025-06-10 01:57:20,777 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=649.927124325
2025-06-10 01:57:20,777 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-10 01:57:20,777 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.927124325')], HighestMarginPerLot=649.927124325
2025-06-10 01:57:20,777 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1299.85, ContributingOrders=1 (based on individual stored margins)
2025-06-10 01:57:20,777 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 01:57:20,777 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 01:57:20,816 - INFO - orders - Existing entry commission for order 3942872751: 20.00000000
2025-06-10 01:57:20,816 - INFO - orders - Commission calculation for order 3942872751: entry=20.00000000, exit=20.000000000000, total=40.00
2025-06-10 01:57:20,818 - DEBUG - orders - Inverse conversion for PnL on Close: -366.000000000000000000000000 CAD / 1.3709300000 = -266.9720554659975345203620900 USD
2025-06-10 02:08:27,420 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 02:15:48,954 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 02:19:43,386 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 02:21:01,921 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 02:23:30,342 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-10 02:23:30,382 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x00000258B2858050>, <app.database.models.Group object at 0x00000258B28586B0>, <app.database.models.Group object at 0x00000258B28587C0>, <app.database.models.Group object at 0x00000258B28588D0>, <app.database.models.Group object at 0x00000258B28589E0>, <app.database.models.Group object at 0x00000258B2858AF0>, <app.database.models.Group object at 0x00000258B2858C00>, <app.database.models.Group object at 0x00000258B2858D10>, <app.database.models.Group object at 0x00000258B2858E20>, <app.database.models.Group object at 0x00000258B2858F30>, <app.database.models.Group object at 0x00000258B2859040>, <app.database.models.Group object at 0x00000258B2859150>, <app.database.models.Group object at 0x00000258B2859260>, <app.database.models.Group object at 0x00000258B2859370>, <app.database.models.Group object at 0x00000258B2859480>, <app.database.models.Group object at 0x00000258B2859590>, <app.database.models.Group object at 0x00000258B28596A0>, <app.database.models.Group object at 0x00000258B28597B0>, <app.database.models.Group object at 0x00000258B28598C0>, <app.database.models.Group object at 0x00000258B28599D0>, <app.database.models.Group object at 0x00000258B2859AE0>, <app.database.models.Group object at 0x00000258B2859BF0>, <app.database.models.Group object at 0x00000258B2859D00>, <app.database.models.Group object at 0x00000258B2859E10>, <app.database.models.Group object at 0x00000258B2859F20>, <app.database.models.Group object at 0x00000258B285A030>, <app.database.models.Group object at 0x00000258B285A140>, <app.database.models.Group object at 0x00000258B285A250>, <app.database.models.Group object at 0x00000258B285A360>, <app.database.models.Group object at 0x00000258B285A470>, <app.database.models.Group object at 0x00000258B285A580>, <app.database.models.Group object at 0x00000258B285A690>, <app.database.models.Group object at 0x00000258B285A7A0>, <app.database.models.Group object at 0x00000258B285A8B0>, <app.database.models.Group object at 0x00000258B285A9C0>, <app.database.models.Group object at 0x00000258B285AAD0>, <app.database.models.Group object at 0x00000258B285ABE0>, <app.database.models.Group object at 0x00000258B285ACF0>, <app.database.models.Group object at 0x00000258B285AE00>, <app.database.models.Group object at 0x00000258B285AF10>, <app.database.models.Group object at 0x00000258B285B020>, <app.database.models.Group object at 0x00000258B285B130>, <app.database.models.Group object at 0x00000258B285B240>, <app.database.models.Group object at 0x00000258B285B350>, <app.database.models.Group object at 0x00000258B285B460>, <app.database.models.Group object at 0x00000258B285B570>, <app.database.models.Group object at 0x00000258B285B680>, <app.database.models.Group object at 0x00000258B285B790>, <app.database.models.Group object at 0x00000258B285B8A0>, <app.database.models.Group object at 0x00000258B285B9B0>, <app.database.models.Group object at 0x00000258B285BAC0>, <app.database.models.Group object at 0x00000258B285BBD0>, <app.database.models.Group object at 0x00000258B285BCE0>, <app.database.models.Group object at 0x00000258B285BDF0>, <app.database.models.Group object at 0x00000258B285BF00>, <app.database.models.Group object at 0x00000258B2AC4050>, <app.database.models.Group object at 0x00000258B2AC4160>, <app.database.models.Group object at 0x00000258B2AC4270>, <app.database.models.Group object at 0x00000258B2AC4380>, <app.database.models.Group object at 0x00000258B2AC4490>, <app.database.models.Group object at 0x00000258B2AC45A0>, <app.database.models.Group object at 0x00000258B2AC46B0>, <app.database.models.Group object at 0x00000258B2AC47C0>, <app.database.models.Group object at 0x00000258B2AC48D0>, <app.database.models.Group object at 0x00000258B2AC49E0>, <app.database.models.Group object at 0x00000258B2AC4AF0>, <app.database.models.Group object at 0x00000258B2AC4C00>, <app.database.models.Group object at 0x00000258B2AC4D10>, <app.database.models.Group object at 0x00000258B2AC4E20>, <app.database.models.Group object at 0x00000258B2AC4F30>, <app.database.models.Group object at 0x00000258B2AC5040>, <app.database.models.Group object at 0x00000258B2AC5150>, <app.database.models.Group object at 0x00000258B2AC5260>, <app.database.models.Group object at 0x00000258B2AC5370>, <app.database.models.Group object at 0x00000258B2AC5480>, <app.database.models.Group object at 0x00000258B2AC5590>, <app.database.models.Group object at 0x00000258B2AC56A0>, <app.database.models.Group object at 0x00000258B2AC57B0>, <app.database.models.Group object at 0x00000258B2AC58C0>]
2025-06-10 02:23:30,383 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-10 02:23:30,383 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-10 02:23:30,383 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-10 02:23:30,384 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-10 02:23:30,386 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-10 02:23:31,074 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-10 02:23:31,083 - app.services.order_processing - ERROR - Error processing new order: calculate_total_symbol_margin_contribution() takes from 5 to 6 positional arguments but 7 were given
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 205, in process_new_order
    margin_before_data = await calculate_total_symbol_margin_contribution(
                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        db, redis_client, user_id, symbol, open_orders_for_symbol, user_type, order_model
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_total_symbol_margin_contribution() takes from 5 to 6 positional arguments but 7 were given
2025-06-10 02:23:31,118 - ERROR - orders - Order processing error: Failed to process order: calculate_total_symbol_margin_contribution() takes from 5 to 6 positional arguments but 7 were given
2025-06-10 02:31:09,916 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 02:31:41,947 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-10 02:31:41,963 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001B99E5D4C00>, <app.database.models.Group object at 0x000001B99E5D4490>, <app.database.models.Group object at 0x000001B99E5D4380>, <app.database.models.Group object at 0x000001B99E5D4270>, <app.database.models.Group object at 0x000001B99E5D48D0>, <app.database.models.Group object at 0x000001B99E5D4AF0>, <app.database.models.Group object at 0x000001B99E5D4D10>, <app.database.models.Group object at 0x000001B99E5D4E20>, <app.database.models.Group object at 0x000001B99E5D4F30>, <app.database.models.Group object at 0x000001B99E5D5040>, <app.database.models.Group object at 0x000001B99E5D5150>, <app.database.models.Group object at 0x000001B99E5D5260>, <app.database.models.Group object at 0x000001B99E5D5370>, <app.database.models.Group object at 0x000001B99E5D5480>, <app.database.models.Group object at 0x000001B99E5D5590>, <app.database.models.Group object at 0x000001B99E5D56A0>, <app.database.models.Group object at 0x000001B99E5D57B0>, <app.database.models.Group object at 0x000001B99E5D58C0>, <app.database.models.Group object at 0x000001B99E5D59D0>, <app.database.models.Group object at 0x000001B99E5D5AE0>, <app.database.models.Group object at 0x000001B99E5D5BF0>, <app.database.models.Group object at 0x000001B99E5D5D00>, <app.database.models.Group object at 0x000001B99E5D5E10>, <app.database.models.Group object at 0x000001B99E5D5F20>, <app.database.models.Group object at 0x000001B99E5D6030>, <app.database.models.Group object at 0x000001B99E5D6140>, <app.database.models.Group object at 0x000001B99E5D6250>, <app.database.models.Group object at 0x000001B99E5D6360>, <app.database.models.Group object at 0x000001B99E5D6470>, <app.database.models.Group object at 0x000001B99E5D6580>, <app.database.models.Group object at 0x000001B99E5D6690>, <app.database.models.Group object at 0x000001B99E5D67A0>, <app.database.models.Group object at 0x000001B99E5D68B0>, <app.database.models.Group object at 0x000001B99E5D69C0>, <app.database.models.Group object at 0x000001B99E5D6AD0>, <app.database.models.Group object at 0x000001B99E5D6BE0>, <app.database.models.Group object at 0x000001B99E5D6CF0>, <app.database.models.Group object at 0x000001B99E5D6E00>, <app.database.models.Group object at 0x000001B99E5D6F10>, <app.database.models.Group object at 0x000001B99E5D7020>, <app.database.models.Group object at 0x000001B99E5D7130>, <app.database.models.Group object at 0x000001B99E5D7240>, <app.database.models.Group object at 0x000001B99E5D7350>, <app.database.models.Group object at 0x000001B99E5D7460>, <app.database.models.Group object at 0x000001B99E5D7570>, <app.database.models.Group object at 0x000001B99E5D7680>, <app.database.models.Group object at 0x000001B99E5D7790>, <app.database.models.Group object at 0x000001B99E5D78A0>, <app.database.models.Group object at 0x000001B99E5D79B0>, <app.database.models.Group object at 0x000001B99E5D7AC0>, <app.database.models.Group object at 0x000001B99E5D7BD0>, <app.database.models.Group object at 0x000001B99E5D7CE0>, <app.database.models.Group object at 0x000001B99E5D7DF0>, <app.database.models.Group object at 0x000001B99E5D7F00>, <app.database.models.Group object at 0x000001B99E694050>, <app.database.models.Group object at 0x000001B99E694160>, <app.database.models.Group object at 0x000001B99E694270>, <app.database.models.Group object at 0x000001B99E694380>, <app.database.models.Group object at 0x000001B99E694490>, <app.database.models.Group object at 0x000001B99E6945A0>, <app.database.models.Group object at 0x000001B99E6946B0>, <app.database.models.Group object at 0x000001B99E6947C0>, <app.database.models.Group object at 0x000001B99E6948D0>, <app.database.models.Group object at 0x000001B99E6949E0>, <app.database.models.Group object at 0x000001B99E694AF0>, <app.database.models.Group object at 0x000001B99E694C00>, <app.database.models.Group object at 0x000001B99E694D10>, <app.database.models.Group object at 0x000001B99E694E20>, <app.database.models.Group object at 0x000001B99E694F30>, <app.database.models.Group object at 0x000001B99E695040>, <app.database.models.Group object at 0x000001B99E695150>, <app.database.models.Group object at 0x000001B99E695260>, <app.database.models.Group object at 0x000001B99E695370>, <app.database.models.Group object at 0x000001B99E695480>, <app.database.models.Group object at 0x000001B99E695590>, <app.database.models.Group object at 0x000001B99E6956A0>, <app.database.models.Group object at 0x000001B99E6957B0>, <app.database.models.Group object at 0x000001B99E6958C0>, <app.database.models.Group object at 0x000001B99E6959D0>]
2025-06-10 02:31:41,965 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-10 02:31:41,966 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-10 02:31:41,967 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-10 02:31:41,968 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-10 02:31:41,968 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-10 02:31:42,335 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-10 02:31:42,341 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 02:31:42,342 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 02:31:42,342 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 02:31:42,342 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1302.448419762453672629643681
2025-06-10 02:31:42,342 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.2242098812268363148218405
2025-06-10 02:31:42,342 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-10 02:31:42,342 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.2242098812268363148218405')], HighestMarginPerLot=651.2242098812268363148218405
2025-06-10 02:31:42,342 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1302.45, ContributingOrders=1 (based on individual stored margins)
2025-06-10 02:31:42,343 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=1302.45, AdditionalMargin=1302.45
2025-06-10 02:31:42,354 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=1302.45
2025-06-10 02:31:42,423 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '5244677083', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8926200000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1302.448419762453672629643681'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-10 02:31:42,465 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1302.45000000
2025-06-10 02:31:42,577 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-10 02:32:23,553 - INFO - orders - Close order request received - Order ID: 5244677083, User ID: 1, User Type: demo
2025-06-10 02:32:23,553 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-10 02:32:23,553 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001B99E6BC9D0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-10 02:32:23,553 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-10 02:32:23,553 - INFO - orders - Request to close order 5244677083 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-10 02:32:23,587 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-10 02:32:23,607 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 02:32:23,608 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 145): Type=BUY, Qty=2.00000000, StoredMargin=1302.44841976
2025-06-10 02:32:23,608 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.22420988
2025-06-10 02:32:23,608 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-10 02:32:23,608 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.22420988')], HighestMarginPerLot=651.22420988
2025-06-10 02:32:23,609 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1302.45, ContributingOrders=1 (based on individual stored margins)
2025-06-10 02:32:23,609 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 02:32:23,609 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 02:32:23,628 - INFO - orders - Existing entry commission for order 5244677083: 20.00000000
2025-06-10 02:32:23,628 - INFO - orders - Commission calculation for order 5244677083: entry=20.00000000, exit=20.000000000000, total=40.00
2025-06-10 02:32:23,633 - DEBUG - orders - Inverse conversion for PnL on Close: -524.000000000000000000000000 CAD / 1.3704800000 = -382.3477905551339676609655011 USD
2025-06-10 02:39:41,721 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 02:41:23,426 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 02:43:57,437 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 02:45:28,496 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-10 02:45:28,551 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000019EF3A14160>, <app.database.models.Group object at 0x0000019EF3A145A0>, <app.database.models.Group object at 0x0000019EF3A14270>, <app.database.models.Group object at 0x0000019EF3A14490>, <app.database.models.Group object at 0x0000019EF3A146B0>, <app.database.models.Group object at 0x0000019EF3A147C0>, <app.database.models.Group object at 0x0000019EF3A148D0>, <app.database.models.Group object at 0x0000019EF3A149E0>, <app.database.models.Group object at 0x0000019EF3A14AF0>, <app.database.models.Group object at 0x0000019EF3A14C00>, <app.database.models.Group object at 0x0000019EF3A14D10>, <app.database.models.Group object at 0x0000019EF3A14E20>, <app.database.models.Group object at 0x0000019EF3A14F30>, <app.database.models.Group object at 0x0000019EF3A15040>, <app.database.models.Group object at 0x0000019EF3A15150>, <app.database.models.Group object at 0x0000019EF3A15260>, <app.database.models.Group object at 0x0000019EF3A15370>, <app.database.models.Group object at 0x0000019EF3A15480>, <app.database.models.Group object at 0x0000019EF3A15590>, <app.database.models.Group object at 0x0000019EF3A156A0>, <app.database.models.Group object at 0x0000019EF3A157B0>, <app.database.models.Group object at 0x0000019EF3A158C0>, <app.database.models.Group object at 0x0000019EF3A159D0>, <app.database.models.Group object at 0x0000019EF3A15AE0>, <app.database.models.Group object at 0x0000019EF3A15BF0>, <app.database.models.Group object at 0x0000019EF3A15D00>, <app.database.models.Group object at 0x0000019EF3A15E10>, <app.database.models.Group object at 0x0000019EF3A15F20>, <app.database.models.Group object at 0x0000019EF3A16030>, <app.database.models.Group object at 0x0000019EF3A16140>, <app.database.models.Group object at 0x0000019EF3A16250>, <app.database.models.Group object at 0x0000019EF3A16360>, <app.database.models.Group object at 0x0000019EF3A16470>, <app.database.models.Group object at 0x0000019EF3A16580>, <app.database.models.Group object at 0x0000019EF3A16690>, <app.database.models.Group object at 0x0000019EF3A167A0>, <app.database.models.Group object at 0x0000019EF3A168B0>, <app.database.models.Group object at 0x0000019EF3A169C0>, <app.database.models.Group object at 0x0000019EF3A16AD0>, <app.database.models.Group object at 0x0000019EF3A16BE0>, <app.database.models.Group object at 0x0000019EF3A16CF0>, <app.database.models.Group object at 0x0000019EF3A16E00>, <app.database.models.Group object at 0x0000019EF3A16F10>, <app.database.models.Group object at 0x0000019EF3A17020>, <app.database.models.Group object at 0x0000019EF3A17130>, <app.database.models.Group object at 0x0000019EF3A17240>, <app.database.models.Group object at 0x0000019EF3A17350>, <app.database.models.Group object at 0x0000019EF3A17460>, <app.database.models.Group object at 0x0000019EF3A17570>, <app.database.models.Group object at 0x0000019EF3A17680>, <app.database.models.Group object at 0x0000019EF3A17790>, <app.database.models.Group object at 0x0000019EF3A178A0>, <app.database.models.Group object at 0x0000019EF3A179B0>, <app.database.models.Group object at 0x0000019EF3A17AC0>, <app.database.models.Group object at 0x0000019EF3A17BD0>, <app.database.models.Group object at 0x0000019EF3A17CE0>, <app.database.models.Group object at 0x0000019EF3A17DF0>, <app.database.models.Group object at 0x0000019EF3A17F00>, <app.database.models.Group object at 0x0000019EF3AD4050>, <app.database.models.Group object at 0x0000019EF3AD4160>, <app.database.models.Group object at 0x0000019EF3AD4270>, <app.database.models.Group object at 0x0000019EF3AD4380>, <app.database.models.Group object at 0x0000019EF3AD4490>, <app.database.models.Group object at 0x0000019EF3AD45A0>, <app.database.models.Group object at 0x0000019EF3AD46B0>, <app.database.models.Group object at 0x0000019EF3AD47C0>, <app.database.models.Group object at 0x0000019EF3AD48D0>, <app.database.models.Group object at 0x0000019EF3AD49E0>, <app.database.models.Group object at 0x0000019EF3AD4AF0>, <app.database.models.Group object at 0x0000019EF3AD4C00>, <app.database.models.Group object at 0x0000019EF3AD4D10>, <app.database.models.Group object at 0x0000019EF3AD4E20>, <app.database.models.Group object at 0x0000019EF3AD4F30>, <app.database.models.Group object at 0x0000019EF3AD5040>, <app.database.models.Group object at 0x0000019EF3AD5150>, <app.database.models.Group object at 0x0000019EF3AD5260>, <app.database.models.Group object at 0x0000019EF3AD5370>, <app.database.models.Group object at 0x0000019EF3AD5480>, <app.database.models.Group object at 0x0000019EF3AD5590>]
2025-06-10 02:45:28,554 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-10 02:45:28,554 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-10 02:45:28,555 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-10 02:45:28,555 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-10 02:45:28,555 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-10 02:45:29,323 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-10 02:45:29,348 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 02:45:29,348 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 02:45:29,348 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 02:45:29,349 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1302.783088396258081464076706
2025-06-10 02:45:29,349 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.391544198129040732038353
2025-06-10 02:45:29,349 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-10 02:45:29,349 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.391544198129040732038353')], HighestMarginPerLot=651.391544198129040732038353
2025-06-10 02:45:29,349 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1302.78, ContributingOrders=1 (based on individual stored margins)
2025-06-10 02:45:29,350 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=1302.78, AdditionalMargin=1302.78
2025-06-10 02:45:29,364 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=1302.78
2025-06-10 02:45:29,479 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '6608252101', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8926800000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1302.783088396258081464076706'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-10 02:45:29,603 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1302.78000000
2025-06-10 02:45:29,643 - ERROR - orders - Error updating user data cache after order placement: cannot access local variable 'crud_user' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 352, in place_order
    db_user = await crud_user.get_demo_user_by_id(db, user_id)
                    ^^^^^^^^^
UnboundLocalError: cannot access local variable 'crud_user' where it is not associated with a value
2025-06-10 02:45:30,231 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-10 02:46:00,949 - INFO - orders - Close order request received - Order ID: 6608252101, User ID: 1, User Type: demo
2025-06-10 02:46:00,949 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-10 02:46:00,950 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000019EF3945BD0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-10 02:46:00,950 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-10 02:46:00,950 - INFO - orders - Request to close order 6608252101 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-10 02:46:00,997 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-10 02:46:01,032 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 02:46:01,033 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 146): Type=BUY, Qty=2.00000000, StoredMargin=1302.78308840
2025-06-10 02:46:01,033 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.3915442
2025-06-10 02:46:01,033 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-10 02:46:01,035 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.3915442')], HighestMarginPerLot=651.3915442
2025-06-10 02:46:01,036 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1302.78, ContributingOrders=1 (based on individual stored margins)
2025-06-10 02:46:01,036 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 02:46:01,037 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 02:46:01,078 - INFO - orders - Existing entry commission for order 6608252101: 20.00000000
2025-06-10 02:46:01,079 - INFO - orders - Commission calculation for order 6608252101: entry=20.00000000, exit=20.000000000000, total=40.00
2025-06-10 02:46:01,088 - DEBUG - orders - Inverse conversion for PnL on Close: -536.000000000000000000000000 CAD / 1.3704100000 = -391.1238242569741902058508038 USD
2025-06-10 02:58:08,258 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 03:06:32,799 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 03:07:03,966 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-10 03:07:04,026 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001C0DD385040>, <app.database.models.Group object at 0x000001C0DD385260>, <app.database.models.Group object at 0x000001C0DD385370>, <app.database.models.Group object at 0x000001C0DD385480>, <app.database.models.Group object at 0x000001C0DD385590>, <app.database.models.Group object at 0x000001C0DD3856A0>, <app.database.models.Group object at 0x000001C0DD3857B0>, <app.database.models.Group object at 0x000001C0DD3858C0>, <app.database.models.Group object at 0x000001C0DD3859D0>, <app.database.models.Group object at 0x000001C0DD385AE0>, <app.database.models.Group object at 0x000001C0DD385BF0>, <app.database.models.Group object at 0x000001C0DD385D00>, <app.database.models.Group object at 0x000001C0DD385E10>, <app.database.models.Group object at 0x000001C0DD385F20>, <app.database.models.Group object at 0x000001C0DD386030>, <app.database.models.Group object at 0x000001C0DD386140>, <app.database.models.Group object at 0x000001C0DD386250>, <app.database.models.Group object at 0x000001C0DD386360>, <app.database.models.Group object at 0x000001C0DD386470>, <app.database.models.Group object at 0x000001C0DD386580>, <app.database.models.Group object at 0x000001C0DD386690>, <app.database.models.Group object at 0x000001C0DD3867A0>, <app.database.models.Group object at 0x000001C0DD3868B0>, <app.database.models.Group object at 0x000001C0DD3869C0>, <app.database.models.Group object at 0x000001C0DD386AD0>, <app.database.models.Group object at 0x000001C0DD386BE0>, <app.database.models.Group object at 0x000001C0DD386CF0>, <app.database.models.Group object at 0x000001C0DD386E00>, <app.database.models.Group object at 0x000001C0DD386F10>, <app.database.models.Group object at 0x000001C0DD387020>, <app.database.models.Group object at 0x000001C0DD387130>, <app.database.models.Group object at 0x000001C0DD387240>, <app.database.models.Group object at 0x000001C0DD387350>, <app.database.models.Group object at 0x000001C0DD387460>, <app.database.models.Group object at 0x000001C0DD387570>, <app.database.models.Group object at 0x000001C0DD387680>, <app.database.models.Group object at 0x000001C0DD387790>, <app.database.models.Group object at 0x000001C0DD3878A0>, <app.database.models.Group object at 0x000001C0DD3879B0>, <app.database.models.Group object at 0x000001C0DD387AC0>, <app.database.models.Group object at 0x000001C0DD387BD0>, <app.database.models.Group object at 0x000001C0DD387DF0>, <app.database.models.Group object at 0x000001C0DD085590>, <app.database.models.Group object at 0x000001C0DD087130>, <app.database.models.Group object at 0x000001C0DD087350>, <app.database.models.Group object at 0x000001C0DD086E00>, <app.database.models.Group object at 0x000001C0DD087240>, <app.database.models.Group object at 0x000001C0DD087460>, <app.database.models.Group object at 0x000001C0DD087570>, <app.database.models.Group object at 0x000001C0DD087680>, <app.database.models.Group object at 0x000001C0DD087790>, <app.database.models.Group object at 0x000001C0DD0878A0>, <app.database.models.Group object at 0x000001C0DD0879B0>, <app.database.models.Group object at 0x000001C0DD087AC0>, <app.database.models.Group object at 0x000001C0DD087BD0>, <app.database.models.Group object at 0x000001C0DD087CE0>, <app.database.models.Group object at 0x000001C0DD087DF0>, <app.database.models.Group object at 0x000001C0DD087F00>, <app.database.models.Group object at 0x000001C0DD086140>, <app.database.models.Group object at 0x000001C0DD085F20>, <app.database.models.Group object at 0x000001C0DD086030>, <app.database.models.Group object at 0x000001C0DD448050>, <app.database.models.Group object at 0x000001C0DD448160>, <app.database.models.Group object at 0x000001C0DD448270>, <app.database.models.Group object at 0x000001C0DD448380>, <app.database.models.Group object at 0x000001C0DD448490>, <app.database.models.Group object at 0x000001C0DD4485A0>, <app.database.models.Group object at 0x000001C0DD4486B0>, <app.database.models.Group object at 0x000001C0DD4487C0>, <app.database.models.Group object at 0x000001C0DD4488D0>, <app.database.models.Group object at 0x000001C0DD4489E0>, <app.database.models.Group object at 0x000001C0DD448AF0>, <app.database.models.Group object at 0x000001C0DD448C00>, <app.database.models.Group object at 0x000001C0DD448D10>, <app.database.models.Group object at 0x000001C0DD448E20>, <app.database.models.Group object at 0x000001C0DD448F30>, <app.database.models.Group object at 0x000001C0DD449040>, <app.database.models.Group object at 0x000001C0DD449150>, <app.database.models.Group object at 0x000001C0DD449260>]
2025-06-10 03:07:04,027 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-10 03:07:04,027 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-10 03:07:04,027 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-10 03:07:04,027 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-10 03:07:04,028 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-10 03:07:04,483 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-10 03:07:04,529 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 03:07:04,529 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 03:07:04,530 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 03:07:04,530 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1303.748585611563309851443589
2025-06-10 03:07:04,530 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.8742928057816549257217945
2025-06-10 03:07:04,530 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-10 03:07:04,530 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.8742928057816549257217945')], HighestMarginPerLot=651.8742928057816549257217945
2025-06-10 03:07:04,530 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1303.75, ContributingOrders=1 (based on individual stored margins)
2025-06-10 03:07:04,530 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=1303.75, AdditionalMargin=1303.75
2025-06-10 03:07:04,574 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=1303.75
2025-06-10 03:07:04,796 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '5706855236', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8929700000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1303.748585611563309851443589'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-10 03:07:04,972 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1303.75000000
2025-06-10 03:07:05,054 - ERROR - orders - Error updating user data cache after order placement: cannot access local variable 'crud_user' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 400, in place_order
    db_user = await crud_user.get_demo_user_by_id(db, user_id)
                    ^^^^^^^^^
UnboundLocalError: cannot access local variable 'crud_user' where it is not associated with a value
2025-06-10 03:07:05,420 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-10 03:07:05,713 - INFO - orders - Updated static orders cache for user 1
2025-06-10 03:07:24,391 - INFO - orders - Close order request received - Order ID: 5706855236, User ID: 1, User Type: demo
2025-06-10 03:07:24,391 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-10 03:07:24,391 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001C0DD245E50>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-10 03:07:24,391 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-10 03:07:24,392 - INFO - orders - Request to close order 5706855236 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-10 03:07:24,424 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-10 03:07:24,479 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 03:07:24,479 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 147): Type=BUY, Qty=2.00000000, StoredMargin=1303.74858561
2025-06-10 03:07:24,480 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.874292805
2025-06-10 03:07:24,480 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-10 03:07:24,480 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.874292805')], HighestMarginPerLot=651.874292805
2025-06-10 03:07:24,480 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1303.75, ContributingOrders=1 (based on individual stored margins)
2025-06-10 03:07:24,480 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 03:07:24,481 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 03:07:24,523 - INFO - orders - Existing entry commission for order 5706855236: 20.00000000
2025-06-10 03:07:24,523 - INFO - orders - Commission calculation for order 5706855236: entry=20.00000000, exit=20.000000000000, total=40.00
2025-06-10 03:07:24,526 - DEBUG - orders - Inverse conversion for PnL on Close: -594.000000000000000000000000 CAD / 1.3696700000 = -433.6811056677885914125300255 USD
2025-06-10 03:20:15,301 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 03:21:27,468 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-10 03:21:27,483 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000027F7FA27F00>, <app.database.models.Group object at 0x0000027F7FA27130>, <app.database.models.Group object at 0x0000027F7FA25370>, <app.database.models.Group object at 0x0000027F7FA27AC0>, <app.database.models.Group object at 0x0000027F7FA27DF0>, <app.database.models.Group object at 0x0000027F7FA279B0>, <app.database.models.Group object at 0x0000027F7FE68050>, <app.database.models.Group object at 0x0000027F7FE68D10>, <app.database.models.Group object at 0x0000027F7FE68C00>, <app.database.models.Group object at 0x0000027F7FE68AF0>, <app.database.models.Group object at 0x0000027F7FE68F30>, <app.database.models.Group object at 0x0000027F7FE69040>, <app.database.models.Group object at 0x0000027F7FE69150>, <app.database.models.Group object at 0x0000027F7FE69260>, <app.database.models.Group object at 0x0000027F7FE69370>, <app.database.models.Group object at 0x0000027F7FE69480>, <app.database.models.Group object at 0x0000027F7FE69590>, <app.database.models.Group object at 0x0000027F7FE696A0>, <app.database.models.Group object at 0x0000027F7FE697B0>, <app.database.models.Group object at 0x0000027F7FE698C0>, <app.database.models.Group object at 0x0000027F7FE699D0>, <app.database.models.Group object at 0x0000027F7FE69AE0>, <app.database.models.Group object at 0x0000027F7FE69BF0>, <app.database.models.Group object at 0x0000027F7FE69D00>, <app.database.models.Group object at 0x0000027F7FE69E10>, <app.database.models.Group object at 0x0000027F7FE69F20>, <app.database.models.Group object at 0x0000027F7FE6A030>, <app.database.models.Group object at 0x0000027F7FE6A140>, <app.database.models.Group object at 0x0000027F7FE6A250>, <app.database.models.Group object at 0x0000027F7FE6A360>, <app.database.models.Group object at 0x0000027F7FE6A470>, <app.database.models.Group object at 0x0000027F7FE6A580>, <app.database.models.Group object at 0x0000027F7FE6A690>, <app.database.models.Group object at 0x0000027F7FE6A7A0>, <app.database.models.Group object at 0x0000027F7FE6A8B0>, <app.database.models.Group object at 0x0000027F7FE6A9C0>, <app.database.models.Group object at 0x0000027F7FE6AAD0>, <app.database.models.Group object at 0x0000027F7FE6ABE0>, <app.database.models.Group object at 0x0000027F7FE6ACF0>, <app.database.models.Group object at 0x0000027F7FE6AE00>, <app.database.models.Group object at 0x0000027F7FE6AF10>, <app.database.models.Group object at 0x0000027F7FE6B020>, <app.database.models.Group object at 0x0000027F7FE6B130>, <app.database.models.Group object at 0x0000027F7FE6B240>, <app.database.models.Group object at 0x0000027F7FE6B350>, <app.database.models.Group object at 0x0000027F7FE6B460>, <app.database.models.Group object at 0x0000027F7FE6B570>, <app.database.models.Group object at 0x0000027F7FE6B680>, <app.database.models.Group object at 0x0000027F7FE6B790>, <app.database.models.Group object at 0x0000027F7FE6B8A0>, <app.database.models.Group object at 0x0000027F7FE6B9B0>, <app.database.models.Group object at 0x0000027F7FE6BAC0>, <app.database.models.Group object at 0x0000027F7FE6BBD0>, <app.database.models.Group object at 0x0000027F7FE6BCE0>, <app.database.models.Group object at 0x0000027F7FE6BDF0>, <app.database.models.Group object at 0x0000027F7FE6BF00>, <app.database.models.Group object at 0x0000027F7FF34050>, <app.database.models.Group object at 0x0000027F7FF34160>, <app.database.models.Group object at 0x0000027F7FF34270>, <app.database.models.Group object at 0x0000027F7FF34380>, <app.database.models.Group object at 0x0000027F7FF34490>, <app.database.models.Group object at 0x0000027F7FF345A0>, <app.database.models.Group object at 0x0000027F7FF346B0>, <app.database.models.Group object at 0x0000027F7FF347C0>, <app.database.models.Group object at 0x0000027F7FF348D0>, <app.database.models.Group object at 0x0000027F7FF349E0>, <app.database.models.Group object at 0x0000027F7FF34AF0>, <app.database.models.Group object at 0x0000027F7FF34C00>, <app.database.models.Group object at 0x0000027F7FF34D10>, <app.database.models.Group object at 0x0000027F7FF34E20>, <app.database.models.Group object at 0x0000027F7FF34F30>, <app.database.models.Group object at 0x0000027F7FF35040>, <app.database.models.Group object at 0x0000027F7FF35150>, <app.database.models.Group object at 0x0000027F7FF35260>, <app.database.models.Group object at 0x0000027F7FF35370>, <app.database.models.Group object at 0x0000027F7FF35480>, <app.database.models.Group object at 0x0000027F7FF35590>, <app.database.models.Group object at 0x0000027F7FF356A0>, <app.database.models.Group object at 0x0000027F7FF357B0>]
2025-06-10 03:21:27,484 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-10 03:21:27,484 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-10 03:21:27,484 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-10 03:21:27,484 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-10 03:21:27,484 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-10 03:21:27,887 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-10 03:21:27,896 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 03:21:27,896 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 03:21:27,896 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 03:21:27,896 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1303.583028604377878502558263
2025-06-10 03:21:27,896 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.7915143021889392512791315
2025-06-10 03:21:27,896 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-10 03:21:27,897 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.7915143021889392512791315')], HighestMarginPerLot=651.7915143021889392512791315
2025-06-10 03:21:27,897 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1303.58, ContributingOrders=1 (based on individual stored margins)
2025-06-10 03:21:27,897 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=1303.58, AdditionalMargin=1303.58
2025-06-10 03:21:27,906 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=1303.58
2025-06-10 03:21:27,994 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '8994741900', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8930000000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1303.583028604377878502558263'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-10 03:21:28,128 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1303.58000000
2025-06-10 03:21:28,184 - ERROR - orders - Error updating user data cache after order placement: cannot access local variable 'crud_user' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 404, in place_order
    db_user = await crud_user.get_demo_user_by_id(db, user_id)
                    ^^^^^^^^^
UnboundLocalError: cannot access local variable 'crud_user' where it is not associated with a value
2025-06-10 03:21:28,313 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-10 03:21:28,348 - INFO - orders - Updated static orders cache for user 1
2025-06-10 03:31:40,364 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 03:32:43,290 - INFO - orders - Close order request received - Order ID: 8994741900, User ID: 1, User Type: demo
2025-06-10 03:32:43,291 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-10 03:32:43,308 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001D9609E11D0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-10 03:32:43,309 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-10 03:32:43,309 - INFO - orders - Request to close order 8994741900 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-10 03:32:43,464 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-10 03:32:43,603 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 03:32:43,623 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 148): Type=BUY, Qty=2.00000000, StoredMargin=1303.58302860
2025-06-10 03:32:43,623 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.7915143
2025-06-10 03:32:43,623 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-10 03:32:43,624 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.7915143')], HighestMarginPerLot=651.7915143
2025-06-10 03:32:43,625 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1303.58, ContributingOrders=1 (based on individual stored margins)
2025-06-10 03:32:43,625 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 03:32:43,625 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 03:32:43,693 - INFO - orders - Existing entry commission for order 8994741900: 20.00000000
2025-06-10 03:32:43,693 - INFO - orders - Commission calculation for order 8994741900: entry=20.00000000, exit=20.000000000000, total=40.00
2025-06-10 03:32:43,695 - DEBUG - orders - Inverse conversion for PnL on Close: -600.000000000000000000000000 CAD / 1.3699300000 = -437.9785828472987670902892849 USD
2025-06-10 03:46:15,887 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 03:48:31,506 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 03:48:56,707 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 03:49:32,228 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-10 03:49:32,250 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000002F2F92F4490>, <app.database.models.Group object at 0x000002F2F92F45A0>, <app.database.models.Group object at 0x000002F2F92F47C0>, <app.database.models.Group object at 0x000002F2F92F49E0>, <app.database.models.Group object at 0x000002F2F92F4AF0>, <app.database.models.Group object at 0x000002F2F92F4C00>, <app.database.models.Group object at 0x000002F2F92F4D10>, <app.database.models.Group object at 0x000002F2F92F4E20>, <app.database.models.Group object at 0x000002F2F92F4F30>, <app.database.models.Group object at 0x000002F2F92F5040>, <app.database.models.Group object at 0x000002F2F92F5150>, <app.database.models.Group object at 0x000002F2F92F5260>, <app.database.models.Group object at 0x000002F2F92F5370>, <app.database.models.Group object at 0x000002F2F92F5480>, <app.database.models.Group object at 0x000002F2F92F5590>, <app.database.models.Group object at 0x000002F2F92F56A0>, <app.database.models.Group object at 0x000002F2F92F57B0>, <app.database.models.Group object at 0x000002F2F92F58C0>, <app.database.models.Group object at 0x000002F2F92F59D0>, <app.database.models.Group object at 0x000002F2F92F5AE0>, <app.database.models.Group object at 0x000002F2F92F5BF0>, <app.database.models.Group object at 0x000002F2F92F5D00>, <app.database.models.Group object at 0x000002F2F92F5E10>, <app.database.models.Group object at 0x000002F2F92F5F20>, <app.database.models.Group object at 0x000002F2F92F6030>, <app.database.models.Group object at 0x000002F2F92F6140>, <app.database.models.Group object at 0x000002F2F92F6250>, <app.database.models.Group object at 0x000002F2F92F6360>, <app.database.models.Group object at 0x000002F2F92F6470>, <app.database.models.Group object at 0x000002F2F92F6580>, <app.database.models.Group object at 0x000002F2F92F6690>, <app.database.models.Group object at 0x000002F2F92F67A0>, <app.database.models.Group object at 0x000002F2F92F68B0>, <app.database.models.Group object at 0x000002F2F92F69C0>, <app.database.models.Group object at 0x000002F2F92F6AD0>, <app.database.models.Group object at 0x000002F2F92F6BE0>, <app.database.models.Group object at 0x000002F2F92F6CF0>, <app.database.models.Group object at 0x000002F2F92F6E00>, <app.database.models.Group object at 0x000002F2F92F6F10>, <app.database.models.Group object at 0x000002F2F92F7020>, <app.database.models.Group object at 0x000002F2F92F7130>, <app.database.models.Group object at 0x000002F2F92F7240>, <app.database.models.Group object at 0x000002F2F92F7350>, <app.database.models.Group object at 0x000002F2F92F7460>, <app.database.models.Group object at 0x000002F2F92F7570>, <app.database.models.Group object at 0x000002F2F92F7680>, <app.database.models.Group object at 0x000002F2F92F7790>, <app.database.models.Group object at 0x000002F2F92F78A0>, <app.database.models.Group object at 0x000002F2F92F79B0>, <app.database.models.Group object at 0x000002F2F92F7AC0>, <app.database.models.Group object at 0x000002F2F92F7BD0>, <app.database.models.Group object at 0x000002F2F92F7CE0>, <app.database.models.Group object at 0x000002F2F92F7DF0>, <app.database.models.Group object at 0x000002F2F92F7F00>, <app.database.models.Group object at 0x000002F2F93A4050>, <app.database.models.Group object at 0x000002F2F93A4160>, <app.database.models.Group object at 0x000002F2F93A4270>, <app.database.models.Group object at 0x000002F2F93A4380>, <app.database.models.Group object at 0x000002F2F93A4490>, <app.database.models.Group object at 0x000002F2F93A45A0>, <app.database.models.Group object at 0x000002F2F93A46B0>, <app.database.models.Group object at 0x000002F2F93A47C0>, <app.database.models.Group object at 0x000002F2F93A48D0>, <app.database.models.Group object at 0x000002F2F93A49E0>, <app.database.models.Group object at 0x000002F2F93A4AF0>, <app.database.models.Group object at 0x000002F2F93A4C00>, <app.database.models.Group object at 0x000002F2F93A4D10>, <app.database.models.Group object at 0x000002F2F93A4E20>, <app.database.models.Group object at 0x000002F2F93A4F30>, <app.database.models.Group object at 0x000002F2F93A5040>, <app.database.models.Group object at 0x000002F2F93A5150>, <app.database.models.Group object at 0x000002F2F93A5260>, <app.database.models.Group object at 0x000002F2F93A5370>, <app.database.models.Group object at 0x000002F2F93A5480>, <app.database.models.Group object at 0x000002F2F93A5590>, <app.database.models.Group object at 0x000002F2F93A56A0>, <app.database.models.Group object at 0x000002F2F93A57B0>, <app.database.models.Group object at 0x000002F2F93A58C0>, <app.database.models.Group object at 0x000002F2F93A59D0>]
2025-06-10 03:49:32,251 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-10 03:49:32,251 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-10 03:49:32,253 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-10 03:49:32,253 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-10 03:49:32,254 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-10 03:49:32,610 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-10 03:49:32,625 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 03:49:32,626 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 03:49:32,626 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 03:49:32,626 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1303.199719732578168335620238
2025-06-10 03:49:32,626 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.599859866289084167810119
2025-06-10 03:49:32,627 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-10 03:49:32,627 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.599859866289084167810119')], HighestMarginPerLot=651.599859866289084167810119
2025-06-10 03:49:32,628 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1303.20, ContributingOrders=1 (based on individual stored margins)
2025-06-10 03:49:32,628 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=1303.20, AdditionalMargin=1303.20
2025-06-10 03:49:32,642 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=1303.20
2025-06-10 03:49:32,733 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '6749773752', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8927700000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1303.199719732578168335620238'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-10 03:49:32,785 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1303.20000000
2025-06-10 03:49:32,835 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-10 03:49:32,949 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-10 03:49:32,951 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-10 03:49:32,951 - INFO - orders - Using order model: DemoUserOrder
2025-06-10 03:49:32,957 - INFO - orders - Fetched 1 open orders for user 1
2025-06-10 03:49:32,989 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-10 03:49:33,002 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 1 pending orders
2025-06-10 03:50:05,311 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-10 03:50:05,341 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000002F2F92F5150>, <app.database.models.Group object at 0x000002F2F92F5260>, <app.database.models.Group object at 0x000002F2F92F5370>, <app.database.models.Group object at 0x000002F2F92F5480>, <app.database.models.Group object at 0x000002F2F92F5590>, <app.database.models.Group object at 0x000002F2F92F56A0>, <app.database.models.Group object at 0x000002F2F92F57B0>, <app.database.models.Group object at 0x000002F2F92F58C0>, <app.database.models.Group object at 0x000002F2F92F59D0>, <app.database.models.Group object at 0x000002F2F92F5AE0>, <app.database.models.Group object at 0x000002F2F92F5BF0>, <app.database.models.Group object at 0x000002F2F92F5D00>, <app.database.models.Group object at 0x000002F2F92F5E10>, <app.database.models.Group object at 0x000002F2F92F5F20>, <app.database.models.Group object at 0x000002F2F92F6030>, <app.database.models.Group object at 0x000002F2F92F6140>, <app.database.models.Group object at 0x000002F2F92F6250>, <app.database.models.Group object at 0x000002F2F92F6360>, <app.database.models.Group object at 0x000002F2F92F6470>, <app.database.models.Group object at 0x000002F2F92F6580>, <app.database.models.Group object at 0x000002F2F92F6690>, <app.database.models.Group object at 0x000002F2F92F67A0>, <app.database.models.Group object at 0x000002F2F92F68B0>, <app.database.models.Group object at 0x000002F2F92F69C0>, <app.database.models.Group object at 0x000002F2F92F6AD0>, <app.database.models.Group object at 0x000002F2F92F6BE0>, <app.database.models.Group object at 0x000002F2F92F6CF0>, <app.database.models.Group object at 0x000002F2F92F6E00>, <app.database.models.Group object at 0x000002F2F92F6F10>, <app.database.models.Group object at 0x000002F2F92F7020>, <app.database.models.Group object at 0x000002F2F92F7130>, <app.database.models.Group object at 0x000002F2F92F7240>, <app.database.models.Group object at 0x000002F2F92F7350>, <app.database.models.Group object at 0x000002F2F92F7460>, <app.database.models.Group object at 0x000002F2F92F7570>, <app.database.models.Group object at 0x000002F2F92F7680>, <app.database.models.Group object at 0x000002F2F92F7790>, <app.database.models.Group object at 0x000002F2F92F78A0>, <app.database.models.Group object at 0x000002F2F92F79B0>, <app.database.models.Group object at 0x000002F2F92F7AC0>, <app.database.models.Group object at 0x000002F2F92F7BD0>, <app.database.models.Group object at 0x000002F2F92F7CE0>, <app.database.models.Group object at 0x000002F2F92F7DF0>, <app.database.models.Group object at 0x000002F2F92F7F00>, <app.database.models.Group object at 0x000002F2F8FA3CE0>, <app.database.models.Group object at 0x000002F2F8FA3DF0>, <app.database.models.Group object at 0x000002F2F8FA2BE0>, <app.database.models.Group object at 0x000002F2F8FA2AD0>, <app.database.models.Group object at 0x000002F2F8FA3AC0>, <app.database.models.Group object at 0x000002F2F8FA3F00>, <app.database.models.Group object at 0x000002F2F8FA1AE0>, <app.database.models.Group object at 0x000002F2F8FA29C0>, <app.database.models.Group object at 0x000002F2F93A6030>, <app.database.models.Group object at 0x000002F2F93A6140>, <app.database.models.Group object at 0x000002F2F93A5D00>, <app.database.models.Group object at 0x000002F2F93A6360>, <app.database.models.Group object at 0x000002F2F93A6250>, <app.database.models.Group object at 0x000002F2F93A4050>, <app.database.models.Group object at 0x000002F2F93A4160>, <app.database.models.Group object at 0x000002F2F93A4270>, <app.database.models.Group object at 0x000002F2F93A4380>, <app.database.models.Group object at 0x000002F2F93A4490>, <app.database.models.Group object at 0x000002F2F93A45A0>, <app.database.models.Group object at 0x000002F2F93A46B0>, <app.database.models.Group object at 0x000002F2F93A47C0>, <app.database.models.Group object at 0x000002F2F93A48D0>, <app.database.models.Group object at 0x000002F2F93A49E0>, <app.database.models.Group object at 0x000002F2F93A4AF0>, <app.database.models.Group object at 0x000002F2F93A4C00>, <app.database.models.Group object at 0x000002F2F93A4D10>, <app.database.models.Group object at 0x000002F2F93A4E20>, <app.database.models.Group object at 0x000002F2F93A4F30>, <app.database.models.Group object at 0x000002F2F93A5040>, <app.database.models.Group object at 0x000002F2F93A5150>, <app.database.models.Group object at 0x000002F2F93A5260>, <app.database.models.Group object at 0x000002F2F93A5370>, <app.database.models.Group object at 0x000002F2F93A5480>, <app.database.models.Group object at 0x000002F2F93A5590>, <app.database.models.Group object at 0x000002F2F93A56A0>]
2025-06-10 03:50:05,342 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-10 03:50:05,343 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-10 03:50:05,343 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-10 03:50:05,343 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-10 03:50:05,344 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-10 03:50:05,743 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-10 03:50:05,752 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 03:50:05,753 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 149): Type=BUY, Qty=2.00000000, StoredMargin=1303.19971973
2025-06-10 03:50:05,753 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.599859865
2025-06-10 03:50:05,753 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-10 03:50:05,753 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.599859865')], HighestMarginPerLot=651.599859865
2025-06-10 03:50:05,753 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1303.20, ContributingOrders=1 (based on individual stored margins)
2025-06-10 03:50:05,753 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-10 03:50:05,754 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 149): Type=BUY, Qty=2.00000000, StoredMargin=1303.19971973
2025-06-10 03:50:05,754 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.599859865
2025-06-10 03:50:05,754 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1303.253023479866580055615972
2025-06-10 03:50:05,754 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=651.626511739933290027807986
2025-06-10 03:50:05,784 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=4.00000000, TotalSellQty=0, NetQty=4.00000000
2025-06-10 03:50:05,785 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.599859865'), Decimal('651.626511739933290027807986')], HighestMarginPerLot=651.626511739933290027807986
2025-06-10 03:50:05,785 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=2606.51, ContributingOrders=2 (based on individual stored margins)
2025-06-10 03:50:05,785 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=1303.20, MarginAfter=2606.51, AdditionalMargin=1303.31
2025-06-10 03:50:05,853 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=1303.20000000, CalculatedNewMargin=2606.51
2025-06-10 03:50:05,929 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '3151513494', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8928000000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1303.253023479866580055615972'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-10 03:50:05,962 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 2606.51000000
2025-06-10 03:50:05,992 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-10 03:50:06,097 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-10 03:50:06,099 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-10 03:50:06,099 - INFO - orders - Using order model: DemoUserOrder
2025-06-10 03:50:06,109 - INFO - orders - Fetched 2 open orders for user 1
2025-06-10 03:50:06,117 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-10 03:50:06,123 - INFO - orders - Updated static orders cache for user 1 with 2 open orders and 1 pending orders
2025-06-10 04:00:12,609 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 04:12:34,902 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 04:13:17,857 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 04:13:54,770 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 04:19:35,540 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 04:19:59,900 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 04:20:34,206 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 04:21:08,825 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 04:21:41,116 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 04:27:27,398 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 04:33:10,095 - INFO - orders - Close order request received - Order ID: 3151513494, User ID: 1, User Type: demo
2025-06-10 04:33:10,095 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-10 04:33:10,095 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000017A916CA710>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-10 04:33:10,095 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-10 04:33:10,095 - INFO - orders - Request to close order 3151513494 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-10 04:33:10,118 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-10 04:33:10,150 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-10 04:33:10,150 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 149): Type=BUY, Qty=2.00000000, StoredMargin=1303.19971973
2025-06-10 04:33:10,150 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.599859865
2025-06-10 04:33:10,150 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 150): Type=BUY, Qty=2.00000000, StoredMargin=1303.25302348
2025-06-10 04:33:10,150 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=651.62651174
2025-06-10 04:33:10,150 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=4.00000000, TotalSellQty=0, NetQty=4.00000000
2025-06-10 04:33:10,151 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.599859865'), Decimal('651.62651174')], HighestMarginPerLot=651.62651174
2025-06-10 04:33:10,151 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=2606.51, ContributingOrders=2 (based on individual stored margins)
2025-06-10 04:33:10,151 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 04:33:10,151 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 149): Type=BUY, Qty=2.00000000, StoredMargin=1303.19971973
2025-06-10 04:33:10,151 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.599859865
2025-06-10 04:33:10,151 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-10 04:33:10,151 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.599859865')], HighestMarginPerLot=651.599859865
2025-06-10 04:33:10,151 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1303.20, ContributingOrders=1 (based on individual stored margins)
2025-06-10 04:33:10,195 - INFO - orders - Existing entry commission for order 3151513494: 20.00000000
2025-06-10 04:33:10,195 - INFO - orders - Commission calculation for order 3151513494: entry=20.00000000, exit=20.000000000000, total=40.00
2025-06-10 04:33:10,196 - DEBUG - orders - Inverse conversion for PnL on Close: -560.000000000000000000000000 CAD / 1.3688900000 = -409.0905770368692882554478446 USD
2025-06-10 04:33:37,546 - INFO - orders - Close order request received - Order ID: 6749773752, User ID: 1, User Type: demo
2025-06-10 04:33:37,546 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-10 04:33:37,546 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000017A9183C3E0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-10 04:33:37,547 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-10 04:33:37,547 - INFO - orders - Request to close order 6749773752 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-10 04:33:37,566 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-10 04:33:37,605 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 04:33:37,605 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 149): Type=BUY, Qty=2.00000000, StoredMargin=1303.19971973
2025-06-10 04:33:37,605 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.599859865
2025-06-10 04:33:37,605 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-10 04:33:37,605 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.599859865')], HighestMarginPerLot=651.599859865
2025-06-10 04:33:37,605 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1303.20, ContributingOrders=1 (based on individual stored margins)
2025-06-10 04:33:37,605 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 04:33:37,606 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 04:33:37,621 - INFO - orders - Existing entry commission for order 6749773752: 20.00000000
2025-06-10 04:33:37,621 - INFO - orders - Commission calculation for order 6749773752: entry=20.00000000, exit=20.000000000000, total=40.00
2025-06-10 04:33:37,623 - DEBUG - orders - Inverse conversion for PnL on Close: -554.000000000000000000000000 CAD / 1.3688900000 = -404.7074637114742601669966177 USD
2025-06-10 04:40:12,542 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 04:40:33,305 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-10 04:40:33,321 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001564F7097B0>, <app.database.models.Group object at 0x000001564F7099D0>, <app.database.models.Group object at 0x000001564F709AE0>, <app.database.models.Group object at 0x000001564F709BF0>, <app.database.models.Group object at 0x000001564F709D00>, <app.database.models.Group object at 0x000001564F709E10>, <app.database.models.Group object at 0x000001564F709F20>, <app.database.models.Group object at 0x000001564F70A030>, <app.database.models.Group object at 0x000001564F70A140>, <app.database.models.Group object at 0x000001564F70A250>, <app.database.models.Group object at 0x000001564F70A360>, <app.database.models.Group object at 0x000001564F70A470>, <app.database.models.Group object at 0x000001564F70A580>, <app.database.models.Group object at 0x000001564F70A690>, <app.database.models.Group object at 0x000001564F70A7A0>, <app.database.models.Group object at 0x000001564F70A8B0>, <app.database.models.Group object at 0x000001564F70A9C0>, <app.database.models.Group object at 0x000001564F70AAD0>, <app.database.models.Group object at 0x000001564F70ABE0>, <app.database.models.Group object at 0x000001564F70ACF0>, <app.database.models.Group object at 0x000001564F70AE00>, <app.database.models.Group object at 0x000001564F70AF10>, <app.database.models.Group object at 0x000001564F70B020>, <app.database.models.Group object at 0x000001564F70B130>, <app.database.models.Group object at 0x000001564F70B240>, <app.database.models.Group object at 0x000001564F70B350>, <app.database.models.Group object at 0x000001564F70B460>, <app.database.models.Group object at 0x000001564F70B570>, <app.database.models.Group object at 0x000001564F70B680>, <app.database.models.Group object at 0x000001564F70B790>, <app.database.models.Group object at 0x000001564F70B8A0>, <app.database.models.Group object at 0x000001564F70B9B0>, <app.database.models.Group object at 0x000001564F70BAC0>, <app.database.models.Group object at 0x000001564F70BBD0>, <app.database.models.Group object at 0x000001564F70BCE0>, <app.database.models.Group object at 0x000001564F70BDF0>, <app.database.models.Group object at 0x000001564F70BF00>, <app.database.models.Group object at 0x000001564F496CF0>, <app.database.models.Group object at 0x000001564F4978A0>, <app.database.models.Group object at 0x000001564F497680>, <app.database.models.Group object at 0x000001564F497790>, <app.database.models.Group object at 0x000001564F8198C0>, <app.database.models.Group object at 0x000001564F819480>, <app.database.models.Group object at 0x000001564F818050>, <app.database.models.Group object at 0x000001564F818160>, <app.database.models.Group object at 0x000001564F818270>, <app.database.models.Group object at 0x000001564F818380>, <app.database.models.Group object at 0x000001564F818490>, <app.database.models.Group object at 0x000001564F8185A0>, <app.database.models.Group object at 0x000001564F8186B0>, <app.database.models.Group object at 0x000001564F8187C0>, <app.database.models.Group object at 0x000001564F8188D0>, <app.database.models.Group object at 0x000001564F8189E0>, <app.database.models.Group object at 0x000001564F818AF0>, <app.database.models.Group object at 0x000001564F818C00>, <app.database.models.Group object at 0x000001564F818D10>, <app.database.models.Group object at 0x000001564F818E20>, <app.database.models.Group object at 0x000001564F818F30>, <app.database.models.Group object at 0x000001564F819040>, <app.database.models.Group object at 0x000001564F819150>, <app.database.models.Group object at 0x000001564F819260>, <app.database.models.Group object at 0x000001564F819370>, <app.database.models.Group object at 0x000001564F819590>, <app.database.models.Group object at 0x000001564F8197B0>, <app.database.models.Group object at 0x000001564F8199D0>, <app.database.models.Group object at 0x000001564F819AE0>, <app.database.models.Group object at 0x000001564F819BF0>, <app.database.models.Group object at 0x000001564F819D00>, <app.database.models.Group object at 0x000001564F819E10>, <app.database.models.Group object at 0x000001564F819F20>, <app.database.models.Group object at 0x000001564F81A030>, <app.database.models.Group object at 0x000001564F81A140>, <app.database.models.Group object at 0x000001564F81A250>, <app.database.models.Group object at 0x000001564F81A360>, <app.database.models.Group object at 0x000001564F81A470>, <app.database.models.Group object at 0x000001564F81A580>, <app.database.models.Group object at 0x000001564F81A690>, <app.database.models.Group object at 0x000001564F81A7A0>, <app.database.models.Group object at 0x000001564F81A8B0>]
2025-06-10 04:40:33,324 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-10 04:40:33,324 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-10 04:40:33,324 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-10 04:40:33,324 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-10 04:40:33,324 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-10 04:40:33,764 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-10 04:40:33,810 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 04:40:33,811 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 04:40:33,811 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 04:40:33,812 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1303.935604511190323146146205
2025-06-10 04:40:33,812 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.9678022555951615730731025
2025-06-10 04:40:33,813 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-10 04:40:33,814 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.9678022555951615730731025')], HighestMarginPerLot=651.9678022555951615730731025
2025-06-10 04:40:33,815 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1303.94, ContributingOrders=1 (based on individual stored margins)
2025-06-10 04:40:33,816 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=1303.94, AdditionalMargin=1303.94
2025-06-10 04:40:33,834 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=1303.94
2025-06-10 04:40:33,919 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '3375660497', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8925700000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1303.935604511190323146146205'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-10 04:40:33,985 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1303.94000000
2025-06-10 04:40:34,010 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-10 04:40:34,097 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-10 04:40:34,099 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-10 04:40:34,099 - INFO - orders - Using order model: DemoUserOrder
2025-06-10 04:40:34,105 - INFO - orders - Fetched 1 open orders for user 1
2025-06-10 04:40:34,111 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-10 04:40:34,117 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 1 pending orders
2025-06-10 04:40:51,583 - INFO - orders - Close order request received - Order ID: 3375660497, User ID: 1, User Type: demo
2025-06-10 04:40:51,584 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-10 04:40:51,584 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001564F697250>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-10 04:40:51,584 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-10 04:40:51,584 - INFO - orders - Request to close order 3375660497 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-10 04:40:51,610 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-10 04:40:51,641 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 04:40:51,641 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 151): Type=BUY, Qty=2.00000000, StoredMargin=1303.93560451
2025-06-10 04:40:51,641 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.967802255
2025-06-10 04:40:51,641 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-10 04:40:51,641 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.967802255')], HighestMarginPerLot=651.967802255
2025-06-10 04:40:51,641 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1303.94, ContributingOrders=1 (based on individual stored margins)
2025-06-10 04:40:51,642 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 04:40:51,642 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 04:40:51,665 - INFO - orders - Existing entry commission for order 3375660497: 20.00000000
2025-06-10 04:40:51,666 - INFO - orders - Commission calculation for order 3375660497: entry=20.00000000, exit=20.000000000000, total=40.00
2025-06-10 04:40:51,669 - DEBUG - orders - Inverse conversion for PnL on Close: -514.000000000000000000000000 CAD / 1.3690500000 = -375.4428253168255359555896425 USD
2025-06-10 04:52:11,446 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 04:52:45,313 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-10 04:52:45,328 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000025A93B2D8C0>, <app.database.models.Group object at 0x0000025A93B2D9D0>, <app.database.models.Group object at 0x0000025A93B2DAE0>, <app.database.models.Group object at 0x0000025A93B2DBF0>, <app.database.models.Group object at 0x0000025A93B2DD00>, <app.database.models.Group object at 0x0000025A93B2DE10>, <app.database.models.Group object at 0x0000025A93B2DF20>, <app.database.models.Group object at 0x0000025A93B2E030>, <app.database.models.Group object at 0x0000025A93B2E140>, <app.database.models.Group object at 0x0000025A93B2E250>, <app.database.models.Group object at 0x0000025A93B2E360>, <app.database.models.Group object at 0x0000025A93B2E470>, <app.database.models.Group object at 0x0000025A93B2E580>, <app.database.models.Group object at 0x0000025A93B2E690>, <app.database.models.Group object at 0x0000025A93B2E7A0>, <app.database.models.Group object at 0x0000025A93B2E8B0>, <app.database.models.Group object at 0x0000025A93B2E9C0>, <app.database.models.Group object at 0x0000025A93B2EAD0>, <app.database.models.Group object at 0x0000025A93B2EBE0>, <app.database.models.Group object at 0x0000025A93B2ECF0>, <app.database.models.Group object at 0x0000025A93B2EE00>, <app.database.models.Group object at 0x0000025A93B2EF10>, <app.database.models.Group object at 0x0000025A93B2F020>, <app.database.models.Group object at 0x0000025A93B2F130>, <app.database.models.Group object at 0x0000025A93B2F240>, <app.database.models.Group object at 0x0000025A93B2F350>, <app.database.models.Group object at 0x0000025A93B2F460>, <app.database.models.Group object at 0x0000025A93B2F570>, <app.database.models.Group object at 0x0000025A93B2F680>, <app.database.models.Group object at 0x0000025A93B2F790>, <app.database.models.Group object at 0x0000025A93B2F8A0>, <app.database.models.Group object at 0x0000025A93B2F9B0>, <app.database.models.Group object at 0x0000025A93B2FAC0>, <app.database.models.Group object at 0x0000025A93B2FBD0>, <app.database.models.Group object at 0x0000025A93B2FCE0>, <app.database.models.Group object at 0x0000025A93B2FDF0>, <app.database.models.Group object at 0x0000025A93B2FF00>, <app.database.models.Group object at 0x0000025A938BA9C0>, <app.database.models.Group object at 0x0000025A938BB8A0>, <app.database.models.Group object at 0x0000025A938BB680>, <app.database.models.Group object at 0x0000025A938BB790>, <app.database.models.Group object at 0x0000025A93C3D8C0>, <app.database.models.Group object at 0x0000025A93C3D7B0>, <app.database.models.Group object at 0x0000025A93C3D480>, <app.database.models.Group object at 0x0000025A93C3C050>, <app.database.models.Group object at 0x0000025A93C3C160>, <app.database.models.Group object at 0x0000025A93C3C270>, <app.database.models.Group object at 0x0000025A93C3C380>, <app.database.models.Group object at 0x0000025A93C3C490>, <app.database.models.Group object at 0x0000025A93C3C5A0>, <app.database.models.Group object at 0x0000025A93C3C6B0>, <app.database.models.Group object at 0x0000025A93C3C7C0>, <app.database.models.Group object at 0x0000025A93C3C8D0>, <app.database.models.Group object at 0x0000025A93C3C9E0>, <app.database.models.Group object at 0x0000025A93C3CAF0>, <app.database.models.Group object at 0x0000025A93C3CC00>, <app.database.models.Group object at 0x0000025A93C3CD10>, <app.database.models.Group object at 0x0000025A93C3CE20>, <app.database.models.Group object at 0x0000025A93C3CF30>, <app.database.models.Group object at 0x0000025A93C3D040>, <app.database.models.Group object at 0x0000025A93C3D150>, <app.database.models.Group object at 0x0000025A93C3D260>, <app.database.models.Group object at 0x0000025A93C3D370>, <app.database.models.Group object at 0x0000025A93C3D590>, <app.database.models.Group object at 0x0000025A93C3D9D0>, <app.database.models.Group object at 0x0000025A93C3DAE0>, <app.database.models.Group object at 0x0000025A93C3DBF0>, <app.database.models.Group object at 0x0000025A93C3DD00>, <app.database.models.Group object at 0x0000025A93C3DE10>, <app.database.models.Group object at 0x0000025A93C3DF20>, <app.database.models.Group object at 0x0000025A93C3E030>, <app.database.models.Group object at 0x0000025A93C3E140>, <app.database.models.Group object at 0x0000025A93C3E250>, <app.database.models.Group object at 0x0000025A93C3E360>, <app.database.models.Group object at 0x0000025A93C3E470>, <app.database.models.Group object at 0x0000025A93C3E580>, <app.database.models.Group object at 0x0000025A93C3E690>, <app.database.models.Group object at 0x0000025A93C3E7A0>, <app.database.models.Group object at 0x0000025A93C3E8B0>]
2025-06-10 04:52:45,329 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-10 04:52:45,329 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-10 04:52:45,329 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-10 04:52:45,329 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-10 04:52:45,329 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-10 04:52:45,662 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-10 04:52:45,675 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 04:52:45,675 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 04:52:45,675 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 04:52:45,676 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1304.118553576254227013446102
2025-06-10 04:52:45,676 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=652.059276788127113506723051
2025-06-10 04:52:45,676 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-10 04:52:45,676 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('652.059276788127113506723051')], HighestMarginPerLot=652.059276788127113506723051
2025-06-10 04:52:45,676 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1304.12, ContributingOrders=1 (based on individual stored margins)
2025-06-10 04:52:45,676 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=1304.12, AdditionalMargin=1304.12
2025-06-10 04:52:45,721 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=1304.12
2025-06-10 04:52:45,807 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '3166856759', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8927800000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1304.118553576254227013446102'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-10 04:52:45,861 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1304.12000000
2025-06-10 04:52:45,887 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-10 04:52:46,002 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-10 04:52:46,003 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-10 04:52:46,003 - INFO - orders - Using order model: DemoUserOrder
2025-06-10 04:52:46,010 - INFO - orders - Fetched 1 open orders for user 1
2025-06-10 04:52:46,022 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-10 04:52:46,026 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 1 pending orders
2025-06-10 04:53:10,779 - INFO - orders - Close order request received - Order ID: 3166856759, User ID: 1, User Type: demo
2025-06-10 04:53:10,779 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-10 04:53:10,779 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000025A93ABF250>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-10 04:53:10,779 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-10 04:53:10,780 - INFO - orders - Request to close order 3166856759 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-10 04:53:10,836 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-10 04:53:10,880 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 04:53:10,882 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 152): Type=BUY, Qty=2.00000000, StoredMargin=1304.11855358
2025-06-10 04:53:10,882 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=652.05927679
2025-06-10 04:53:10,882 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-10 04:53:10,882 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('652.05927679')], HighestMarginPerLot=652.05927679
2025-06-10 04:53:10,883 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1304.12, ContributingOrders=1 (based on individual stored margins)
2025-06-10 04:53:10,883 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 04:53:10,883 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 04:53:10,900 - INFO - orders - Existing entry commission for order 3166856759: 20.00000000
2025-06-10 04:53:10,900 - INFO - orders - Commission calculation for order 3166856759: entry=20.00000000, exit=20.000000000000, total=40.00
2025-06-10 04:53:10,903 - DEBUG - orders - Inverse conversion for PnL on Close: -556.000000000000000000000000 CAD / 1.3690500000 = -406.1210328329863774149958000 USD
2025-06-10 04:59:31,827 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 05:00:04,405 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-10 05:00:04,434 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001B4614999D0>, <app.database.models.Group object at 0x000001B461499AE0>, <app.database.models.Group object at 0x000001B461499BF0>, <app.database.models.Group object at 0x000001B461499D00>, <app.database.models.Group object at 0x000001B461499E10>, <app.database.models.Group object at 0x000001B461499F20>, <app.database.models.Group object at 0x000001B46149A030>, <app.database.models.Group object at 0x000001B46149A140>, <app.database.models.Group object at 0x000001B46149A250>, <app.database.models.Group object at 0x000001B46149A360>, <app.database.models.Group object at 0x000001B46149A470>, <app.database.models.Group object at 0x000001B46149A580>, <app.database.models.Group object at 0x000001B46149A690>, <app.database.models.Group object at 0x000001B46149A7A0>, <app.database.models.Group object at 0x000001B46149A8B0>, <app.database.models.Group object at 0x000001B46149A9C0>, <app.database.models.Group object at 0x000001B46149AAD0>, <app.database.models.Group object at 0x000001B46149ABE0>, <app.database.models.Group object at 0x000001B46149ACF0>, <app.database.models.Group object at 0x000001B46149AE00>, <app.database.models.Group object at 0x000001B46149AF10>, <app.database.models.Group object at 0x000001B46149B020>, <app.database.models.Group object at 0x000001B46149B130>, <app.database.models.Group object at 0x000001B46149B240>, <app.database.models.Group object at 0x000001B46149B350>, <app.database.models.Group object at 0x000001B46149B460>, <app.database.models.Group object at 0x000001B46149B570>, <app.database.models.Group object at 0x000001B46149B680>, <app.database.models.Group object at 0x000001B46149B790>, <app.database.models.Group object at 0x000001B46149B8A0>, <app.database.models.Group object at 0x000001B46149B9B0>, <app.database.models.Group object at 0x000001B46149BAC0>, <app.database.models.Group object at 0x000001B46149BBD0>, <app.database.models.Group object at 0x000001B46149BCE0>, <app.database.models.Group object at 0x000001B46149BDF0>, <app.database.models.Group object at 0x000001B46149BF00>, <app.database.models.Group object at 0x000001B4612278A0>, <app.database.models.Group object at 0x000001B461227680>, <app.database.models.Group object at 0x000001B461227790>, <app.database.models.Group object at 0x000001B4615CD8C0>, <app.database.models.Group object at 0x000001B4615CD7B0>, <app.database.models.Group object at 0x000001B4615CD480>, <app.database.models.Group object at 0x000001B4615CC050>, <app.database.models.Group object at 0x000001B4615CC160>, <app.database.models.Group object at 0x000001B4615CC270>, <app.database.models.Group object at 0x000001B4615CC380>, <app.database.models.Group object at 0x000001B4615CC490>, <app.database.models.Group object at 0x000001B4615CC5A0>, <app.database.models.Group object at 0x000001B4615CC6B0>, <app.database.models.Group object at 0x000001B4615CC7C0>, <app.database.models.Group object at 0x000001B4615CC8D0>, <app.database.models.Group object at 0x000001B4615CC9E0>, <app.database.models.Group object at 0x000001B4615CCAF0>, <app.database.models.Group object at 0x000001B4615CCC00>, <app.database.models.Group object at 0x000001B4615CCD10>, <app.database.models.Group object at 0x000001B4615CCE20>, <app.database.models.Group object at 0x000001B4615CCF30>, <app.database.models.Group object at 0x000001B4615CD040>, <app.database.models.Group object at 0x000001B4615CD150>, <app.database.models.Group object at 0x000001B4615CD260>, <app.database.models.Group object at 0x000001B4615CD370>, <app.database.models.Group object at 0x000001B4615CD590>, <app.database.models.Group object at 0x000001B4615CD9D0>, <app.database.models.Group object at 0x000001B4615CDAE0>, <app.database.models.Group object at 0x000001B4615CDBF0>, <app.database.models.Group object at 0x000001B4615CDD00>, <app.database.models.Group object at 0x000001B4615CDE10>, <app.database.models.Group object at 0x000001B4615CDF20>, <app.database.models.Group object at 0x000001B4615CE030>, <app.database.models.Group object at 0x000001B4615CE140>, <app.database.models.Group object at 0x000001B4615CE250>, <app.database.models.Group object at 0x000001B4615CE360>, <app.database.models.Group object at 0x000001B4615CE470>, <app.database.models.Group object at 0x000001B4615CE580>, <app.database.models.Group object at 0x000001B4615CE690>, <app.database.models.Group object at 0x000001B4615CE7A0>, <app.database.models.Group object at 0x000001B4615CE8B0>, <app.database.models.Group object at 0x000001B4615CE9C0>, <app.database.models.Group object at 0x000001B4615CEAD0>]
2025-06-10 05:00:04,435 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-10 05:00:04,435 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-10 05:00:04,435 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-10 05:00:04,435 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-10 05:00:04,435 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-10 05:00:04,780 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-10 05:00:04,791 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 05:00:04,791 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 05:00:04,791 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 05:00:04,792 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1303.965529832761264879865625
2025-06-10 05:00:04,792 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.9827649163806324399328125
2025-06-10 05:00:04,792 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-10 05:00:04,792 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.9827649163806324399328125')], HighestMarginPerLot=651.9827649163806324399328125
2025-06-10 05:00:04,793 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1303.97, ContributingOrders=1 (based on individual stored margins)
2025-06-10 05:00:04,793 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=1303.97, AdditionalMargin=1303.97
2025-06-10 05:00:04,803 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=1303.97
2025-06-10 05:00:04,908 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '3581444338', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8927600000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1303.965529832761264879865625'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-10 05:00:04,990 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1303.97000000
2025-06-10 05:00:05,112 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-10 05:00:05,595 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-10 05:00:05,654 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-10 05:00:05,654 - INFO - orders - Using order model: DemoUserOrder
2025-06-10 05:00:05,682 - INFO - orders - Fetched 1 open orders for user 1
2025-06-10 05:00:05,713 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-10 05:00:05,729 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 1 pending orders
2025-06-10 05:00:32,563 - INFO - orders - Close order request received - Order ID: 3581444338, User ID: 1, User Type: demo
2025-06-10 05:00:32,563 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-10 05:00:32,564 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001B46142B250>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-10 05:00:32,564 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-10 05:00:32,564 - INFO - orders - Request to close order 3581444338 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-10 05:00:32,607 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-10 05:00:32,648 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 05:00:32,649 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 153): Type=BUY, Qty=2.00000000, StoredMargin=1303.96552983
2025-06-10 05:00:32,649 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.982764915
2025-06-10 05:00:32,649 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-10 05:00:32,649 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.982764915')], HighestMarginPerLot=651.982764915
2025-06-10 05:00:32,650 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1303.97, ContributingOrders=1 (based on individual stored margins)
2025-06-10 05:00:32,650 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 05:00:32,650 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 05:00:32,708 - INFO - orders - Existing entry commission for order 3581444338: 20.00000000
2025-06-10 05:00:32,708 - INFO - orders - Commission calculation for order 3581444338: entry=20.00000000, exit=20.000000000000, total=40.00
2025-06-10 05:00:32,716 - DEBUG - orders - Inverse conversion for PnL on Close: -552.000000000000000000000000 CAD / 1.3692900000 = -403.1286287053874635760138466 USD
2025-06-10 05:08:23,981 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 05:09:12,037 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 05:09:59,703 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-10 05:09:59,729 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x00000247F4652030>, <app.database.models.Group object at 0x00000247F4651AE0>, <app.database.models.Group object at 0x00000247F4652140>, <app.database.models.Group object at 0x00000247F4652250>, <app.database.models.Group object at 0x00000247F4652360>, <app.database.models.Group object at 0x00000247F4652470>, <app.database.models.Group object at 0x00000247F4652580>, <app.database.models.Group object at 0x00000247F4652690>, <app.database.models.Group object at 0x00000247F46527A0>, <app.database.models.Group object at 0x00000247F46528B0>, <app.database.models.Group object at 0x00000247F46529C0>, <app.database.models.Group object at 0x00000247F4652AD0>, <app.database.models.Group object at 0x00000247F4652BE0>, <app.database.models.Group object at 0x00000247F4652CF0>, <app.database.models.Group object at 0x00000247F4652E00>, <app.database.models.Group object at 0x00000247F4652F10>, <app.database.models.Group object at 0x00000247F4653020>, <app.database.models.Group object at 0x00000247F4653130>, <app.database.models.Group object at 0x00000247F4653240>, <app.database.models.Group object at 0x00000247F4653350>, <app.database.models.Group object at 0x00000247F4653460>, <app.database.models.Group object at 0x00000247F4653570>, <app.database.models.Group object at 0x00000247F4653680>, <app.database.models.Group object at 0x00000247F4653790>, <app.database.models.Group object at 0x00000247F46538A0>, <app.database.models.Group object at 0x00000247F46539B0>, <app.database.models.Group object at 0x00000247F4653AC0>, <app.database.models.Group object at 0x00000247F4653BD0>, <app.database.models.Group object at 0x00000247F4653CE0>, <app.database.models.Group object at 0x00000247F4653DF0>, <app.database.models.Group object at 0x00000247F4653F00>, <app.database.models.Group object at 0x00000247F4650AF0>, <app.database.models.Group object at 0x00000247F42C2BE0>, <app.database.models.Group object at 0x00000247F42C2AD0>, <app.database.models.Group object at 0x00000247F42C2CF0>, <app.database.models.Group object at 0x00000247F475DE10>, <app.database.models.Group object at 0x00000247F475D9D0>, <app.database.models.Group object at 0x00000247F475C050>, <app.database.models.Group object at 0x00000247F475C160>, <app.database.models.Group object at 0x00000247F475C270>, <app.database.models.Group object at 0x00000247F475C380>, <app.database.models.Group object at 0x00000247F475C490>, <app.database.models.Group object at 0x00000247F475C5A0>, <app.database.models.Group object at 0x00000247F475C6B0>, <app.database.models.Group object at 0x00000247F475C7C0>, <app.database.models.Group object at 0x00000247F475C8D0>, <app.database.models.Group object at 0x00000247F475C9E0>, <app.database.models.Group object at 0x00000247F475CAF0>, <app.database.models.Group object at 0x00000247F475CC00>, <app.database.models.Group object at 0x00000247F475CD10>, <app.database.models.Group object at 0x00000247F475CE20>, <app.database.models.Group object at 0x00000247F475CF30>, <app.database.models.Group object at 0x00000247F475D040>, <app.database.models.Group object at 0x00000247F475D150>, <app.database.models.Group object at 0x00000247F475D260>, <app.database.models.Group object at 0x00000247F475D370>, <app.database.models.Group object at 0x00000247F475D480>, <app.database.models.Group object at 0x00000247F475D590>, <app.database.models.Group object at 0x00000247F475D6A0>, <app.database.models.Group object at 0x00000247F475D7B0>, <app.database.models.Group object at 0x00000247F475D8C0>, <app.database.models.Group object at 0x00000247F475DAE0>, <app.database.models.Group object at 0x00000247F475DD00>, <app.database.models.Group object at 0x00000247F475DF20>, <app.database.models.Group object at 0x00000247F475E030>, <app.database.models.Group object at 0x00000247F475E140>, <app.database.models.Group object at 0x00000247F475E250>, <app.database.models.Group object at 0x00000247F475E360>, <app.database.models.Group object at 0x00000247F475E470>, <app.database.models.Group object at 0x00000247F475E580>, <app.database.models.Group object at 0x00000247F475E690>, <app.database.models.Group object at 0x00000247F475E7A0>, <app.database.models.Group object at 0x00000247F475E8B0>, <app.database.models.Group object at 0x00000247F475E9C0>, <app.database.models.Group object at 0x00000247F475EAD0>, <app.database.models.Group object at 0x00000247F475EBE0>, <app.database.models.Group object at 0x00000247F475ECF0>, <app.database.models.Group object at 0x00000247F475EE00>, <app.database.models.Group object at 0x00000247F475EF10>]
2025-06-10 05:09:59,732 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-10 05:09:59,733 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-10 05:09:59,734 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-10 05:09:59,734 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-10 05:09:59,734 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-10 05:10:00,136 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-10 05:10:00,146 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 05:10:00,146 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 05:10:00,146 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 05:10:00,146 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1304.235412695282543438725651
2025-06-10 05:10:00,147 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=652.1177063476412717193628255
2025-06-10 05:10:00,147 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-10 05:10:00,147 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('652.1177063476412717193628255')], HighestMarginPerLot=652.1177063476412717193628255
2025-06-10 05:10:00,147 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1304.24, ContributingOrders=1 (based on individual stored margins)
2025-06-10 05:10:00,147 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=1304.24, AdditionalMargin=1304.24
2025-06-10 05:10:00,171 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=1304.24
2025-06-10 05:10:00,278 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '8393482184', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8928600000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1304.235412695282543438725651'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-10 05:10:00,338 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1304.24000000
2025-06-10 05:10:00,374 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-10 05:10:00,688 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-10 05:10:00,700 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-10 05:10:00,700 - INFO - orders - Using order model: DemoUserOrder
2025-06-10 05:10:00,706 - INFO - orders - Fetched 1 open orders for user 1
2025-06-10 05:10:00,722 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-10 05:10:00,731 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 1 pending orders
2025-06-10 05:10:42,660 - INFO - orders - Close order request received - Order ID: 8393482184, User ID: 1, User Type: demo
2025-06-10 05:10:42,660 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-10 05:10:42,661 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000247F480C050>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-10 05:10:42,661 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-10 05:10:42,661 - INFO - orders - Request to close order 8393482184 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-10 05:10:42,714 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-10 05:10:42,735 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 05:10:42,735 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 154): Type=BUY, Qty=2.00000000, StoredMargin=1304.23541270
2025-06-10 05:10:42,735 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=652.11770635
2025-06-10 05:10:42,735 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-10 05:10:42,736 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('652.11770635')], HighestMarginPerLot=652.11770635
2025-06-10 05:10:42,736 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1304.24, ContributingOrders=1 (based on individual stored margins)
2025-06-10 05:10:42,736 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 05:10:42,736 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 05:10:42,754 - INFO - orders - Existing entry commission for order 8393482184: 20.00000000
2025-06-10 05:10:42,755 - INFO - orders - Commission calculation for order 8393482184: entry=20.00000000, exit=20.000000000000, total=40.00
2025-06-10 05:10:42,757 - DEBUG - orders - Inverse conversion for PnL on Close: -572.000000000000000000000000 CAD / 1.3690900000 = -417.7957621485804439445178914 USD
2025-06-10 05:12:21,020 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 05:12:46,877 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-10 05:12:46,899 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000022D723698C0>, <app.database.models.Group object at 0x0000022D723699D0>, <app.database.models.Group object at 0x0000022D72369AE0>, <app.database.models.Group object at 0x0000022D72369BF0>, <app.database.models.Group object at 0x0000022D72369D00>, <app.database.models.Group object at 0x0000022D72369E10>, <app.database.models.Group object at 0x0000022D72369F20>, <app.database.models.Group object at 0x0000022D7236A030>, <app.database.models.Group object at 0x0000022D7236A140>, <app.database.models.Group object at 0x0000022D7236A250>, <app.database.models.Group object at 0x0000022D7236A360>, <app.database.models.Group object at 0x0000022D7236A470>, <app.database.models.Group object at 0x0000022D7236A580>, <app.database.models.Group object at 0x0000022D7236A690>, <app.database.models.Group object at 0x0000022D7236A7A0>, <app.database.models.Group object at 0x0000022D7236A8B0>, <app.database.models.Group object at 0x0000022D7236A9C0>, <app.database.models.Group object at 0x0000022D7236AAD0>, <app.database.models.Group object at 0x0000022D7236ABE0>, <app.database.models.Group object at 0x0000022D7236ACF0>, <app.database.models.Group object at 0x0000022D7236AE00>, <app.database.models.Group object at 0x0000022D7236AF10>, <app.database.models.Group object at 0x0000022D7236B020>, <app.database.models.Group object at 0x0000022D7236B130>, <app.database.models.Group object at 0x0000022D7236B240>, <app.database.models.Group object at 0x0000022D7236B350>, <app.database.models.Group object at 0x0000022D7236B460>, <app.database.models.Group object at 0x0000022D7236B570>, <app.database.models.Group object at 0x0000022D7236B680>, <app.database.models.Group object at 0x0000022D7236B790>, <app.database.models.Group object at 0x0000022D7236B8A0>, <app.database.models.Group object at 0x0000022D7236B9B0>, <app.database.models.Group object at 0x0000022D7236BAC0>, <app.database.models.Group object at 0x0000022D7236BBD0>, <app.database.models.Group object at 0x0000022D7236BCE0>, <app.database.models.Group object at 0x0000022D7236BDF0>, <app.database.models.Group object at 0x0000022D7236BF00>, <app.database.models.Group object at 0x0000022D720F78A0>, <app.database.models.Group object at 0x0000022D720F7680>, <app.database.models.Group object at 0x0000022D720F7790>, <app.database.models.Group object at 0x0000022D7249D7B0>, <app.database.models.Group object at 0x0000022D7249D480>, <app.database.models.Group object at 0x0000022D7249C050>, <app.database.models.Group object at 0x0000022D7249C160>, <app.database.models.Group object at 0x0000022D7249C270>, <app.database.models.Group object at 0x0000022D7249C380>, <app.database.models.Group object at 0x0000022D7249C490>, <app.database.models.Group object at 0x0000022D7249C5A0>, <app.database.models.Group object at 0x0000022D7249C6B0>, <app.database.models.Group object at 0x0000022D7249C7C0>, <app.database.models.Group object at 0x0000022D7249C8D0>, <app.database.models.Group object at 0x0000022D7249C9E0>, <app.database.models.Group object at 0x0000022D7249CAF0>, <app.database.models.Group object at 0x0000022D7249CC00>, <app.database.models.Group object at 0x0000022D7249CD10>, <app.database.models.Group object at 0x0000022D7249CE20>, <app.database.models.Group object at 0x0000022D7249CF30>, <app.database.models.Group object at 0x0000022D7249D040>, <app.database.models.Group object at 0x0000022D7249D150>, <app.database.models.Group object at 0x0000022D7249D260>, <app.database.models.Group object at 0x0000022D7249D370>, <app.database.models.Group object at 0x0000022D7249D8C0>, <app.database.models.Group object at 0x0000022D7249D590>, <app.database.models.Group object at 0x0000022D7249D9D0>, <app.database.models.Group object at 0x0000022D7249DAE0>, <app.database.models.Group object at 0x0000022D7249DBF0>, <app.database.models.Group object at 0x0000022D7249DD00>, <app.database.models.Group object at 0x0000022D7249DE10>, <app.database.models.Group object at 0x0000022D7249DF20>, <app.database.models.Group object at 0x0000022D7249E030>, <app.database.models.Group object at 0x0000022D7249E140>, <app.database.models.Group object at 0x0000022D7249E250>, <app.database.models.Group object at 0x0000022D7249E360>, <app.database.models.Group object at 0x0000022D7249E470>, <app.database.models.Group object at 0x0000022D7249E580>, <app.database.models.Group object at 0x0000022D7249E690>, <app.database.models.Group object at 0x0000022D7249E7A0>, <app.database.models.Group object at 0x0000022D7249E8B0>, <app.database.models.Group object at 0x0000022D7249E9C0>]
2025-06-10 05:12:46,899 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-10 05:12:46,900 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-10 05:12:46,900 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-10 05:12:46,900 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-10 05:12:46,900 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-10 05:12:47,244 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-10 05:12:47,257 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 05:12:47,258 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 05:12:47,258 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 05:12:47,259 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1304.077891153978189892556370
2025-06-10 05:12:47,259 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=652.038945576989094946278185
2025-06-10 05:12:47,260 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-10 05:12:47,260 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('652.038945576989094946278185')], HighestMarginPerLot=652.038945576989094946278185
2025-06-10 05:12:47,260 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1304.08, ContributingOrders=1 (based on individual stored margins)
2025-06-10 05:12:47,260 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=1304.08, AdditionalMargin=1304.08
2025-06-10 05:12:47,273 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=1304.08
2025-06-10 05:12:47,389 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '8711575560', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8927000000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1304.077891153978189892556370'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-10 05:12:47,459 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1304.08000000
2025-06-10 05:12:47,490 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-10 05:12:47,802 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-10 05:12:47,805 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-10 05:12:47,805 - INFO - orders - Using order model: DemoUserOrder
2025-06-10 05:12:47,814 - INFO - orders - Fetched 1 open orders for user 1
2025-06-10 05:12:47,830 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-10 05:12:47,842 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 1 pending orders
2025-06-10 05:13:07,798 - INFO - orders - Close order request received - Order ID: 8711575560, User ID: 1, User Type: demo
2025-06-10 05:13:07,798 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-10 05:13:07,799 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000022D722FB250>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-10 05:13:07,799 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-10 05:13:07,801 - INFO - orders - Request to close order 8711575560 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-10 05:13:07,834 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-10 05:13:07,880 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 05:13:07,881 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 155): Type=BUY, Qty=2.00000000, StoredMargin=1304.07789115
2025-06-10 05:13:07,883 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=652.038945575
2025-06-10 05:13:07,883 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-10 05:13:07,883 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('652.038945575')], HighestMarginPerLot=652.038945575
2025-06-10 05:13:07,883 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1304.08, ContributingOrders=1 (based on individual stored margins)
2025-06-10 05:13:07,883 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 05:13:07,883 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 05:13:07,920 - INFO - orders - Existing entry commission for order 8711575560: 20.00000000
2025-06-10 05:13:07,920 - INFO - orders - Commission calculation for order 8711575560: entry=20.00000000, exit=20.000000000000, total=40.00
2025-06-10 05:13:07,927 - DEBUG - orders - Inverse conversion for PnL on Close: -540.000000000000000000000000 CAD / 1.3690900000 = -394.4225726577507687588105968 USD
2025-06-10 05:15:52,592 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 05:17:00,863 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-10 05:17:00,875 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000022D2EEDD6A0>, <app.database.models.Group object at 0x0000022D2EEDDD00>, <app.database.models.Group object at 0x0000022D2EEDDBF0>, <app.database.models.Group object at 0x0000022D2EEDDE10>, <app.database.models.Group object at 0x0000022D2EEDDF20>, <app.database.models.Group object at 0x0000022D2EEDE030>, <app.database.models.Group object at 0x0000022D2EEDE140>, <app.database.models.Group object at 0x0000022D2EEDE250>, <app.database.models.Group object at 0x0000022D2EEDE360>, <app.database.models.Group object at 0x0000022D2EEDE470>, <app.database.models.Group object at 0x0000022D2EEDE580>, <app.database.models.Group object at 0x0000022D2EEDE690>, <app.database.models.Group object at 0x0000022D2EEDE7A0>, <app.database.models.Group object at 0x0000022D2EEDE8B0>, <app.database.models.Group object at 0x0000022D2EEDE9C0>, <app.database.models.Group object at 0x0000022D2EEDEAD0>, <app.database.models.Group object at 0x0000022D2EEDEBE0>, <app.database.models.Group object at 0x0000022D2EEDECF0>, <app.database.models.Group object at 0x0000022D2EEDEE00>, <app.database.models.Group object at 0x0000022D2EEDEF10>, <app.database.models.Group object at 0x0000022D2EEDF020>, <app.database.models.Group object at 0x0000022D2EEDF130>, <app.database.models.Group object at 0x0000022D2EEDF240>, <app.database.models.Group object at 0x0000022D2EEDF350>, <app.database.models.Group object at 0x0000022D2EEDF460>, <app.database.models.Group object at 0x0000022D2EEDF570>, <app.database.models.Group object at 0x0000022D2EEDF680>, <app.database.models.Group object at 0x0000022D2EEDF790>, <app.database.models.Group object at 0x0000022D2EEDF8A0>, <app.database.models.Group object at 0x0000022D2EEDF9B0>, <app.database.models.Group object at 0x0000022D2EEDFAC0>, <app.database.models.Group object at 0x0000022D2EEDFBD0>, <app.database.models.Group object at 0x0000022D2EEDFCE0>, <app.database.models.Group object at 0x0000022D2EEDFDF0>, <app.database.models.Group object at 0x0000022D2EEDFF00>, <app.database.models.Group object at 0x0000022D2EEDC8D0>, <app.database.models.Group object at 0x0000022D2EB97240>, <app.database.models.Group object at 0x0000022D2EB97350>, <app.database.models.Group object at 0x0000022D2EB97570>, <app.database.models.Group object at 0x0000022D2F04DBF0>, <app.database.models.Group object at 0x0000022D2F04D7B0>, <app.database.models.Group object at 0x0000022D2F04C050>, <app.database.models.Group object at 0x0000022D2F04C160>, <app.database.models.Group object at 0x0000022D2F04C270>, <app.database.models.Group object at 0x0000022D2F04C380>, <app.database.models.Group object at 0x0000022D2F04C490>, <app.database.models.Group object at 0x0000022D2F04C5A0>, <app.database.models.Group object at 0x0000022D2F04C6B0>, <app.database.models.Group object at 0x0000022D2F04C7C0>, <app.database.models.Group object at 0x0000022D2F04C8D0>, <app.database.models.Group object at 0x0000022D2F04C9E0>, <app.database.models.Group object at 0x0000022D2F04CAF0>, <app.database.models.Group object at 0x0000022D2F04CC00>, <app.database.models.Group object at 0x0000022D2F04CD10>, <app.database.models.Group object at 0x0000022D2F04CE20>, <app.database.models.Group object at 0x0000022D2F04CF30>, <app.database.models.Group object at 0x0000022D2F04D040>, <app.database.models.Group object at 0x0000022D2F04D150>, <app.database.models.Group object at 0x0000022D2F04D260>, <app.database.models.Group object at 0x0000022D2F04D370>, <app.database.models.Group object at 0x0000022D2F04D480>, <app.database.models.Group object at 0x0000022D2F04D590>, <app.database.models.Group object at 0x0000022D2F04D6A0>, <app.database.models.Group object at 0x0000022D2F04D8C0>, <app.database.models.Group object at 0x0000022D2F04DAE0>, <app.database.models.Group object at 0x0000022D2F04DD00>, <app.database.models.Group object at 0x0000022D2F04DE10>, <app.database.models.Group object at 0x0000022D2F04DF20>, <app.database.models.Group object at 0x0000022D2F04E030>, <app.database.models.Group object at 0x0000022D2F04E140>, <app.database.models.Group object at 0x0000022D2F04E250>, <app.database.models.Group object at 0x0000022D2F04E360>, <app.database.models.Group object at 0x0000022D2F04E470>, <app.database.models.Group object at 0x0000022D2F04E580>, <app.database.models.Group object at 0x0000022D2F04E690>, <app.database.models.Group object at 0x0000022D2F04E7A0>, <app.database.models.Group object at 0x0000022D2F04E8B0>, <app.database.models.Group object at 0x0000022D2F04E9C0>, <app.database.models.Group object at 0x0000022D2F04EAD0>]
2025-06-10 05:17:00,876 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-10 05:17:00,876 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-10 05:17:00,889 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-10 05:17:00,889 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-10 05:17:00,889 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-10 05:17:01,185 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-10 05:17:01,196 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 05:17:01,196 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 05:17:01,196 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 05:17:01,196 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1303.936892849317069607771529
2025-06-10 05:17:01,196 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.9684464246585348038857645
2025-06-10 05:17:01,196 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-10 05:17:01,196 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.9684464246585348038857645')], HighestMarginPerLot=651.9684464246585348038857645
2025-06-10 05:17:01,196 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1303.94, ContributingOrders=1 (based on individual stored margins)
2025-06-10 05:17:01,196 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=1303.94, AdditionalMargin=1303.94
2025-06-10 05:17:01,207 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=1303.94
2025-06-10 05:17:01,259 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '8406935768', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8926100000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1303.936892849317069607771529'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-10 05:17:01,292 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1303.94000000
2025-06-10 05:17:01,319 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-10 05:17:01,499 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-10 05:17:01,501 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-10 05:17:01,501 - INFO - orders - Using order model: DemoUserOrder
2025-06-10 05:17:01,509 - INFO - orders - Fetched 1 open orders for user 1
2025-06-10 05:17:01,516 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-10 05:17:01,518 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 1 pending orders
2025-06-10 05:17:23,686 - INFO - orders - Close order request received - Order ID: 8406935768, User ID: 1, User Type: demo
2025-06-10 05:17:23,686 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-10 05:17:23,686 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000022D2EF82520>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-10 05:17:23,686 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-10 05:17:23,687 - INFO - orders - Request to close order 8406935768 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-10 05:17:23,698 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-10 05:17:23,715 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 05:17:23,715 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 156): Type=BUY, Qty=2.00000000, StoredMargin=1303.93689285
2025-06-10 05:17:23,715 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.968446425
2025-06-10 05:17:23,715 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-10 05:17:23,715 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.968446425')], HighestMarginPerLot=651.968446425
2025-06-10 05:17:23,715 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1303.94, ContributingOrders=1 (based on individual stored margins)
2025-06-10 05:17:23,715 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 05:17:23,715 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 05:17:23,729 - INFO - orders - Existing entry commission for order 8406935768: 20.00000000
2025-06-10 05:17:23,729 - INFO - orders - Commission calculation for order 8406935768: entry=20.00000000, exit=20.000000000000, total=40.00
2025-06-10 05:17:23,730 - DEBUG - orders - Inverse conversion for PnL on Close: -522.000000000000000000000000 CAD / 1.3691000000 = -381.2723687093711197136805200 USD
2025-06-10 05:17:23,783 - ERROR - orders - Error processing close order: cannot access local variable 'user_id' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1072, in close_order
    await update_user_static_orders(user_id, db, redis_client, user_type)
                                    ^^^^^^^
UnboundLocalError: cannot access local variable 'user_id' where it is not associated with a value
2025-06-10 05:17:23,787 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: cannot access local variable 'user_id' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1072, in close_order
    await update_user_static_orders(user_id, db, redis_client, user_type)
                                    ^^^^^^^
UnboundLocalError: cannot access local variable 'user_id' where it is not associated with a value

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1079, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: cannot access local variable 'user_id' where it is not associated with a value
2025-06-10 05:20:10,813 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 05:20:52,028 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 05:21:28,085 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-10 05:21:28,103 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000024814BA98C0>, <app.database.models.Group object at 0x0000024814BA99D0>, <app.database.models.Group object at 0x0000024814BA9AE0>, <app.database.models.Group object at 0x0000024814BA9BF0>, <app.database.models.Group object at 0x0000024814BA9D00>, <app.database.models.Group object at 0x0000024814BA9E10>, <app.database.models.Group object at 0x0000024814BA9F20>, <app.database.models.Group object at 0x0000024814BAA030>, <app.database.models.Group object at 0x0000024814BAA140>, <app.database.models.Group object at 0x0000024814BAA250>, <app.database.models.Group object at 0x0000024814BAA360>, <app.database.models.Group object at 0x0000024814BAA470>, <app.database.models.Group object at 0x0000024814BAA580>, <app.database.models.Group object at 0x0000024814BAA690>, <app.database.models.Group object at 0x0000024814BAA7A0>, <app.database.models.Group object at 0x0000024814BAA8B0>, <app.database.models.Group object at 0x0000024814BAA9C0>, <app.database.models.Group object at 0x0000024814BAAAD0>, <app.database.models.Group object at 0x0000024814BAABE0>, <app.database.models.Group object at 0x0000024814BAACF0>, <app.database.models.Group object at 0x0000024814BAAE00>, <app.database.models.Group object at 0x0000024814BAAF10>, <app.database.models.Group object at 0x0000024814BAB020>, <app.database.models.Group object at 0x0000024814BAB130>, <app.database.models.Group object at 0x0000024814BAB240>, <app.database.models.Group object at 0x0000024814BAB350>, <app.database.models.Group object at 0x0000024814BAB460>, <app.database.models.Group object at 0x0000024814BAB570>, <app.database.models.Group object at 0x0000024814BAB680>, <app.database.models.Group object at 0x0000024814BAB790>, <app.database.models.Group object at 0x0000024814BAB8A0>, <app.database.models.Group object at 0x0000024814BAB9B0>, <app.database.models.Group object at 0x0000024814BABAC0>, <app.database.models.Group object at 0x0000024814BABBD0>, <app.database.models.Group object at 0x0000024814BABCE0>, <app.database.models.Group object at 0x0000024814BABDF0>, <app.database.models.Group object at 0x0000024814BABF00>, <app.database.models.Group object at 0x00000248149378A0>, <app.database.models.Group object at 0x0000024814937680>, <app.database.models.Group object at 0x0000024814937790>, <app.database.models.Group object at 0x0000024814CBD8C0>, <app.database.models.Group object at 0x0000024814CBD480>, <app.database.models.Group object at 0x0000024814CBC050>, <app.database.models.Group object at 0x0000024814CBC160>, <app.database.models.Group object at 0x0000024814CBC270>, <app.database.models.Group object at 0x0000024814CBC380>, <app.database.models.Group object at 0x0000024814CBC490>, <app.database.models.Group object at 0x0000024814CBC5A0>, <app.database.models.Group object at 0x0000024814CBC6B0>, <app.database.models.Group object at 0x0000024814CBC7C0>, <app.database.models.Group object at 0x0000024814CBC8D0>, <app.database.models.Group object at 0x0000024814CBC9E0>, <app.database.models.Group object at 0x0000024814CBCAF0>, <app.database.models.Group object at 0x0000024814CBCC00>, <app.database.models.Group object at 0x0000024814CBCD10>, <app.database.models.Group object at 0x0000024814CBCE20>, <app.database.models.Group object at 0x0000024814CBCF30>, <app.database.models.Group object at 0x0000024814CBD040>, <app.database.models.Group object at 0x0000024814CBD150>, <app.database.models.Group object at 0x0000024814CBD260>, <app.database.models.Group object at 0x0000024814CBD370>, <app.database.models.Group object at 0x0000024814CBD590>, <app.database.models.Group object at 0x0000024814CBD7B0>, <app.database.models.Group object at 0x0000024814CBD9D0>, <app.database.models.Group object at 0x0000024814CBDAE0>, <app.database.models.Group object at 0x0000024814CBDBF0>, <app.database.models.Group object at 0x0000024814CBDD00>, <app.database.models.Group object at 0x0000024814CBDE10>, <app.database.models.Group object at 0x0000024814CBDF20>, <app.database.models.Group object at 0x0000024814CBE030>, <app.database.models.Group object at 0x0000024814CBE140>, <app.database.models.Group object at 0x0000024814CBE250>, <app.database.models.Group object at 0x0000024814CBE360>, <app.database.models.Group object at 0x0000024814CBE470>, <app.database.models.Group object at 0x0000024814CBE580>, <app.database.models.Group object at 0x0000024814CBE690>, <app.database.models.Group object at 0x0000024814CBE7A0>, <app.database.models.Group object at 0x0000024814CBE8B0>, <app.database.models.Group object at 0x0000024814CBE9C0>]
2025-06-10 05:21:28,104 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-10 05:21:28,104 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-10 05:21:28,104 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-10 05:21:28,104 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-10 05:21:28,104 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-10 05:21:28,444 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-10 05:21:28,450 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 05:21:28,450 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 05:21:28,451 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 05:21:28,451 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1303.787668531529820768635242
2025-06-10 05:21:28,451 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.893834265764910384317621
2025-06-10 05:21:28,451 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-10 05:21:28,451 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.893834265764910384317621')], HighestMarginPerLot=651.893834265764910384317621
2025-06-10 05:21:28,451 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1303.79, ContributingOrders=1 (based on individual stored margins)
2025-06-10 05:21:28,451 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=1303.79, AdditionalMargin=1303.79
2025-06-10 05:21:28,467 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=1303.79
2025-06-10 05:21:28,701 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '8571539160', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8925600000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1303.787668531529820768635242'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-10 05:21:28,950 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1303.79000000
2025-06-10 05:21:28,968 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-10 05:21:29,322 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-10 05:21:29,323 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-10 05:21:29,323 - INFO - orders - Using order model: DemoUserOrder
2025-06-10 05:21:29,332 - INFO - orders - Fetched 1 open orders for user 1
2025-06-10 05:21:29,344 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-10 05:21:29,350 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 1 pending orders
2025-06-10 05:21:46,818 - INFO - orders - Close order request received - Order ID: 8571539160, User ID: 1, User Type: demo
2025-06-10 05:21:46,818 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-10 05:21:46,819 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000024814B3B250>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-10 05:21:46,819 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-10 05:21:46,820 - INFO - orders - Request to close order 8571539160 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-10 05:21:46,857 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-10 05:21:46,896 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 05:21:46,898 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 157): Type=BUY, Qty=2.00000000, StoredMargin=1303.78766853
2025-06-10 05:21:46,898 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.893834265
2025-06-10 05:21:46,899 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-10 05:21:46,899 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.893834265')], HighestMarginPerLot=651.893834265
2025-06-10 05:21:46,899 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1303.79, ContributingOrders=1 (based on individual stored margins)
2025-06-10 05:21:46,899 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 05:21:46,900 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 05:21:46,934 - INFO - orders - Existing entry commission for order 8571539160: 20.00000000
2025-06-10 05:21:46,934 - INFO - orders - Commission calculation for order 8571539160: entry=20.00000000, exit=20.000000000000, total=40.00
2025-06-10 05:21:46,942 - DEBUG - orders - Inverse conversion for PnL on Close: -512.000000000000000000000000 CAD / 1.3691900000 = -373.9437185489230859121086190 USD
2025-06-10 05:21:47,069 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-10 05:21:47,070 - INFO - orders - Using order model: DemoUserOrder
2025-06-10 05:21:47,087 - INFO - orders - Fetched 0 open orders for user 1
2025-06-10 05:21:47,102 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-10 05:21:47,108 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 1 pending orders
2025-06-10 05:34:05,752 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 05:44:27,369 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 05:45:17,674 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-10 05:45:17,703 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000018A096E1AE0>, <app.database.models.Group object at 0x0000018A096E1BF0>, <app.database.models.Group object at 0x0000018A096E1D00>, <app.database.models.Group object at 0x0000018A096E1E10>, <app.database.models.Group object at 0x0000018A096E1F20>, <app.database.models.Group object at 0x0000018A096E2030>, <app.database.models.Group object at 0x0000018A096E2140>, <app.database.models.Group object at 0x0000018A096E2250>, <app.database.models.Group object at 0x0000018A096E2360>, <app.database.models.Group object at 0x0000018A096E2470>, <app.database.models.Group object at 0x0000018A096E2580>, <app.database.models.Group object at 0x0000018A096E2690>, <app.database.models.Group object at 0x0000018A096E27A0>, <app.database.models.Group object at 0x0000018A096E28B0>, <app.database.models.Group object at 0x0000018A096E29C0>, <app.database.models.Group object at 0x0000018A096E2AD0>, <app.database.models.Group object at 0x0000018A096E2BE0>, <app.database.models.Group object at 0x0000018A096E2CF0>, <app.database.models.Group object at 0x0000018A096E2E00>, <app.database.models.Group object at 0x0000018A096E2F10>, <app.database.models.Group object at 0x0000018A096E3020>, <app.database.models.Group object at 0x0000018A096E3130>, <app.database.models.Group object at 0x0000018A096E3240>, <app.database.models.Group object at 0x0000018A096E3350>, <app.database.models.Group object at 0x0000018A096E3460>, <app.database.models.Group object at 0x0000018A096E3570>, <app.database.models.Group object at 0x0000018A096E3680>, <app.database.models.Group object at 0x0000018A096E3790>, <app.database.models.Group object at 0x0000018A096E38A0>, <app.database.models.Group object at 0x0000018A096E39B0>, <app.database.models.Group object at 0x0000018A096E3AC0>, <app.database.models.Group object at 0x0000018A096E3BD0>, <app.database.models.Group object at 0x0000018A096E3CE0>, <app.database.models.Group object at 0x0000018A096E3DF0>, <app.database.models.Group object at 0x0000018A096E3F00>, <app.database.models.Group object at 0x0000018A0949F9B0>, <app.database.models.Group object at 0x0000018A0949F8A0>, <app.database.models.Group object at 0x0000018A0949F790>, <app.database.models.Group object at 0x0000018A098318C0>, <app.database.models.Group object at 0x0000018A09831590>, <app.database.models.Group object at 0x0000018A09830050>, <app.database.models.Group object at 0x0000018A09830160>, <app.database.models.Group object at 0x0000018A09830270>, <app.database.models.Group object at 0x0000018A09830380>, <app.database.models.Group object at 0x0000018A09830490>, <app.database.models.Group object at 0x0000018A098305A0>, <app.database.models.Group object at 0x0000018A098306B0>, <app.database.models.Group object at 0x0000018A098307C0>, <app.database.models.Group object at 0x0000018A098308D0>, <app.database.models.Group object at 0x0000018A098309E0>, <app.database.models.Group object at 0x0000018A09830AF0>, <app.database.models.Group object at 0x0000018A09830C00>, <app.database.models.Group object at 0x0000018A09830D10>, <app.database.models.Group object at 0x0000018A09830E20>, <app.database.models.Group object at 0x0000018A09830F30>, <app.database.models.Group object at 0x0000018A09831040>, <app.database.models.Group object at 0x0000018A09831150>, <app.database.models.Group object at 0x0000018A09831260>, <app.database.models.Group object at 0x0000018A09831370>, <app.database.models.Group object at 0x0000018A09831480>, <app.database.models.Group object at 0x0000018A098316A0>, <app.database.models.Group object at 0x0000018A09831AE0>, <app.database.models.Group object at 0x0000018A098319D0>, <app.database.models.Group object at 0x0000018A09831BF0>, <app.database.models.Group object at 0x0000018A09831D00>, <app.database.models.Group object at 0x0000018A09831E10>, <app.database.models.Group object at 0x0000018A09831F20>, <app.database.models.Group object at 0x0000018A09832030>, <app.database.models.Group object at 0x0000018A09832140>, <app.database.models.Group object at 0x0000018A09832250>, <app.database.models.Group object at 0x0000018A09832360>, <app.database.models.Group object at 0x0000018A09832470>, <app.database.models.Group object at 0x0000018A09832580>, <app.database.models.Group object at 0x0000018A09832690>, <app.database.models.Group object at 0x0000018A098327A0>, <app.database.models.Group object at 0x0000018A098328B0>, <app.database.models.Group object at 0x0000018A098329C0>, <app.database.models.Group object at 0x0000018A09832AD0>, <app.database.models.Group object at 0x0000018A09832BE0>]
2025-06-10 05:45:17,704 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-10 05:45:17,704 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-10 05:45:17,704 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-10 05:45:17,704 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-10 05:45:17,704 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-10 05:45:18,025 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-10 05:45:18,048 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 05:45:18,049 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 05:45:18,049 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 05:45:18,049 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1303.960251351746310097910273
2025-06-10 05:45:18,050 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.9801256758731550489551365
2025-06-10 05:45:18,050 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-10 05:45:18,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.9801256758731550489551365')], HighestMarginPerLot=651.9801256758731550489551365
2025-06-10 05:45:18,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1303.96, ContributingOrders=1 (based on individual stored margins)
2025-06-10 05:45:18,051 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=1303.96, AdditionalMargin=1303.96
2025-06-10 05:45:18,090 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=1303.96
2025-06-10 05:45:18,198 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '9800209232', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8923000000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1303.960251351746310097910273'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-10 05:45:18,289 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1303.96000000
2025-06-10 05:45:18,343 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-10 05:45:18,659 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-10 05:45:18,678 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-10 05:45:18,679 - INFO - orders - Using order model: DemoUserOrder
2025-06-10 05:45:18,715 - INFO - orders - Fetched 1 open orders for user 1
2025-06-10 05:45:18,739 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-10 05:45:18,749 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 1 pending orders
2025-06-10 05:45:35,976 - INFO - orders - Close order request received - Order ID: 9800209232, User ID: 1, User Type: demo
2025-06-10 05:45:35,976 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-10 05:45:35,976 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000018A098D0050>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-10 05:45:35,977 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-10 05:45:35,977 - INFO - orders - Request to close order 9800209232 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-10 05:45:36,008 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-10 05:45:36,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 05:45:36,066 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 158): Type=BUY, Qty=2.00000000, StoredMargin=1303.96025135
2025-06-10 05:45:36,068 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.980125675
2025-06-10 05:45:36,068 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-10 05:45:36,069 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.980125675')], HighestMarginPerLot=651.980125675
2025-06-10 05:45:36,069 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1303.96, ContributingOrders=1 (based on individual stored margins)
2025-06-10 05:45:36,070 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 05:45:36,070 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 05:45:36,112 - INFO - orders - Existing entry commission for order 9800209232: 20.00000000
2025-06-10 05:45:36,112 - INFO - orders - Commission calculation for order 9800209232: entry=20.00000000, exit=20.000000000000, total=40.00
2025-06-10 05:45:36,116 - DEBUG - orders - Inverse conversion for PnL on Close: -460.000000000000000000000000 CAD / 1.3685200000 = -336.1295414023909040423230936 USD
2025-06-10 05:45:36,230 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=84584.13000000, margin=0
2025-06-10 05:45:36,231 - INFO - orders - Setting user data cache for user 1 with wallet_balance=84584.13000000, margin=0
2025-06-10 05:45:36,234 - INFO - orders - User data cache updated for user 1
2025-06-10 05:45:36,234 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-10 05:45:36,235 - INFO - orders - Using order model: DemoUserOrder
2025-06-10 05:45:36,246 - INFO - orders - Fetched 0 open orders for user 1
2025-06-10 05:45:36,275 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-10 05:45:36,280 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 1 pending orders
2025-06-10 05:45:36,282 - INFO - orders - Publishing order update for user 1
2025-06-10 05:45:36,299 - INFO - orders - Publishing user data update for user 1
2025-06-10 05:45:36,305 - INFO - orders - Publishing market data trigger
2025-06-10 21:32:44,510 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 21:34:25,618 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-10 21:34:25,645 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x00000210C1DC09E0>, <app.database.models.Group object at 0x00000210C1DC1AE0>, <app.database.models.Group object at 0x00000210C1DC1BF0>, <app.database.models.Group object at 0x00000210C1DC1D00>, <app.database.models.Group object at 0x00000210C1DC1E10>, <app.database.models.Group object at 0x00000210C1DC1F20>, <app.database.models.Group object at 0x00000210C1DC2030>, <app.database.models.Group object at 0x00000210C1DC2140>, <app.database.models.Group object at 0x00000210C1DC2250>, <app.database.models.Group object at 0x00000210C1DC2360>, <app.database.models.Group object at 0x00000210C1DC2470>, <app.database.models.Group object at 0x00000210C1DC2580>, <app.database.models.Group object at 0x00000210C1DC2690>, <app.database.models.Group object at 0x00000210C1DC27A0>, <app.database.models.Group object at 0x00000210C1DC28B0>, <app.database.models.Group object at 0x00000210C1DC29C0>, <app.database.models.Group object at 0x00000210C1DC2AD0>, <app.database.models.Group object at 0x00000210C1DC2BE0>, <app.database.models.Group object at 0x00000210C1DC2CF0>, <app.database.models.Group object at 0x00000210C1DC2E00>, <app.database.models.Group object at 0x00000210C1DC2F10>, <app.database.models.Group object at 0x00000210C1DC3020>, <app.database.models.Group object at 0x00000210C1DC3130>, <app.database.models.Group object at 0x00000210C1DC3240>, <app.database.models.Group object at 0x00000210C1DC3350>, <app.database.models.Group object at 0x00000210C1DC3460>, <app.database.models.Group object at 0x00000210C1DC3570>, <app.database.models.Group object at 0x00000210C1DC3680>, <app.database.models.Group object at 0x00000210C1DC3790>, <app.database.models.Group object at 0x00000210C1DC38A0>, <app.database.models.Group object at 0x00000210C1DC39B0>, <app.database.models.Group object at 0x00000210C1DC3AC0>, <app.database.models.Group object at 0x00000210C1DC3BD0>, <app.database.models.Group object at 0x00000210C1DC3CE0>, <app.database.models.Group object at 0x00000210C1DC3DF0>, <app.database.models.Group object at 0x00000210C1DC3F00>, <app.database.models.Group object at 0x00000210C1DC0380>, <app.database.models.Group object at 0x00000210C1907130>, <app.database.models.Group object at 0x00000210C1907020>, <app.database.models.Group object at 0x00000210C1906690>, <app.database.models.Group object at 0x00000210C1E31370>, <app.database.models.Group object at 0x00000210C1E31260>, <app.database.models.Group object at 0x00000210C1E30050>, <app.database.models.Group object at 0x00000210C1E30160>, <app.database.models.Group object at 0x00000210C1E30270>, <app.database.models.Group object at 0x00000210C1E30380>, <app.database.models.Group object at 0x00000210C1E30490>, <app.database.models.Group object at 0x00000210C1E305A0>, <app.database.models.Group object at 0x00000210C1E306B0>, <app.database.models.Group object at 0x00000210C1E307C0>, <app.database.models.Group object at 0x00000210C1E308D0>, <app.database.models.Group object at 0x00000210C1E309E0>, <app.database.models.Group object at 0x00000210C1E30AF0>, <app.database.models.Group object at 0x00000210C1E30C00>, <app.database.models.Group object at 0x00000210C1E30D10>, <app.database.models.Group object at 0x00000210C1E30E20>, <app.database.models.Group object at 0x00000210C1E30F30>, <app.database.models.Group object at 0x00000210C1E31040>, <app.database.models.Group object at 0x00000210C1E31150>, <app.database.models.Group object at 0x00000210C1E31590>, <app.database.models.Group object at 0x00000210C1E316A0>, <app.database.models.Group object at 0x00000210C1E317B0>, <app.database.models.Group object at 0x00000210C1E318C0>, <app.database.models.Group object at 0x00000210C1E319D0>, <app.database.models.Group object at 0x00000210C1E31AE0>, <app.database.models.Group object at 0x00000210C1E31BF0>, <app.database.models.Group object at 0x00000210C1E31D00>, <app.database.models.Group object at 0x00000210C1E31E10>, <app.database.models.Group object at 0x00000210C1E31F20>, <app.database.models.Group object at 0x00000210C1E32030>, <app.database.models.Group object at 0x00000210C1E32140>, <app.database.models.Group object at 0x00000210C1E32250>, <app.database.models.Group object at 0x00000210C1E32360>, <app.database.models.Group object at 0x00000210C1E32470>, <app.database.models.Group object at 0x00000210C1E32580>, <app.database.models.Group object at 0x00000210C1E32690>, <app.database.models.Group object at 0x00000210C1E327A0>, <app.database.models.Group object at 0x00000210C1E328B0>, <app.database.models.Group object at 0x00000210C1E329C0>]
2025-06-10 21:34:25,646 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-10 21:34:25,646 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-10 21:34:25,646 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-10 21:34:25,646 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-10 21:34:25,647 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-10 21:34:26,419 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-10 21:34:26,427 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 21:34:26,427 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 21:34:26,427 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 21:34:26,428 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1302.589741902944981689801110
2025-06-10 21:34:26,428 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.294870951472490844900555
2025-06-10 21:34:26,428 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-10 21:34:26,428 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.294870951472490844900555')], HighestMarginPerLot=651.294870951472490844900555
2025-06-10 21:34:26,428 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1302.59, ContributingOrders=1 (based on individual stored margins)
2025-06-10 21:34:26,428 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=1302.59, AdditionalMargin=1302.59
2025-06-10 21:34:26,446 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=1302.59
2025-06-10 21:34:26,679 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '1493035893', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8910300000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1302.589741902944981689801110'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-10 21:34:26,737 - ERROR - orders - Unexpected error in place_order: (pymysql.err.OperationalError) (1054, "Unknown column 'order_id' in 'field list'")
[SQL: INSERT INTO order_action_history (user_id, user_type, order_id, cancel_id, close_id, action_type, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: (1, 'demo', '1493035893', None, None, 'CREATE', None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1054, "Unknown column 'order_id' in 'field list'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 381, in place_order
    db_order = await crud_order.create_order(db, order_create_internal, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 74, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.OperationalError: (pymysql.err.OperationalError) (1054, "Unknown column 'order_id' in 'field list'")
[SQL: INSERT INTO order_action_history (user_id, user_type, order_id, cancel_id, close_id, action_type, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: (1, 'demo', '1493035893', None, None, 'CREATE', None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2025-06-10 21:52:33,536 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 21:55:54,561 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 21:56:23,569 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-10 21:56:23,585 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x00000294164D5D00>, <app.database.models.Group object at 0x00000294164D5E10>, <app.database.models.Group object at 0x00000294164D5F20>, <app.database.models.Group object at 0x00000294164D6030>, <app.database.models.Group object at 0x00000294164D6140>, <app.database.models.Group object at 0x00000294164D6250>, <app.database.models.Group object at 0x00000294164D6360>, <app.database.models.Group object at 0x00000294164D6470>, <app.database.models.Group object at 0x00000294164D6580>, <app.database.models.Group object at 0x00000294164D6690>, <app.database.models.Group object at 0x00000294164D67A0>, <app.database.models.Group object at 0x00000294164D68B0>, <app.database.models.Group object at 0x00000294164D69C0>, <app.database.models.Group object at 0x00000294164D6AD0>, <app.database.models.Group object at 0x00000294164D6BE0>, <app.database.models.Group object at 0x00000294164D6CF0>, <app.database.models.Group object at 0x00000294164D6E00>, <app.database.models.Group object at 0x00000294164D6F10>, <app.database.models.Group object at 0x00000294164D7020>, <app.database.models.Group object at 0x00000294164D7130>, <app.database.models.Group object at 0x00000294164D7240>, <app.database.models.Group object at 0x00000294164D7350>, <app.database.models.Group object at 0x00000294164D7460>, <app.database.models.Group object at 0x00000294164D7570>, <app.database.models.Group object at 0x00000294164D7680>, <app.database.models.Group object at 0x00000294164D7790>, <app.database.models.Group object at 0x00000294164D78A0>, <app.database.models.Group object at 0x00000294164D79B0>, <app.database.models.Group object at 0x00000294164D7AC0>, <app.database.models.Group object at 0x00000294164D7BD0>, <app.database.models.Group object at 0x00000294164D7CE0>, <app.database.models.Group object at 0x00000294164D7DF0>, <app.database.models.Group object at 0x00000294164D7F00>, <app.database.models.Group object at 0x00000294162B3020>, <app.database.models.Group object at 0x00000294162B3CE0>, <app.database.models.Group object at 0x00000294162B3AC0>, <app.database.models.Group object at 0x00000294162B3BD0>, <app.database.models.Group object at 0x000002941664DD00>, <app.database.models.Group object at 0x000002941664DE10>, <app.database.models.Group object at 0x000002941664D8C0>, <app.database.models.Group object at 0x000002941664C050>, <app.database.models.Group object at 0x000002941664C160>, <app.database.models.Group object at 0x000002941664C270>, <app.database.models.Group object at 0x000002941664C380>, <app.database.models.Group object at 0x000002941664C490>, <app.database.models.Group object at 0x000002941664C5A0>, <app.database.models.Group object at 0x000002941664C6B0>, <app.database.models.Group object at 0x000002941664C7C0>, <app.database.models.Group object at 0x000002941664C8D0>, <app.database.models.Group object at 0x000002941664C9E0>, <app.database.models.Group object at 0x000002941664CAF0>, <app.database.models.Group object at 0x000002941664CC00>, <app.database.models.Group object at 0x000002941664CD10>, <app.database.models.Group object at 0x000002941664CE20>, <app.database.models.Group object at 0x000002941664CF30>, <app.database.models.Group object at 0x000002941664D040>, <app.database.models.Group object at 0x000002941664D150>, <app.database.models.Group object at 0x000002941664D260>, <app.database.models.Group object at 0x000002941664D370>, <app.database.models.Group object at 0x000002941664D480>, <app.database.models.Group object at 0x000002941664D590>, <app.database.models.Group object at 0x000002941664D6A0>, <app.database.models.Group object at 0x000002941664D7B0>, <app.database.models.Group object at 0x000002941664DBF0>, <app.database.models.Group object at 0x000002941664D9D0>, <app.database.models.Group object at 0x000002941664DF20>, <app.database.models.Group object at 0x000002941664E030>, <app.database.models.Group object at 0x000002941664E140>, <app.database.models.Group object at 0x000002941664E250>, <app.database.models.Group object at 0x000002941664E360>, <app.database.models.Group object at 0x000002941664E470>, <app.database.models.Group object at 0x000002941664E580>, <app.database.models.Group object at 0x000002941664E690>, <app.database.models.Group object at 0x000002941664E7A0>, <app.database.models.Group object at 0x000002941664E8B0>, <app.database.models.Group object at 0x000002941664E9C0>, <app.database.models.Group object at 0x000002941664EAD0>, <app.database.models.Group object at 0x000002941664EBE0>, <app.database.models.Group object at 0x000002941664ECF0>]
2025-06-10 21:56:23,585 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-10 21:56:23,586 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-10 21:56:23,586 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-10 21:56:23,586 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-10 21:56:23,586 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-10 21:56:23,984 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-10 21:56:23,992 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 21:56:23,992 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 21:56:23,992 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 21:56:23,992 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1302.302463270228784445581463
2025-06-10 21:56:23,992 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.1512316351143922227907315
2025-06-10 21:56:23,993 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-10 21:56:23,993 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.1512316351143922227907315')], HighestMarginPerLot=651.1512316351143922227907315
2025-06-10 21:56:23,993 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1302.30, ContributingOrders=1 (based on individual stored margins)
2025-06-10 21:56:23,993 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=1302.30, AdditionalMargin=1302.30
2025-06-10 21:56:24,010 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=1302.30
2025-06-10 21:56:24,100 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '8705455085', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8908400000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1302.302463270228784445581463'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-10 21:56:24,189 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1302.30000000
2025-06-10 21:56:24,236 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-10 21:56:24,368 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-10 21:56:24,370 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-10 21:56:24,370 - INFO - orders - Using order model: DemoUserOrder
2025-06-10 21:56:24,376 - INFO - orders - Fetched 1 open orders for user 1
2025-06-10 21:56:24,390 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-10 21:56:24,410 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 1 pending orders
2025-06-10 21:57:03,313 - INFO - orders - Close order request received - Order ID: 8705455085, User ID: 1, User Type: demo
2025-06-10 21:57:03,313 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-10 21:57:03,313 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000294164CB250>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-10 21:57:03,313 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-10 21:57:03,314 - INFO - orders - Request to close order 8705455085 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-10 21:57:03,341 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-10 21:57:03,372 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 21:57:03,372 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 160): Type=BUY, Qty=2.00000000, StoredMargin=1302.30246327
2025-06-10 21:57:03,373 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.151231635
2025-06-10 21:57:03,373 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-10 21:57:03,373 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.151231635')], HighestMarginPerLot=651.151231635
2025-06-10 21:57:03,373 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1302.30, ContributingOrders=1 (based on individual stored margins)
2025-06-10 21:57:03,373 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 21:57:03,373 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 21:57:03,396 - INFO - orders - Existing entry commission for order 8705455085: 20.00000000
2025-06-10 21:57:03,396 - INFO - orders - Commission calculation for order 8705455085: entry=20.00000000, exit=20.000000000000, total=40.00
2025-06-10 21:57:03,399 - DEBUG - orders - Inverse conversion for PnL on Close: -168.000000000000000000000000 CAD / 1.3682000000 = -122.7890659260342055255079667 USD
2025-06-10 21:57:03,488 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=84421.34000000, margin=0
2025-06-10 21:57:03,489 - INFO - orders - Setting user data cache for user 1 with wallet_balance=84421.34000000, margin=0
2025-06-10 21:57:03,491 - INFO - orders - User data cache updated for user 1
2025-06-10 21:57:03,491 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-10 21:57:03,491 - INFO - orders - Using order model: DemoUserOrder
2025-06-10 21:57:03,505 - INFO - orders - Fetched 0 open orders for user 1
2025-06-10 21:57:03,521 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-10 21:57:03,523 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 1 pending orders
2025-06-10 21:57:03,523 - INFO - orders - Publishing order update for user 1
2025-06-10 21:57:03,524 - INFO - orders - Publishing user data update for user 1
2025-06-10 21:57:03,554 - INFO - orders - Publishing market data trigger
2025-06-10 22:08:08,161 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 22:08:29,386 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-10 22:08:29,404 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000027DCD9E6030>, <app.database.models.Group object at 0x0000027DCD9E6140>, <app.database.models.Group object at 0x0000027DCD9E6250>, <app.database.models.Group object at 0x0000027DCD9E6360>, <app.database.models.Group object at 0x0000027DCD9E6470>, <app.database.models.Group object at 0x0000027DCD9E6580>, <app.database.models.Group object at 0x0000027DCD9E6690>, <app.database.models.Group object at 0x0000027DCD9E67A0>, <app.database.models.Group object at 0x0000027DCD9E68B0>, <app.database.models.Group object at 0x0000027DCD9E69C0>, <app.database.models.Group object at 0x0000027DCD9E6AD0>, <app.database.models.Group object at 0x0000027DCD9E6BE0>, <app.database.models.Group object at 0x0000027DCD9E6CF0>, <app.database.models.Group object at 0x0000027DCD9E6E00>, <app.database.models.Group object at 0x0000027DCD9E6F10>, <app.database.models.Group object at 0x0000027DCD9E7020>, <app.database.models.Group object at 0x0000027DCD9E7130>, <app.database.models.Group object at 0x0000027DCD9E7240>, <app.database.models.Group object at 0x0000027DCD9E7350>, <app.database.models.Group object at 0x0000027DCD9E7460>, <app.database.models.Group object at 0x0000027DCD9E7570>, <app.database.models.Group object at 0x0000027DCD9E7680>, <app.database.models.Group object at 0x0000027DCD9E7790>, <app.database.models.Group object at 0x0000027DCD9E78A0>, <app.database.models.Group object at 0x0000027DCD9E79B0>, <app.database.models.Group object at 0x0000027DCD9E7AC0>, <app.database.models.Group object at 0x0000027DCD9E7BD0>, <app.database.models.Group object at 0x0000027DCD9E7CE0>, <app.database.models.Group object at 0x0000027DCD9E7DF0>, <app.database.models.Group object at 0x0000027DCD9E7F00>, <app.database.models.Group object at 0x0000027DCD7BBCE0>, <app.database.models.Group object at 0x0000027DCD7BB240>, <app.database.models.Group object at 0x0000027DCD7BB130>, <app.database.models.Group object at 0x0000027DCDB5DF20>, <app.database.models.Group object at 0x0000027DCDB5DAE0>, <app.database.models.Group object at 0x0000027DCDB5C050>, <app.database.models.Group object at 0x0000027DCDB5C160>, <app.database.models.Group object at 0x0000027DCDB5C270>, <app.database.models.Group object at 0x0000027DCDB5C380>, <app.database.models.Group object at 0x0000027DCDB5C490>, <app.database.models.Group object at 0x0000027DCDB5C5A0>, <app.database.models.Group object at 0x0000027DCDB5C6B0>, <app.database.models.Group object at 0x0000027DCDB5C7C0>, <app.database.models.Group object at 0x0000027DCDB5C8D0>, <app.database.models.Group object at 0x0000027DCDB5C9E0>, <app.database.models.Group object at 0x0000027DCDB5CAF0>, <app.database.models.Group object at 0x0000027DCDB5CC00>, <app.database.models.Group object at 0x0000027DCDB5CD10>, <app.database.models.Group object at 0x0000027DCDB5CE20>, <app.database.models.Group object at 0x0000027DCDB5CF30>, <app.database.models.Group object at 0x0000027DCDB5D040>, <app.database.models.Group object at 0x0000027DCDB5D150>, <app.database.models.Group object at 0x0000027DCDB5D260>, <app.database.models.Group object at 0x0000027DCDB5D370>, <app.database.models.Group object at 0x0000027DCDB5D480>, <app.database.models.Group object at 0x0000027DCDB5D590>, <app.database.models.Group object at 0x0000027DCDB5D6A0>, <app.database.models.Group object at 0x0000027DCDB5D7B0>, <app.database.models.Group object at 0x0000027DCDB5D8C0>, <app.database.models.Group object at 0x0000027DCDB5D9D0>, <app.database.models.Group object at 0x0000027DCDB5DBF0>, <app.database.models.Group object at 0x0000027DCDB5DE10>, <app.database.models.Group object at 0x0000027DCDB5E030>, <app.database.models.Group object at 0x0000027DCDB5E140>, <app.database.models.Group object at 0x0000027DCDB5E250>, <app.database.models.Group object at 0x0000027DCDB5E360>, <app.database.models.Group object at 0x0000027DCDB5E470>, <app.database.models.Group object at 0x0000027DCDB5E580>, <app.database.models.Group object at 0x0000027DCDB5E690>, <app.database.models.Group object at 0x0000027DCDB5E7A0>, <app.database.models.Group object at 0x0000027DCDB5E8B0>, <app.database.models.Group object at 0x0000027DCDB5E9C0>, <app.database.models.Group object at 0x0000027DCDB5EAD0>, <app.database.models.Group object at 0x0000027DCDB5EBE0>, <app.database.models.Group object at 0x0000027DCDB5ECF0>, <app.database.models.Group object at 0x0000027DCDB5EE00>, <app.database.models.Group object at 0x0000027DCDB5EF10>, <app.database.models.Group object at 0x0000027DCDB5F020>, <app.database.models.Group object at 0x0000027DCDB5F130>]
2025-06-10 22:08:29,405 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-10 22:08:29,405 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-10 22:08:29,405 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-10 22:08:29,405 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-10 22:08:29,405 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-10 22:08:29,703 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-10 22:08:29,710 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 22:08:29,710 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 22:08:29,710 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 22:08:29,710 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1302.526168060347348108297760
2025-06-10 22:08:29,710 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.263084030173674054148880
2025-06-10 22:08:29,710 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-10 22:08:29,710 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.263084030173674054148880')], HighestMarginPerLot=651.263084030173674054148880
2025-06-10 22:08:29,710 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1302.53, ContributingOrders=1 (based on individual stored margins)
2025-06-10 22:08:29,710 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=1302.53, AdditionalMargin=1302.53
2025-06-10 22:08:29,714 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=1302.53
2025-06-10 22:08:29,828 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '2897695498', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8909800000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1302.526168060347348108297760'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-10 22:08:29,890 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1302.53000000
2025-06-10 22:08:29,913 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-10 22:08:30,245 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-10 22:08:30,248 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-10 22:08:30,248 - INFO - orders - Using order model: DemoUserOrder
2025-06-10 22:08:30,254 - INFO - orders - Fetched 1 open orders for user 1
2025-06-10 22:08:30,279 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-10 22:08:30,283 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 1 pending orders
2025-06-10 22:08:46,176 - INFO - orders - Close order request received - Order ID: 2897695498, User ID: 1, User Type: demo
2025-06-10 22:08:46,177 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-10 22:08:46,177 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000027DCD9BF750>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-10 22:08:46,177 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-10 22:08:46,177 - INFO - orders - Request to close order 2897695498 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-10 22:08:46,239 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-10 22:08:46,340 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 22:08:46,340 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 161): Type=BUY, Qty=2.00000000, StoredMargin=1302.52616806
2025-06-10 22:08:46,340 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.26308403
2025-06-10 22:08:46,345 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-10 22:08:46,346 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.26308403')], HighestMarginPerLot=651.26308403
2025-06-10 22:08:46,346 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1302.53, ContributingOrders=1 (based on individual stored margins)
2025-06-10 22:08:46,346 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 22:08:46,346 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 22:08:46,394 - INFO - orders - Existing entry commission for order 2897695498: 20.00000000
2025-06-10 22:08:46,394 - INFO - orders - Commission calculation for order 2897695498: entry=20.00000000, exit=20.000000000000, total=40.00
2025-06-10 22:08:46,405 - DEBUG - orders - Inverse conversion for PnL on Close: -196.000000000000000000000000 CAD / 1.3681300000 = -143.2612397944639763765139278 USD
2025-06-10 22:08:46,621 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=84238.08000000, margin=0
2025-06-10 22:08:46,621 - INFO - orders - Setting user data cache for user 1 with wallet_balance=84238.08000000, margin=0
2025-06-10 22:08:46,625 - INFO - orders - User data cache updated for user 1
2025-06-10 22:08:46,626 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-10 22:08:46,626 - INFO - orders - Using order model: DemoUserOrder
2025-06-10 22:08:46,656 - INFO - orders - Fetched 0 open orders for user 1
2025-06-10 22:08:46,678 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-10 22:08:46,690 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 1 pending orders
2025-06-10 22:08:46,690 - INFO - orders - Publishing order update for user 1
2025-06-10 22:08:46,697 - INFO - orders - Publishing user data update for user 1
2025-06-10 22:08:46,711 - INFO - orders - Publishing market data trigger
2025-06-10 22:18:53,098 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 22:31:52,262 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 22:32:03,290 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 22:32:20,519 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 22:32:21,789 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 22:46:41,974 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 22:47:24,279 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 22:50:51,031 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-10 22:50:51,065 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '7930267270', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.88'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': None, 'take_profit': None, 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-10 22:50:51,065 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.88
2025-06-10 22:50:51,234 - INFO - orders - Pending order 7930267270 added to Redis.
2025-06-10 22:50:51,270 - INFO - orders - User data cache updated for user 1 after placing pending order
2025-06-10 22:50:51,270 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-10 22:50:51,270 - INFO - orders - Using order model: DemoUserOrder
2025-06-10 22:50:51,349 - INFO - orders - Fetched 0 open orders for user 1
2025-06-10 22:50:51,403 - INFO - orders - Fetched 2 pending orders for user 1
2025-06-10 22:50:51,414 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 2 pending orders
2025-06-10 22:53:13,211 - INFO - orders - Cancel pending order request received - Order ID: 7930267270, User ID: 1
2025-06-10 22:53:13,245 - INFO - orders - Generated cancel_id: 4861576896 for order 7930267270
2025-06-10 22:53:13,253 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-10 22:53:13,253 - INFO - orders - Non-Barclays user. Cancelling order 7930267270 immediately
2025-06-10 22:53:13,340 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-10 22:53:13,341 - INFO - orders - Using order model: DemoUserOrder
2025-06-10 22:53:13,361 - INFO - orders - Fetched 0 open orders for user 1
2025-06-10 22:53:13,377 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-10 22:53:13,381 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 1 pending orders
2025-06-10 23:25:06,517 - INFO - orders - Application starting up - Orders logging initialized
2025-06-10 23:25:50,732 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-10 23:25:50,749 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000029A143F2360>, <app.database.models.Group object at 0x0000029A143F3AC0>, <app.database.models.Group object at 0x0000029A143F3570>, <app.database.models.Group object at 0x0000029A143F3DF0>, <app.database.models.Group object at 0x0000029A143F2470>, <app.database.models.Group object at 0x0000029A148547C0>, <app.database.models.Group object at 0x0000029A14854050>, <app.database.models.Group object at 0x0000029A14854270>, <app.database.models.Group object at 0x0000029A14854160>, <app.database.models.Group object at 0x0000029A14854490>, <app.database.models.Group object at 0x0000029A148548D0>, <app.database.models.Group object at 0x0000029A148545A0>, <app.database.models.Group object at 0x0000029A148549E0>, <app.database.models.Group object at 0x0000029A14854AF0>, <app.database.models.Group object at 0x0000029A14854C00>, <app.database.models.Group object at 0x0000029A14854D10>, <app.database.models.Group object at 0x0000029A14854E20>, <app.database.models.Group object at 0x0000029A14854F30>, <app.database.models.Group object at 0x0000029A14855040>, <app.database.models.Group object at 0x0000029A14855150>, <app.database.models.Group object at 0x0000029A14855260>, <app.database.models.Group object at 0x0000029A14855370>, <app.database.models.Group object at 0x0000029A14855480>, <app.database.models.Group object at 0x0000029A14855590>, <app.database.models.Group object at 0x0000029A148556A0>, <app.database.models.Group object at 0x0000029A148557B0>, <app.database.models.Group object at 0x0000029A148558C0>, <app.database.models.Group object at 0x0000029A148559D0>, <app.database.models.Group object at 0x0000029A14855AE0>, <app.database.models.Group object at 0x0000029A14855BF0>, <app.database.models.Group object at 0x0000029A14855D00>, <app.database.models.Group object at 0x0000029A14855E10>, <app.database.models.Group object at 0x0000029A14855F20>, <app.database.models.Group object at 0x0000029A14856030>, <app.database.models.Group object at 0x0000029A14856140>, <app.database.models.Group object at 0x0000029A14856250>, <app.database.models.Group object at 0x0000029A14856360>, <app.database.models.Group object at 0x0000029A14856470>, <app.database.models.Group object at 0x0000029A14856580>, <app.database.models.Group object at 0x0000029A14856690>, <app.database.models.Group object at 0x0000029A148567A0>, <app.database.models.Group object at 0x0000029A148568B0>, <app.database.models.Group object at 0x0000029A148569C0>, <app.database.models.Group object at 0x0000029A14856AD0>, <app.database.models.Group object at 0x0000029A14856BE0>, <app.database.models.Group object at 0x0000029A14856CF0>, <app.database.models.Group object at 0x0000029A14856E00>, <app.database.models.Group object at 0x0000029A14856F10>, <app.database.models.Group object at 0x0000029A14857020>, <app.database.models.Group object at 0x0000029A14857130>, <app.database.models.Group object at 0x0000029A14857240>, <app.database.models.Group object at 0x0000029A14857350>, <app.database.models.Group object at 0x0000029A14857460>, <app.database.models.Group object at 0x0000029A14857570>, <app.database.models.Group object at 0x0000029A14857680>, <app.database.models.Group object at 0x0000029A14857790>, <app.database.models.Group object at 0x0000029A148578A0>, <app.database.models.Group object at 0x0000029A148579B0>, <app.database.models.Group object at 0x0000029A14857AC0>, <app.database.models.Group object at 0x0000029A14857BD0>, <app.database.models.Group object at 0x0000029A14857CE0>, <app.database.models.Group object at 0x0000029A14857DF0>, <app.database.models.Group object at 0x0000029A14857F00>, <app.database.models.Group object at 0x0000029A14828050>, <app.database.models.Group object at 0x0000029A14828160>, <app.database.models.Group object at 0x0000029A14828270>, <app.database.models.Group object at 0x0000029A14828380>, <app.database.models.Group object at 0x0000029A14828490>, <app.database.models.Group object at 0x0000029A148285A0>, <app.database.models.Group object at 0x0000029A148286B0>, <app.database.models.Group object at 0x0000029A148287C0>, <app.database.models.Group object at 0x0000029A148288D0>, <app.database.models.Group object at 0x0000029A148289E0>, <app.database.models.Group object at 0x0000029A14828AF0>, <app.database.models.Group object at 0x0000029A14828C00>, <app.database.models.Group object at 0x0000029A14828D10>, <app.database.models.Group object at 0x0000029A14828E20>, <app.database.models.Group object at 0x0000029A14828F30>, <app.database.models.Group object at 0x0000029A14829040>]
2025-06-10 23:25:50,749 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-10 23:25:50,750 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-10 23:25:50,750 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-10 23:25:50,750 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-10 23:25:50,750 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-10 23:25:51,122 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=20.00
2025-06-10 23:25:51,134 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-10 23:25:51,135 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-10 23:25:51,135 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-10 23:25:51,135 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1302.890308621218988026490841
2025-06-10 23:25:51,135 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=651.4451543106094940132454205
2025-06-10 23:25:51,135 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-10 23:25:51,136 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.4451543106094940132454205')], HighestMarginPerLot=651.4451543106094940132454205
2025-06-10 23:25:51,136 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1302.89, ContributingOrders=1 (based on individual stored margins)
2025-06-10 23:25:51,136 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=1302.89, AdditionalMargin=1302.89
2025-06-10 23:25:51,162 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=1302.89
2025-06-10 23:25:51,253 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '7636989297', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8911900000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1302.890308621218988026490841'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-10 23:25:51,324 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1302.89000000
2025-06-10 23:25:51,357 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-10 23:25:51,442 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-10 23:25:51,444 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-10 23:25:51,444 - INFO - orders - Using order model: DemoUserOrder
2025-06-10 23:25:51,449 - INFO - orders - Fetched 1 open orders for user 1
2025-06-10 23:25:51,456 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-10 23:25:51,462 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 1 pending orders
2025-06-10 23:30:22,983 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-10 23:30:23,082 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-10 23:30:23,082 - INFO - orders - [DEBUG] sending_orders_cache value: None (type: <class 'NoneType'>)
2025-06-10 23:30:23,082 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=False, user_type=demo, group_name=None, sending_orders_setting=None
2025-06-10 23:30:23,447 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=20.00
2025-06-10 23:30:23,498 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-10 23:30:23,498 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-10 23:30:23,498 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-10 23:30:23,499 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1301.762694027887398053143909
2025-06-10 23:30:23,499 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.8813470139436990265719545
2025-06-10 23:30:23,500 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-10 23:30:23,500 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.8813470139436990265719545')], HighestMarginPerLot=650.8813470139436990265719545
2025-06-10 23:30:23,500 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=1301.76, ContributingOrders=1 (based on individual stored margins)
2025-06-10 23:30:23,501 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=1301.76, AdditionalMargin=1301.76
2025-06-10 23:30:23,514 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4: OriginalMarginDB=0E-8, CalculatedNewMargin=1301.76
2025-06-10 23:30:23,603 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '9317277886', 'order_status': 'OPEN', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8906400000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1301.762694027887398053143909'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-10 23:30:23,697 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 1301.76000000
2025-06-10 23:30:23,883 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-10 23:30:23,884 - INFO - orders - Starting update_user_static_orders for user 4, user_type demo
2025-06-10 23:30:23,884 - INFO - orders - Using order model: DemoUserOrder
2025-06-10 23:30:23,889 - INFO - orders - Fetched 0 open orders for user 4
2025-06-10 23:30:23,900 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-10 23:30:23,910 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-10 23:32:19,661 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-10 23:32:19,669 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000029A148558C0>, <app.database.models.Group object at 0x0000029A148559D0>, <app.database.models.Group object at 0x0000029A14855AE0>, <app.database.models.Group object at 0x0000029A14855BF0>, <app.database.models.Group object at 0x0000029A14855D00>, <app.database.models.Group object at 0x0000029A14855E10>, <app.database.models.Group object at 0x0000029A14855F20>, <app.database.models.Group object at 0x0000029A14856030>, <app.database.models.Group object at 0x0000029A14856140>, <app.database.models.Group object at 0x0000029A14856250>, <app.database.models.Group object at 0x0000029A14856360>, <app.database.models.Group object at 0x0000029A14856470>, <app.database.models.Group object at 0x0000029A14856580>, <app.database.models.Group object at 0x0000029A14856690>, <app.database.models.Group object at 0x0000029A148567A0>, <app.database.models.Group object at 0x0000029A148568B0>, <app.database.models.Group object at 0x0000029A148569C0>, <app.database.models.Group object at 0x0000029A14856AD0>, <app.database.models.Group object at 0x0000029A14856BE0>, <app.database.models.Group object at 0x0000029A14856CF0>, <app.database.models.Group object at 0x0000029A14856E00>, <app.database.models.Group object at 0x0000029A14856F10>, <app.database.models.Group object at 0x0000029A14857020>, <app.database.models.Group object at 0x0000029A14857130>, <app.database.models.Group object at 0x0000029A14857240>, <app.database.models.Group object at 0x0000029A14857350>, <app.database.models.Group object at 0x0000029A14857460>, <app.database.models.Group object at 0x0000029A14857570>, <app.database.models.Group object at 0x0000029A14857680>, <app.database.models.Group object at 0x0000029A14857790>, <app.database.models.Group object at 0x0000029A148578A0>, <app.database.models.Group object at 0x0000029A148579B0>, <app.database.models.Group object at 0x0000029A14857AC0>, <app.database.models.Group object at 0x0000029A14857BD0>, <app.database.models.Group object at 0x0000029A14857CE0>, <app.database.models.Group object at 0x0000029A14857DF0>, <app.database.models.Group object at 0x0000029A14857F00>, <app.database.models.Group object at 0x0000029A143F3350>, <app.database.models.Group object at 0x0000029A143F3680>, <app.database.models.Group object at 0x0000029A143F3F00>, <app.database.models.Group object at 0x0000029A143F3240>, <app.database.models.Group object at 0x0000029A143F17B0>, <app.database.models.Group object at 0x0000029A143F16A0>, <app.database.models.Group object at 0x0000029A143F2360>, <app.database.models.Group object at 0x0000029A143F3AC0>, <app.database.models.Group object at 0x0000029A143F3570>, <app.database.models.Group object at 0x0000029A143F3DF0>, <app.database.models.Group object at 0x0000029A143F2470>, <app.database.models.Group object at 0x0000029A143F3460>, <app.database.models.Group object at 0x0000029A143F3CE0>, <app.database.models.Group object at 0x0000029A14829590>, <app.database.models.Group object at 0x0000029A148299D0>, <app.database.models.Group object at 0x0000029A14828050>, <app.database.models.Group object at 0x0000029A14828160>, <app.database.models.Group object at 0x0000029A14828270>, <app.database.models.Group object at 0x0000029A14828380>, <app.database.models.Group object at 0x0000029A14828490>, <app.database.models.Group object at 0x0000029A148285A0>, <app.database.models.Group object at 0x0000029A148286B0>, <app.database.models.Group object at 0x0000029A148287C0>, <app.database.models.Group object at 0x0000029A148288D0>, <app.database.models.Group object at 0x0000029A148289E0>, <app.database.models.Group object at 0x0000029A14828AF0>, <app.database.models.Group object at 0x0000029A14828C00>, <app.database.models.Group object at 0x0000029A14828D10>, <app.database.models.Group object at 0x0000029A14828E20>, <app.database.models.Group object at 0x0000029A14828F30>, <app.database.models.Group object at 0x0000029A14829040>, <app.database.models.Group object at 0x0000029A148298C0>, <app.database.models.Group object at 0x0000029A14829AE0>, <app.database.models.Group object at 0x0000029A14829370>, <app.database.models.Group object at 0x0000029A14829BF0>, <app.database.models.Group object at 0x0000029A14829D00>, <app.database.models.Group object at 0x0000029A14829E10>, <app.database.models.Group object at 0x0000029A14829F20>, <app.database.models.Group object at 0x0000029A1482A030>, <app.database.models.Group object at 0x0000029A1482A140>, <app.database.models.Group object at 0x0000029A1482A250>, <app.database.models.Group object at 0x0000029A1482A360>]
2025-06-10 23:32:19,669 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-10 23:32:19,669 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-10 23:32:19,669 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-10 23:32:19,669 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-10 23:32:19,669 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-10 23:32:20,349 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=20.00
2025-06-10 23:32:20,356 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-10 23:32:20,356 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 48): Type=BUY, Qty=2.00000000, StoredMargin=1301.76269403
2025-06-10 23:32:20,356 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.881347015
2025-06-10 23:32:20,356 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-10 23:32:20,356 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.881347015')], HighestMarginPerLot=650.881347015
2025-06-10 23:32:20,357 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=1301.76, ContributingOrders=1 (based on individual stored margins)
2025-06-10 23:32:20,357 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 2
2025-06-10 23:32:20,357 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 48): Type=BUY, Qty=2.00000000, StoredMargin=1301.76269403
2025-06-10 23:32:20,357 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.881347015
2025-06-10 23:32:20,357 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1301.884724160862924501414091
2025-06-10 23:32:20,357 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=650.9423620804314622507070455
2025-06-10 23:32:20,358 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=4.00000000, TotalSellQty=0, NetQty=4.00000000
2025-06-10 23:32:20,358 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.881347015'), Decimal('650.9423620804314622507070455')], HighestMarginPerLot=650.9423620804314622507070455
2025-06-10 23:32:20,358 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=2603.77, ContributingOrders=2 (based on individual stored margins)
2025-06-10 23:32:20,358 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=1301.76, MarginAfter=2603.77, AdditionalMargin=1302.01
2025-06-10 23:32:20,365 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4: OriginalMarginDB=1301.76000000, CalculatedNewMargin=2603.77
2025-06-10 23:32:20,394 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '5499382541', 'order_status': 'OPEN', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8907300000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1301.884724160862924501414091'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-10 23:32:20,427 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 2603.77000000
2025-06-10 23:32:20,499 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-10 23:32:20,500 - INFO - orders - Starting update_user_static_orders for user 4, user_type demo
2025-06-10 23:32:20,500 - INFO - orders - Using order model: DemoUserOrder
2025-06-10 23:32:20,505 - INFO - orders - Fetched 0 open orders for user 4
2025-06-10 23:32:20,510 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-10 23:32:20,510 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-10 23:32:38,590 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 2
2025-06-10 23:32:38,601 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000029A143F3DF0>, <app.database.models.Group object at 0x0000029A143F2470>, <app.database.models.Group object at 0x0000029A143F3460>, <app.database.models.Group object at 0x0000029A143F3CE0>, <app.database.models.Group object at 0x0000029A14854160>, <app.database.models.Group object at 0x0000029A14855590>, <app.database.models.Group object at 0x0000029A148556A0>, <app.database.models.Group object at 0x0000029A148547C0>, <app.database.models.Group object at 0x0000029A148557B0>, <app.database.models.Group object at 0x0000029A14854490>, <app.database.models.Group object at 0x0000029A148558C0>, <app.database.models.Group object at 0x0000029A148559D0>, <app.database.models.Group object at 0x0000029A14855AE0>, <app.database.models.Group object at 0x0000029A14855BF0>, <app.database.models.Group object at 0x0000029A14855D00>, <app.database.models.Group object at 0x0000029A14855E10>, <app.database.models.Group object at 0x0000029A14855F20>, <app.database.models.Group object at 0x0000029A14856030>, <app.database.models.Group object at 0x0000029A14856140>, <app.database.models.Group object at 0x0000029A14856250>, <app.database.models.Group object at 0x0000029A14856360>, <app.database.models.Group object at 0x0000029A14856470>, <app.database.models.Group object at 0x0000029A14856580>, <app.database.models.Group object at 0x0000029A14856690>, <app.database.models.Group object at 0x0000029A148567A0>, <app.database.models.Group object at 0x0000029A148568B0>, <app.database.models.Group object at 0x0000029A148569C0>, <app.database.models.Group object at 0x0000029A14856AD0>, <app.database.models.Group object at 0x0000029A14856BE0>, <app.database.models.Group object at 0x0000029A14856CF0>, <app.database.models.Group object at 0x0000029A14856E00>, <app.database.models.Group object at 0x0000029A14856F10>, <app.database.models.Group object at 0x0000029A14857020>, <app.database.models.Group object at 0x0000029A14857130>, <app.database.models.Group object at 0x0000029A14857240>, <app.database.models.Group object at 0x0000029A14857350>, <app.database.models.Group object at 0x0000029A14857460>, <app.database.models.Group object at 0x0000029A14857570>, <app.database.models.Group object at 0x0000029A14857680>, <app.database.models.Group object at 0x0000029A14857790>, <app.database.models.Group object at 0x0000029A148578A0>, <app.database.models.Group object at 0x0000029A148579B0>, <app.database.models.Group object at 0x0000029A14857AC0>, <app.database.models.Group object at 0x0000029A14857BD0>, <app.database.models.Group object at 0x0000029A14857CE0>, <app.database.models.Group object at 0x0000029A14857DF0>, <app.database.models.Group object at 0x0000029A14857F00>, <app.database.models.Group object at 0x0000029A14854050>, <app.database.models.Group object at 0x0000029A14854270>, <app.database.models.Group object at 0x0000029A14854E20>, <app.database.models.Group object at 0x0000029A1482A580>, <app.database.models.Group object at 0x0000029A14829590>, <app.database.models.Group object at 0x0000029A148299D0>, <app.database.models.Group object at 0x0000029A14828050>, <app.database.models.Group object at 0x0000029A14828160>, <app.database.models.Group object at 0x0000029A14828270>, <app.database.models.Group object at 0x0000029A14828380>, <app.database.models.Group object at 0x0000029A14828490>, <app.database.models.Group object at 0x0000029A148285A0>, <app.database.models.Group object at 0x0000029A148286B0>, <app.database.models.Group object at 0x0000029A148287C0>, <app.database.models.Group object at 0x0000029A148288D0>, <app.database.models.Group object at 0x0000029A148289E0>, <app.database.models.Group object at 0x0000029A14828AF0>, <app.database.models.Group object at 0x0000029A14828C00>, <app.database.models.Group object at 0x0000029A14828D10>, <app.database.models.Group object at 0x0000029A14828E20>, <app.database.models.Group object at 0x0000029A14828F30>, <app.database.models.Group object at 0x0000029A14829040>, <app.database.models.Group object at 0x0000029A148298C0>, <app.database.models.Group object at 0x0000029A14829AE0>, <app.database.models.Group object at 0x0000029A14829370>, <app.database.models.Group object at 0x0000029A14829BF0>, <app.database.models.Group object at 0x0000029A14829D00>, <app.database.models.Group object at 0x0000029A14829E10>, <app.database.models.Group object at 0x0000029A14829F20>, <app.database.models.Group object at 0x0000029A1482A030>, <app.database.models.Group object at 0x0000029A1482A140>, <app.database.models.Group object at 0x0000029A1482A250>]
2025-06-10 23:32:38,601 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-10 23:32:38,601 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-10 23:32:38,601 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-10 23:32:38,602 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-10 23:32:38,602 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-10 23:32:38,933 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=20.00
2025-06-10 23:32:38,940 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 2
2025-06-10 23:32:38,940 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 48): Type=BUY, Qty=2.00000000, StoredMargin=1301.76269403
2025-06-10 23:32:38,940 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.881347015
2025-06-10 23:32:38,940 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 49): Type=BUY, Qty=2.00000000, StoredMargin=1301.88472416
2025-06-10 23:32:38,940 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=650.94236208
2025-06-10 23:32:38,940 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=4.00000000, TotalSellQty=0, NetQty=4.00000000
2025-06-10 23:32:38,940 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.881347015'), Decimal('650.94236208')], HighestMarginPerLot=650.94236208
2025-06-10 23:32:38,940 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=2603.77, ContributingOrders=2 (based on individual stored margins)
2025-06-10 23:32:38,940 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 3
2025-06-10 23:32:38,940 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 48): Type=BUY, Qty=2.00000000, StoredMargin=1301.76269403
2025-06-10 23:32:38,940 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.881347015
2025-06-10 23:32:38,940 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 49): Type=BUY, Qty=2.00000000, StoredMargin=1301.88472416
2025-06-10 23:32:38,940 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=650.94236208
2025-06-10 23:32:38,940 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=1302.094068632825348097796294
2025-06-10 23:32:38,940 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=651.047034316412674048898147
2025-06-10 23:32:38,940 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=6.00000000, TotalSellQty=0, NetQty=6.00000000
2025-06-10 23:32:38,941 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.881347015'), Decimal('650.94236208'), Decimal('651.047034316412674048898147')], HighestMarginPerLot=651.047034316412674048898147
2025-06-10 23:32:38,941 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=3906.28, ContributingOrders=3 (based on individual stored margins)
2025-06-10 23:32:38,941 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=2603.77, MarginAfter=3906.28, AdditionalMargin=1302.51
2025-06-10 23:32:38,945 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '1943369549', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8907300000'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1302.094068632825348097796294'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-10 23:32:38,967 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 2603.77000000
2025-06-10 23:32:38,973 - ERROR - orders - Error updating user data cache after order placement: get_user_by_id() missing 1 required positional argument: 'user_type'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 405, in place_order
    db_user = await get_user_by_id(db, user_id)
                    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
TypeError: get_user_by_id() missing 1 required positional argument: 'user_type'
2025-06-10 23:32:39,025 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-10 23:32:39,070 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '1943369549', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_status': 'PROCESSING', 'order_price': Decimal('0.89073000'), 'order_quantity': Decimal('2.00000000'), 'contract_value': Decimal('200000.00000000'), 'margin': Decimal('1302.09406863'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-10 23:32:39,380 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 1943369549 (order_status=PROCESSING, margin not updated in DB)
2025-06-10 23:32:39,381 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-10 23:32:39,381 - INFO - orders - Using order model: UserOrder
2025-06-10 23:32:39,387 - INFO - orders - Fetched 2 open orders for user 4
2025-06-10 23:32:39,395 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-10 23:32:39,396 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 0 pending orders
2025-06-10 23:35:42,302 - INFO - orders - Pending order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-10 23:35:42,308 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '4573979015', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.88'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': None, 'take_profit': None, 'order_user_id': 4, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-10 23:35:42,308 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 4 at price 0.88
2025-06-10 23:35:42,350 - INFO - orders - Pending order 4573979015 added to Redis.
2025-06-10 23:35:42,350 - ERROR - orders - Error updating user data cache after pending order placement: get_user_by_id() missing 1 required positional argument: 'user_type'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 639, in place_pending_order
    db_user = await get_user_by_id(db, user_id_for_order)
                    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
TypeError: get_user_by_id() missing 1 required positional argument: 'user_type'
2025-06-10 23:35:42,350 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-10 23:35:42,350 - INFO - orders - Using order model: UserOrder
2025-06-10 23:35:42,358 - INFO - orders - Fetched 2 open orders for user 4
2025-06-10 23:35:42,364 - INFO - orders - Fetched 1 pending orders for user 4
2025-06-10 23:35:42,365 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 1 pending orders
2025-06-10 23:36:16,529 - INFO - orders - Pending order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-10 23:36:16,536 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '5186970569', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.88'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': None, 'take_profit': None, 'order_user_id': 4, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-10 23:36:16,536 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 4 at price 0.88
2025-06-10 23:36:16,581 - INFO - orders - Pending order 5186970569 added to Redis.
2025-06-10 23:36:16,581 - ERROR - orders - Error updating user data cache after pending order placement: get_user_by_id() missing 1 required positional argument: 'user_type'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 639, in place_pending_order
    db_user = await get_user_by_id(db, user_id_for_order)
                    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
TypeError: get_user_by_id() missing 1 required positional argument: 'user_type'
2025-06-10 23:36:16,581 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-10 23:36:16,581 - INFO - orders - Using order model: UserOrder
2025-06-10 23:36:16,588 - INFO - orders - Fetched 2 open orders for user 4
2025-06-10 23:36:16,595 - INFO - orders - Fetched 2 pending orders for user 4
2025-06-10 23:36:16,596 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 2 pending orders
2025-06-11 00:23:35,909 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 00:29:19,650 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 00:31:33,936 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 00:33:37,096 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 04:37:57,450 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 04:40:31,530 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 04:40:50,899 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-11 04:40:50,920 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '4530201306', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.88'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': None, 'take_profit': None, 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-11 04:40:50,920 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.88
2025-06-11 04:40:51,125 - INFO - orders - Pending order 4530201306 added to Redis.
2025-06-11 04:40:51,165 - INFO - orders - User data cache updated for user 1 after placing pending order
2025-06-11 04:40:51,165 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-11 04:40:51,165 - INFO - orders - Using order model: DemoUserOrder
2025-06-11 04:40:51,211 - INFO - orders - Fetched 2 open orders for user 1
2025-06-11 04:40:51,251 - INFO - orders - Fetched 3 pending orders for user 1
2025-06-11 04:40:51,254 - INFO - orders - Updated static orders cache for user 1 with 2 open orders and 3 pending orders
2025-06-11 04:42:11,235 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 04:50:49,253 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 04:52:37,772 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-11 04:52:37,815 - INFO - orders - Calculated contract_value for pending order: 100000.00000000 (contract_size: 100000.00000000 * quantity: 1)
2025-06-11 04:52:37,816 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '7182219615', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.88'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': None, 'take_profit': None, 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': Decimal('100000.00000000'), 'margin': None, 'open_time': None}
2025-06-11 04:52:37,819 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.88
2025-06-11 04:52:37,934 - INFO - orders - Pending order 7182219615 added to Redis.
2025-06-11 04:52:37,959 - INFO - orders - User data cache updated for user 1 after placing pending order
2025-06-11 04:52:37,959 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-11 04:52:37,959 - INFO - orders - Using order model: DemoUserOrder
2025-06-11 04:52:38,069 - INFO - orders - Fetched 2 open orders for user 1
2025-06-11 04:52:38,110 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-11 04:52:38,128 - INFO - orders - Updated static orders cache for user 1 with 2 open orders and 4 pending orders
2025-06-11 04:54:30,039 - INFO - orders - Cancel pending order request received - Order ID: 7182219615, User ID: 1
2025-06-11 04:54:30,058 - INFO - orders - Generated cancel_id: 1099323937 for order 7182219615
2025-06-11 04:54:30,061 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-11 04:54:30,062 - INFO - orders - Non-Barclays user. Cancelling order 7182219615 immediately
2025-06-11 04:54:30,206 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-11 04:54:30,206 - INFO - orders - Using order model: DemoUserOrder
2025-06-11 04:54:30,216 - INFO - orders - Fetched 2 open orders for user 1
2025-06-11 04:54:30,224 - INFO - orders - Fetched 3 pending orders for user 1
2025-06-11 04:54:30,225 - INFO - orders - Updated static orders cache for user 1 with 2 open orders and 3 pending orders
2025-06-11 05:03:02,302 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:03:59,941 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:07:20,724 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:08:09,046 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:08:13,381 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:08:20,519 - INFO - orders - Pending order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-11 05:08:20,525 - INFO - orders - User 4 is_barclays_live_user: False
2025-06-11 05:08:20,672 - INFO - orders - Calculated contract_value for pending order: 100000.00000000 (contract_size: 100000.00000000 * quantity: 1)
2025-06-11 05:08:20,672 - INFO - orders - Setting order_status to PENDING for non-Barclays user
2025-06-11 05:08:20,673 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '6086104174', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.88'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': None, 'take_profit': None, 'order_user_id': 4, 'order_status': 'PENDING', 'contract_value': Decimal('100000.00000000'), 'margin': None, 'open_time': None}
2025-06-11 05:08:20,673 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 4 at price 0.88
2025-06-11 05:08:20,761 - INFO - orders - Pending order 6086104174 added to Redis for non-Barclays user 4
2025-06-11 05:08:20,762 - ERROR - orders - Error updating user data cache after pending order placement: get_user_by_id() missing 1 required positional argument: 'user_type'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 685, in place_pending_order
    db_user = await get_user_by_id(db, user_id_for_order)
                    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
TypeError: get_user_by_id() missing 1 required positional argument: 'user_type'
2025-06-11 05:08:20,768 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-11 05:08:20,768 - INFO - orders - Using order model: UserOrder
2025-06-11 05:08:20,782 - INFO - orders - Fetched 2 open orders for user 4
2025-06-11 05:08:20,791 - INFO - orders - Fetched 3 pending orders for user 4
2025-06-11 05:08:20,792 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 3 pending orders
2025-06-11 05:17:10,094 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:17:20,159 - INFO - orders - Cancel pending order request received - Order ID: 6086104174, User ID: 1
2025-06-11 05:17:20,180 - WARNING - orders - Order 6086104174 not found for user 1
2025-06-11 05:17:20,180 - ERROR - orders - Error cancelling pending order: 404: Order not found
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1570, in cancel_pending_order
    raise HTTPException(status_code=404, detail="Order not found")
fastapi.exceptions.HTTPException: 404: Order not found
2025-06-11 05:17:47,055 - INFO - orders - Cancel pending order request received - Order ID: 6086104174, User ID: 4
2025-06-11 05:17:47,055 - WARNING - orders - Unauthorized attempt to cancel order 6086104174 by user 4
2025-06-11 05:17:47,056 - ERROR - orders - Error cancelling pending order: 403: Not authorized to cancel this order
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in cancel_pending_order
    raise HTTPException(status_code=403, detail="Not authorized to cancel this order")
fastapi.exceptions.HTTPException: 403: Not authorized to cancel this order
2025-06-11 05:18:01,686 - INFO - orders - Cancel pending order request received - Order ID: 6086104174, User ID: 4
2025-06-11 05:18:01,687 - WARNING - orders - Unauthorized attempt to cancel order 6086104174 by user 4
2025-06-11 05:18:01,687 - ERROR - orders - Error cancelling pending order: 403: Not authorized to cancel this order
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in cancel_pending_order
    raise HTTPException(status_code=403, detail="Not authorized to cancel this order")
fastapi.exceptions.HTTPException: 403: Not authorized to cancel this order
2025-06-11 05:19:56,250 - INFO - orders - Pending order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.1
2025-06-11 05:19:56,278 - INFO - orders - User 4 is_barclays_live_user: False
2025-06-11 05:19:56,327 - INFO - orders - Calculated contract_value for pending order: 10000.000000000 (contract_size: 100000.00000000 * quantity: 0.1)
2025-06-11 05:19:56,328 - INFO - orders - Setting order_status to PENDING for non-Barclays user
2025-06-11 05:19:56,328 - INFO - orders - [DEBUG] Explicitly overriding order_request.order_status to: PENDING
2025-06-11 05:19:56,329 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '7793541528', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.1'), 'order_price': Decimal('0.88'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': None, 'take_profit': None, 'order_user_id': 4, 'order_status': 'PENDING', 'contract_value': Decimal('10000.000000000'), 'margin': None, 'open_time': None}
2025-06-11 05:19:56,329 - INFO - orders - [DEBUG] order_status in prepared data: PENDING
2025-06-11 05:19:56,329 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 4 at price 0.88
2025-06-11 05:19:56,329 - ERROR - orders - Unexpected error in place_pending_order: 'user_type' is an invalid keyword argument for UserOrder
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 631, in place_pending_order
    db_order = order_model(**order_data_for_internal_processing)
  File "<string>", line 4, in __init__
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state.py", line 571, in _initialize_instance
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state.py", line 569, in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\decl_base.py", line 2173, in _declarative_constructor
    raise TypeError(
        "%r is an invalid keyword argument for %s" % (k, cls_.__name__)
    )
TypeError: 'user_type' is an invalid keyword argument for UserOrder
2025-06-11 05:20:19,547 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:20:41,969 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:20:46,440 - INFO - orders - Cancel pending order request received - Order ID: 6086104174, User ID: 4
2025-06-11 05:20:46,441 - WARNING - orders - Unauthorized attempt to cancel order 6086104174 by user 4
2025-06-11 05:20:46,441 - ERROR - orders - Error cancelling pending order: 403: Not authorized to cancel this order
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in cancel_pending_order
    raise HTTPException(status_code=403, detail="Not authorized to cancel this order")
fastapi.exceptions.HTTPException: 403: Not authorized to cancel this order
2025-06-11 05:20:58,850 - INFO - orders - Cancel pending order request received - Order ID: 6086104174, User ID: 4
2025-06-11 05:20:58,850 - WARNING - orders - Unauthorized attempt to cancel order 6086104174 by user 4
2025-06-11 05:20:58,850 - ERROR - orders - Error cancelling pending order: 403: Not authorized to cancel this order
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in cancel_pending_order
    raise HTTPException(status_code=403, detail="Not authorized to cancel this order")
fastapi.exceptions.HTTPException: 403: Not authorized to cancel this order
2025-06-11 05:21:03,551 - INFO - orders - Pending order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.1
2025-06-11 05:21:03,557 - INFO - orders - User 4 is_barclays_live_user: False
2025-06-11 05:21:03,620 - INFO - orders - Calculated contract_value for pending order: 10000.000000000 (contract_size: 100000.00000000 * quantity: 0.1)
2025-06-11 05:21:03,621 - INFO - orders - Setting order_status to PENDING for non-Barclays user
2025-06-11 05:21:03,621 - INFO - orders - [DEBUG] Explicitly overriding order_request.order_status to: PENDING
2025-06-11 05:21:03,621 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '9964653453', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.1'), 'order_price': Decimal('0.88'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': None, 'take_profit': None, 'order_user_id': 4, 'order_status': 'PENDING', 'contract_value': Decimal('10000.000000000'), 'margin': None, 'open_time': None}
2025-06-11 05:21:03,622 - INFO - orders - [DEBUG] order_status in prepared data: PENDING
2025-06-11 05:21:03,622 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 4 at price 0.88
2025-06-11 05:21:03,627 - ERROR - orders - Unexpected error in place_pending_order: 'user_type' is an invalid keyword argument for UserOrder
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 631, in place_pending_order
    db_order = order_model(**order_data_for_internal_processing)
  File "<string>", line 4, in __init__
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state.py", line 571, in _initialize_instance
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state.py", line 569, in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\decl_base.py", line 2173, in _declarative_constructor
    raise TypeError(
        "%r is an invalid keyword argument for %s" % (k, cls_.__name__)
    )
TypeError: 'user_type' is an invalid keyword argument for UserOrder
2025-06-11 05:21:25,840 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:21:31,160 - INFO - orders - Pending order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.1
2025-06-11 05:21:31,163 - INFO - orders - User 4 is_barclays_live_user: False
2025-06-11 05:21:31,181 - INFO - orders - Calculated contract_value for pending order: 10000.000000000 (contract_size: 100000.00000000 * quantity: 0.1)
2025-06-11 05:21:31,181 - INFO - orders - Setting order_status to PENDING for non-Barclays user
2025-06-11 05:21:31,182 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '9631138251', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.1'), 'order_price': Decimal('0.88'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': None, 'take_profit': None, 'order_user_id': 4, 'order_status': 'PENDING', 'contract_value': Decimal('10000.000000000'), 'margin': None, 'open_time': None}
2025-06-11 05:21:31,182 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 4 at price 0.88
2025-06-11 05:21:31,235 - INFO - orders - Pending order 9631138251 added to Redis for non-Barclays user 4
2025-06-11 05:21:31,235 - ERROR - orders - Error updating user data cache after pending order placement: get_user_by_id() missing 1 required positional argument: 'user_type'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 685, in place_pending_order
    db_user = await get_user_by_id(db, user_id_for_order)
                    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
TypeError: get_user_by_id() missing 1 required positional argument: 'user_type'
2025-06-11 05:21:31,237 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-11 05:21:31,237 - INFO - orders - Using order model: UserOrder
2025-06-11 05:21:31,250 - INFO - orders - Fetched 2 open orders for user 4
2025-06-11 05:21:31,259 - INFO - orders - Fetched 4 pending orders for user 4
2025-06-11 05:21:31,261 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 4 pending orders
2025-06-11 05:21:51,162 - INFO - orders - Cancel pending order request received - Order ID: 6086104174, User ID: 4
2025-06-11 05:21:51,162 - WARNING - orders - Unauthorized attempt to cancel order 6086104174 by user 4
2025-06-11 05:21:51,162 - ERROR - orders - Error cancelling pending order: 403: Not authorized to cancel this order
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1533, in cancel_pending_order
    raise HTTPException(status_code=403, detail="Not authorized to cancel this order")
fastapi.exceptions.HTTPException: 403: Not authorized to cancel this order
2025-06-11 05:21:57,264 - INFO - orders - Cancel pending order request received - Order ID: 9631138251, User ID: 4
2025-06-11 05:21:57,264 - WARNING - orders - Unauthorized attempt to cancel order 9631138251 by user 4
2025-06-11 05:21:57,264 - ERROR - orders - Error cancelling pending order: 403: Not authorized to cancel this order
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1533, in cancel_pending_order
    raise HTTPException(status_code=403, detail="Not authorized to cancel this order")
fastapi.exceptions.HTTPException: 403: Not authorized to cancel this order
2025-06-11 05:22:09,763 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:23:10,781 - INFO - orders - Cancel pending order request received - Order ID: 9631138251, User ID: 4
2025-06-11 05:23:10,781 - WARNING - orders - Unauthorized attempt to cancel order 9631138251 by user 4
2025-06-11 05:23:10,782 - ERROR - orders - Error cancelling pending order: 403: Not authorized to cancel this order
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in cancel_pending_order
    raise HTTPException(status_code=403, detail="Not authorized to cancel this order")
fastapi.exceptions.HTTPException: 403: Not authorized to cancel this order
2025-06-11 05:23:41,968 - INFO - orders - Cancel pending order request received - Order ID: 9631138251, User ID: 4
2025-06-11 05:23:41,968 - WARNING - orders - Unauthorized attempt to cancel order 9631138251 by user 4
2025-06-11 05:23:41,968 - ERROR - orders - Error cancelling pending order: 403: Not authorized to cancel this order
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1555, in cancel_pending_order
    raise HTTPException(status_code=403, detail="Not authorized to cancel this order")
fastapi.exceptions.HTTPException: 403: Not authorized to cancel this order
2025-06-11 05:24:22,804 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:24:26,901 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:24:29,704 - INFO - orders - Cancel pending order request received - Order ID: 9631138251, User ID: 4
2025-06-11 05:24:29,705 - WARNING - orders - Unauthorized attempt to cancel order 9631138251 by user 4
2025-06-11 05:24:29,705 - ERROR - orders - Error cancelling pending order: 403: Not authorized to cancel this order
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1533, in cancel_pending_order
    raise HTTPException(status_code=403, detail="Not authorized to cancel this order")
fastapi.exceptions.HTTPException: 403: Not authorized to cancel this order
2025-06-11 05:24:43,011 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:24:45,874 - INFO - orders - Cancel pending order request received - Order ID: 9631138251, User ID: 4
2025-06-11 05:24:45,874 - WARNING - orders - Unauthorized attempt to cancel order 9631138251 by user 4
2025-06-11 05:24:45,875 - ERROR - orders - Error cancelling pending order: 403: Not authorized to cancel this order
Traceback (most recent call last):
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\asyncio\runners.py", line 195, in run
    return runner.run(main)
           ~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\asyncio\runners.py", line 123, in run
    raise KeyboardInterrupt()
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1529, in cancel_pending_order
    raise HTTPException(status_code=403, detail="Not authorized to cancel this order")
fastapi.exceptions.HTTPException: 403: Not authorized to cancel this order
2025-06-11 05:24:47,852 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:24:54,053 - INFO - orders - Cancel pending order request received - Order ID: 9631138251, User ID: 4
2025-06-11 05:24:54,054 - WARNING - orders - Unauthorized attempt to cancel order 9631138251 by user 4
2025-06-11 05:24:54,054 - ERROR - orders - Error cancelling pending order: 403: Not authorized to cancel this order
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1529, in cancel_pending_order
    raise HTTPException(status_code=403, detail="Not authorized to cancel this order")
fastapi.exceptions.HTTPException: 403: Not authorized to cancel this order
2025-06-11 05:25:04,214 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:25:08,910 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:25:24,960 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:25:27,508 - INFO - orders - Cancel pending order request received - Order ID: 9631138251, User ID: 4
2025-06-11 05:25:27,508 - WARNING - orders - Unauthorized attempt to cancel order 9631138251 by user 4
2025-06-11 05:25:27,508 - ERROR - orders - Error cancelling pending order: 403: Not authorized to cancel this order
Traceback (most recent call last):
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
asyncio.exceptions.CancelledError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\asyncio\runners.py", line 195, in run
    return runner.run(main)
           ~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\asyncio\runners.py", line 123, in run
    raise KeyboardInterrupt()
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1529, in cancel_pending_order
    raise HTTPException(status_code=403, detail="Not authorized to cancel this order")
fastapi.exceptions.HTTPException: 403: Not authorized to cancel this order
2025-06-11 05:25:29,239 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:25:30,955 - INFO - orders - Cancel pending order request received - Order ID: 9631138251, User ID: 4
2025-06-11 05:25:30,955 - WARNING - orders - Unauthorized attempt to cancel order 9631138251 by user 4
2025-06-11 05:25:30,955 - ERROR - orders - Error cancelling pending order: 403: Not authorized to cancel this order
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1529, in cancel_pending_order
    raise HTTPException(status_code=403, detail="Not authorized to cancel this order")
fastapi.exceptions.HTTPException: 403: Not authorized to cancel this order
2025-06-11 05:26:29,612 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:26:33,867 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:26:38,632 - INFO - orders - Cancel pending order request received - Order ID: 9631138251, User ID: 4
2025-06-11 05:26:38,632 - WARNING - orders - Unauthorized attempt to cancel order 9631138251 by user 4
2025-06-11 05:26:38,632 - ERROR - orders - Error cancelling pending order: 403: Not authorized to cancel this order
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1495, in cancel_pending_order
    raise HTTPException(status_code=403, detail="Not authorized to cancel this order")
fastapi.exceptions.HTTPException: 403: Not authorized to cancel this order
2025-06-11 05:26:46,650 - INFO - orders - Cancel pending order request received - Order ID: 9631138251, User ID: 4
2025-06-11 05:26:46,650 - WARNING - orders - Unauthorized attempt to cancel order 9631138251 by user 4
2025-06-11 05:26:46,651 - ERROR - orders - Error cancelling pending order: 403: Not authorized to cancel this order
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1495, in cancel_pending_order
    raise HTTPException(status_code=403, detail="Not authorized to cancel this order")
fastapi.exceptions.HTTPException: 403: Not authorized to cancel this order
2025-06-11 05:28:47,686 - INFO - orders - Cancel pending order request received - Order ID: 9631138251, User ID: 4
2025-06-11 05:28:47,687 - WARNING - orders - Unauthorized attempt to cancel order 9631138251 by user 4
2025-06-11 05:28:47,687 - ERROR - orders - Error cancelling pending order: 403: Not authorized to cancel this order
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1495, in cancel_pending_order
    raise HTTPException(status_code=403, detail="Not authorized to cancel this order")
fastapi.exceptions.HTTPException: 403: Not authorized to cancel this order
2025-06-11 05:29:57,766 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:30:18,299 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:30:25,274 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:30:28,787 - INFO - orders - Cancel pending order request received - Order ID: 9631138251, User ID: 4
2025-06-11 05:30:28,787 - WARNING - orders - User 4 attempted to cancel order for user 1
2025-06-11 05:30:28,787 - ERROR - orders - Error cancelling pending order: 403: Not authorized to cancel orders for other users
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1503, in cancel_pending_order
    raise HTTPException(status_code=403, detail="Not authorized to cancel orders for other users")
fastapi.exceptions.HTTPException: 403: Not authorized to cancel orders for other users
2025-06-11 05:30:45,766 - INFO - orders - Cancel pending order request received - Order ID: 9631138251, User ID: 4
2025-06-11 05:30:45,766 - WARNING - orders - User 4 attempted to cancel order for user 1
2025-06-11 05:30:45,766 - ERROR - orders - Error cancelling pending order: 403: Not authorized to cancel orders for other users
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1503, in cancel_pending_order
    raise HTTPException(status_code=403, detail="Not authorized to cancel orders for other users")
fastapi.exceptions.HTTPException: 403: Not authorized to cancel orders for other users
2025-06-11 05:30:48,105 - INFO - orders - Cancel pending order request received - Order ID: 9631138251, User ID: 4
2025-06-11 05:30:48,105 - WARNING - orders - User 4 attempted to cancel order for user 1
2025-06-11 05:30:48,105 - ERROR - orders - Error cancelling pending order: 403: Not authorized to cancel orders for other users
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1503, in cancel_pending_order
    raise HTTPException(status_code=403, detail="Not authorized to cancel orders for other users")
fastapi.exceptions.HTTPException: 403: Not authorized to cancel orders for other users
2025-06-11 05:30:55,545 - INFO - orders - Cancel pending order request received - Order ID: 9631138251, User ID: 4
2025-06-11 05:30:55,564 - INFO - orders - Generated cancel_id: 1636775541 for order 9631138251
2025-06-11 05:30:55,568 - INFO - orders - User 4 is_barclays_live_user: False
2025-06-11 05:30:55,568 - INFO - orders - Non-Barclays user. Cancelling order 9631138251 immediately
2025-06-11 05:30:55,637 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-11 05:30:55,638 - INFO - orders - Using order model: UserOrder
2025-06-11 05:30:55,648 - INFO - orders - Fetched 2 open orders for user 4
2025-06-11 05:30:55,662 - INFO - orders - Fetched 3 pending orders for user 4
2025-06-11 05:30:55,666 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 3 pending orders
2025-06-11 05:34:51,089 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:35:57,816 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:36:21,877 - INFO - orders - Pending order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.1
2025-06-11 05:36:21,923 - INFO - orders - Calculated contract_value for pending order: 10000.000000000 (contract_size: 100000.00000000 * quantity: 0.1)
2025-06-11 05:36:21,932 - INFO - orders - User 4 is_barclays_live_user: False
2025-06-11 05:36:21,932 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '4348090858', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.1'), 'order_price': Decimal('0.88'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': None, 'take_profit': None, 'order_user_id': 4, 'order_status': 'PENDING', 'contract_value': Decimal('10000.000000000'), 'margin': None, 'open_time': None}
2025-06-11 05:36:21,933 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 4 at price 0.88
2025-06-11 05:36:21,992 - INFO - orders - Pending order 4348090858 added to Redis for non-Barclays user.
2025-06-11 05:36:21,992 - ERROR - orders - Error updating user data cache after pending order placement: get_user_by_id() missing 1 required positional argument: 'user_type'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 688, in place_pending_order
    db_user = await get_user_by_id(db, user_id_for_order)
                    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
TypeError: get_user_by_id() missing 1 required positional argument: 'user_type'
2025-06-11 05:36:21,994 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-11 05:36:21,995 - INFO - orders - Using order model: UserOrder
2025-06-11 05:36:22,005 - INFO - orders - Fetched 2 open orders for user 4
2025-06-11 05:36:22,027 - INFO - orders - Fetched 4 pending orders for user 4
2025-06-11 05:36:22,032 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 4 pending orders
2025-06-11 05:38:45,655 - INFO - orders - Pending order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.1
2025-06-11 05:38:45,668 - INFO - orders - Calculated contract_value for pending order: 10000.000000000 (contract_size: 100000.00000000 * quantity: 0.1)
2025-06-11 05:38:45,671 - INFO - orders - User 4 is_barclays_live_user: False
2025-06-11 05:38:45,671 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '4520916132', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.1'), 'order_price': Decimal('0.88'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': None, 'take_profit': None, 'order_user_id': 4, 'order_status': 'PENDING', 'contract_value': Decimal('10000.000000000'), 'margin': None, 'open_time': None}
2025-06-11 05:38:45,674 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 4 at price 0.88
2025-06-11 05:38:45,748 - INFO - orders - Pending order 4520916132 added to Redis for non-Barclays user.
2025-06-11 05:38:45,748 - ERROR - orders - Error updating user data cache after pending order placement: get_user_by_id() missing 1 required positional argument: 'user_type'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 688, in place_pending_order
    db_user = await get_user_by_id(db, user_id_for_order)
                    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
TypeError: get_user_by_id() missing 1 required positional argument: 'user_type'
2025-06-11 05:38:45,753 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-11 05:38:45,753 - INFO - orders - Using order model: UserOrder
2025-06-11 05:38:45,761 - INFO - orders - Fetched 2 open orders for user 4
2025-06-11 05:38:45,772 - INFO - orders - Fetched 5 pending orders for user 4
2025-06-11 05:38:45,774 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 5 pending orders
2025-06-11 05:39:01,876 - INFO - orders - Cancel pending order request received - Order ID: 4520916132, User ID: 4
2025-06-11 05:39:01,887 - INFO - orders - Generated cancel_id: 9240797014 for order 4520916132
2025-06-11 05:39:01,890 - INFO - orders - User 4 is_barclays_live_user: False
2025-06-11 05:39:01,892 - INFO - orders - Non-Barclays user. Cancelling order 4520916132 immediately
2025-06-11 05:39:01,932 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-11 05:39:01,932 - INFO - orders - Using order model: UserOrder
2025-06-11 05:39:01,941 - INFO - orders - Fetched 2 open orders for user 4
2025-06-11 05:39:01,948 - INFO - orders - Fetched 4 pending orders for user 4
2025-06-11 05:39:01,953 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 4 pending orders
2025-06-11 05:39:20,080 - INFO - orders - Pending order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.1
2025-06-11 05:39:20,096 - INFO - orders - Calculated contract_value for pending order: 10000.000000000 (contract_size: 100000.00000000 * quantity: 0.1)
2025-06-11 05:39:20,103 - INFO - orders - User 4 is_barclays_live_user: False
2025-06-11 05:39:20,103 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '3318596313', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.1'), 'order_price': Decimal('0.88'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': None, 'take_profit': None, 'order_user_id': 4, 'order_status': 'PENDING', 'contract_value': Decimal('10000.000000000'), 'margin': None, 'open_time': None}
2025-06-11 05:39:20,112 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 4 at price 0.88
2025-06-11 05:39:20,171 - INFO - orders - Pending order 3318596313 added to Redis for non-Barclays user.
2025-06-11 05:39:20,171 - ERROR - orders - Error updating user data cache after pending order placement: get_user_by_id() missing 1 required positional argument: 'user_type'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 688, in place_pending_order
    db_user = await get_user_by_id(db, user_id_for_order)
                    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
TypeError: get_user_by_id() missing 1 required positional argument: 'user_type'
2025-06-11 05:39:20,173 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-11 05:39:20,173 - INFO - orders - Using order model: UserOrder
2025-06-11 05:39:20,184 - INFO - orders - Fetched 2 open orders for user 4
2025-06-11 05:39:20,192 - INFO - orders - Fetched 5 pending orders for user 4
2025-06-11 05:39:20,194 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 5 pending orders
2025-06-11 05:50:22,758 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:50:54,922 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:51:45,886 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:52:44,856 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:53:23,979 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:53:56,219 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:54:30,895 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:55:54,000 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 05:56:26,671 - INFO - orders - Pending order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.1
2025-06-11 05:56:26,698 - INFO - orders - Calculated contract_value for pending order: 10000.000000000 (contract_size: 100000.00000000 * quantity: 0.1)
2025-06-11 05:56:26,699 - INFO - orders - [DEBUG] User data from cache: {'id': 4, 'email': 'dhanush777ss@gmail.com', 'account_number': 'DYY5A', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('5000.00000000'), 'margin': Decimal('2603.77000000'), 'user_type': 'live', 'first_name': None, 'last_name': None, 'country': 'string', 'phone_number': Decimal('8618025298')}
2025-06-11 05:56:26,700 - INFO - orders - [DEBUG] Group name: Group B
2025-06-11 05:56:26,701 - INFO - orders - [DEBUG] Group settings from cache: None
2025-06-11 05:56:26,722 - INFO - orders - [DEBUG] Group from database: [<app.database.models.Group object at 0x000001F9494946E0>, <app.database.models.Group object at 0x000001F9495DEE90>, <app.database.models.Group object at 0x000001F9495DED50>, <app.database.models.Group object at 0x000001F9495E69E0>, <app.database.models.Group object at 0x000001F9495E6B10>, <app.database.models.Group object at 0x000001F9496EBAD0>, <app.database.models.Group object at 0x000001F9492FB8A0>, <app.database.models.Group object at 0x000001F9492FA250>, <app.database.models.Group object at 0x000001F9492FA470>, <app.database.models.Group object at 0x000001F9492FB9B0>, <app.database.models.Group object at 0x000001F9492FBAC0>, <app.database.models.Group object at 0x000001F9492FBBD0>, <app.database.models.Group object at 0x000001F9492FBCE0>, <app.database.models.Group object at 0x000001F9492FBDF0>, <app.database.models.Group object at 0x000001F9492FBF00>, <app.database.models.Group object at 0x000001F949768050>, <app.database.models.Group object at 0x000001F949768160>, <app.database.models.Group object at 0x000001F949768270>, <app.database.models.Group object at 0x000001F949768380>, <app.database.models.Group object at 0x000001F949768490>, <app.database.models.Group object at 0x000001F9497685A0>, <app.database.models.Group object at 0x000001F9497686B0>, <app.database.models.Group object at 0x000001F9497687C0>, <app.database.models.Group object at 0x000001F9497688D0>, <app.database.models.Group object at 0x000001F9497689E0>, <app.database.models.Group object at 0x000001F949768AF0>, <app.database.models.Group object at 0x000001F949768C00>, <app.database.models.Group object at 0x000001F949768D10>, <app.database.models.Group object at 0x000001F949768E20>, <app.database.models.Group object at 0x000001F949768F30>, <app.database.models.Group object at 0x000001F949769040>, <app.database.models.Group object at 0x000001F949769150>, <app.database.models.Group object at 0x000001F949769260>, <app.database.models.Group object at 0x000001F949769370>, <app.database.models.Group object at 0x000001F949769480>, <app.database.models.Group object at 0x000001F949769590>, <app.database.models.Group object at 0x000001F9497696A0>, <app.database.models.Group object at 0x000001F9497697B0>, <app.database.models.Group object at 0x000001F9497698C0>, <app.database.models.Group object at 0x000001F9497699D0>, <app.database.models.Group object at 0x000001F949769AE0>, <app.database.models.Group object at 0x000001F949769BF0>, <app.database.models.Group object at 0x000001F949769D00>, <app.database.models.Group object at 0x000001F949769E10>, <app.database.models.Group object at 0x000001F949769F20>, <app.database.models.Group object at 0x000001F94976A030>, <app.database.models.Group object at 0x000001F94976A140>, <app.database.models.Group object at 0x000001F94976A250>, <app.database.models.Group object at 0x000001F94976A360>, <app.database.models.Group object at 0x000001F94976A470>, <app.database.models.Group object at 0x000001F94976A580>, <app.database.models.Group object at 0x000001F94976A690>, <app.database.models.Group object at 0x000001F94976A7A0>, <app.database.models.Group object at 0x000001F94976A8B0>, <app.database.models.Group object at 0x000001F94976A9C0>, <app.database.models.Group object at 0x000001F94976AAD0>, <app.database.models.Group object at 0x000001F94976ABE0>, <app.database.models.Group object at 0x000001F94976ACF0>, <app.database.models.Group object at 0x000001F94976AE00>, <app.database.models.Group object at 0x000001F94976AF10>, <app.database.models.Group object at 0x000001F94976B020>, <app.database.models.Group object at 0x000001F94976B130>, <app.database.models.Group object at 0x000001F94976B240>, <app.database.models.Group object at 0x000001F94976B350>, <app.database.models.Group object at 0x000001F94976B460>, <app.database.models.Group object at 0x000001F94976B570>, <app.database.models.Group object at 0x000001F94976B680>, <app.database.models.Group object at 0x000001F94976B790>, <app.database.models.Group object at 0x000001F94976B8A0>, <app.database.models.Group object at 0x000001F94976B9B0>, <app.database.models.Group object at 0x000001F94976BAC0>, <app.database.models.Group object at 0x000001F94976BBD0>, <app.database.models.Group object at 0x000001F94976BCE0>, <app.database.models.Group object at 0x000001F94976BDF0>, <app.database.models.Group object at 0x000001F94976BF00>, <app.database.models.Group object at 0x000001F94977C050>, <app.database.models.Group object at 0x000001F94977C160>, <app.database.models.Group object at 0x000001F94977C270>, <app.database.models.Group object at 0x000001F94977C380>]
2025-06-11 05:56:26,722 - INFO - orders - [DEBUG] sending_orders from database (list): barclays
2025-06-11 05:56:26,724 - INFO - orders - [DEBUG] Updated group settings cache with: {'sending_orders': 'barclays'}
2025-06-11 05:56:26,724 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-06-11 05:56:26,724 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-06-11 05:56:26,724 - INFO - orders - User 4 is_barclays_live_user: True (user_type: live, sending_orders_normalized: barclays)
2025-06-11 05:56:26,724 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '2478894656', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.1'), 'order_price': Decimal('0.88'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': None, 'take_profit': None, 'order_user_id': 4, 'order_status': 'PENDING', 'contract_value': Decimal('10000.000000000'), 'margin': None, 'open_time': None}
2025-06-11 05:56:26,725 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 4 at price 0.88
2025-06-11 05:56:26,850 - INFO - orders - Barclays live user detected. Sending pending order to Firebase.
2025-06-11 05:56:26,851 - INFO - orders - [FIREBASE] Prepared Firebase payload for pending order: {'order_id': '2478894656', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_status': 'PENDING', 'order_price': '0.88000000', 'order_quantity': '0.10000000', 'contract_value': '10000.00000000', 'margin': None, 'stop_loss': None, 'take_profit': None, 'status': 'PENDING', 'action': 'pending_order', 'timestamp': '2025-06-11T12:56:26.851028+00:00'}
2025-06-11 05:56:27,134 - INFO - orders - [FIREBASE] Successfully sent pending order 2478894656 to Firebase for Barclays user 4
2025-06-11 05:56:27,135 - INFO - orders - Skipping Redis storage for Barclays user pending order 2478894656
2025-06-11 05:56:27,136 - ERROR - orders - Error updating user data cache after pending order placement: get_user_by_id() missing 1 required positional argument: 'user_type'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 732, in place_pending_order
    db_user = await get_user_by_id(db, user_id_for_order)
                    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
TypeError: get_user_by_id() missing 1 required positional argument: 'user_type'
2025-06-11 05:56:27,143 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-11 05:56:27,143 - INFO - orders - Using order model: UserOrder
2025-06-11 05:56:27,168 - INFO - orders - Fetched 2 open orders for user 4
2025-06-11 05:56:27,179 - INFO - orders - Fetched 6 pending orders for user 4
2025-06-11 05:56:27,181 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 6 pending orders
2025-06-11 05:57:59,766 - INFO - orders - Cancel pending order request received - Order ID: 2478894656, User ID: 4
2025-06-11 05:57:59,778 - INFO - orders - Generated cancel_id: 4179369201 for order 2478894656
2025-06-11 05:57:59,779 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-11 05:57:59,779 - INFO - orders - Barclays user detected. Sending cancel request to Firebase for order 2478894656
2025-06-11 05:58:00,440 - INFO - orders - Cancel request sent to Firebase for order 2478894656
2025-06-11 21:24:55,660 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 21:27:12,690 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.1
2025-06-11 21:27:12,716 - INFO - orders - Calculated contract_value for pending order: 10000.000000000 (contract_size: 100000.00000000 * quantity: 0.1)
2025-06-11 21:27:12,722 - INFO - orders - [DEBUG] User data from cache: {'id': 1, 'email': 'dhanush777ss@gmail.com', 'account_number': '5O42G', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('83853.93000000'), 'margin': Decimal('1020.64000000'), 'user_type': 'demo', 'first_name': None, 'last_name': None, 'country': None, 'phone_number': Decimal('8618025298')}
2025-06-11 21:27:12,723 - INFO - orders - [DEBUG] Group name: Group B
2025-06-11 21:27:12,725 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-06-11 21:27:12,725 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-06-11 21:27:12,725 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-06-11 21:27:12,726 - INFO - orders - User 1 is_barclays_live_user: True (user_type: live, sending_orders_normalized: barclays)
2025-06-11 21:27:12,726 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '6160702896', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.1'), 'order_price': Decimal('0.88'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': None, 'take_profit': None, 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': Decimal('10000.000000000'), 'margin': None, 'open_time': None}
2025-06-11 21:27:12,726 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.88
2025-06-11 21:27:12,780 - ERROR - orders - Unexpected error in place_pending_order: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')
[SQL: INSERT INTO user_orders (status, order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('PENDING', '6160702896', 1, 'AUDCAD', 'BUY_LIMIT', 'PENDING', Decimal('0.88'), Decimal('0.1'), Decimal('10000.000000000'), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 661, in place_pending_order
    db_order = await crud_order.create_order(db, order_create_internal.model_dump(), order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 74, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')
[SQL: INSERT INTO user_orders (status, order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('PENDING', '6160702896', 1, 'AUDCAD', 'BUY_LIMIT', 'PENDING', Decimal('0.88'), Decimal('0.1'), Decimal('10000.000000000'), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-11 21:27:54,636 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.1
2025-06-11 21:27:54,668 - INFO - orders - Calculated contract_value for pending order: 10000.000000000 (contract_size: 100000.00000000 * quantity: 0.1)
2025-06-11 21:27:54,669 - INFO - orders - [DEBUG] User data from cache: {'id': 1, 'email': 'dhanush777ss@gmail.com', 'account_number': '5O42G', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('83853.93000000'), 'margin': Decimal('1020.64000000'), 'user_type': 'demo', 'first_name': None, 'last_name': None, 'country': None, 'phone_number': Decimal('8618025298')}
2025-06-11 21:27:54,670 - INFO - orders - [DEBUG] Group name: Group B
2025-06-11 21:27:54,671 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-06-11 21:27:54,671 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-06-11 21:27:54,671 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-06-11 21:27:54,671 - INFO - orders - User 1 is_barclays_live_user: False (user_type: demo, sending_orders_normalized: barclays)
2025-06-11 21:27:54,672 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '1507683451', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.1'), 'order_price': Decimal('0.88'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': None, 'take_profit': None, 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': Decimal('10000.000000000'), 'margin': None, 'open_time': None}
2025-06-11 21:27:54,672 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.88
2025-06-11 21:27:54,765 - INFO - orders - Pending order 1507683451 added to Redis for non-Barclays user.
2025-06-11 21:27:54,777 - INFO - orders - User data cache updated for user 1 after placing pending order
2025-06-11 21:27:54,777 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-11 21:27:54,777 - INFO - orders - Using order model: DemoUserOrder
2025-06-11 21:27:54,790 - INFO - orders - Fetched 2 open orders for user 1
2025-06-11 21:27:54,803 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-11 21:27:54,805 - INFO - orders - Updated static orders cache for user 1 with 2 open orders and 4 pending orders
2025-06-11 21:29:32,416 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 21:30:31,751 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 21:31:40,431 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 21:31:51,070 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.1
2025-06-11 21:31:51,070 - ERROR - orders - User type mismatch: Authenticated as demo but request specified live
2025-06-11 21:31:51,070 - ERROR - orders - Unexpected error in place_pending_order: 400: User type mismatch: You are authenticated as a demo user but trying to place an order as a live user
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 569, in place_pending_order
    raise HTTPException(
    ...<2 lines>...
    )
fastapi.exceptions.HTTPException: 400: User type mismatch: You are authenticated as a demo user but trying to place an order as a live user
2025-06-11 21:32:34,525 - INFO - orders - Pending order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.1
2025-06-11 21:32:34,525 - ERROR - orders - User type mismatch: Authenticated as live but request specified demo
2025-06-11 21:32:34,526 - ERROR - orders - Unexpected error in place_pending_order: 400: User type mismatch: You are authenticated as a live user but trying to place an order as a demo user
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 569, in place_pending_order
    raise HTTPException(
    ...<2 lines>...
    )
fastapi.exceptions.HTTPException: 400: User type mismatch: You are authenticated as a live user but trying to place an order as a demo user
2025-06-11 21:32:48,973 - INFO - orders - Pending order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.1
2025-06-11 21:32:49,026 - INFO - orders - Calculated contract_value for pending order: 10000.000000000 (contract_size: 100000.00000000 * quantity: 0.1)
2025-06-11 21:32:49,030 - INFO - orders - [DEBUG] User data from cache: {'id': 4, 'email': 'dhanush777ss@gmail.com', 'account_number': 'DYY5A', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('5000.00000000'), 'margin': Decimal('2603.77000000'), 'user_type': 'live', 'first_name': None, 'last_name': None, 'country': 'string', 'phone_number': Decimal('8618025298')}
2025-06-11 21:32:49,031 - INFO - orders - [DEBUG] Group name: Group B
2025-06-11 21:32:49,033 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-06-11 21:32:49,033 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-06-11 21:32:49,033 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-06-11 21:32:49,034 - INFO - orders - User 4 is_barclays_live_user: True (user_type: live, sending_orders_normalized: barclays)
2025-06-11 21:32:49,034 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '7099216144', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.1'), 'order_price': Decimal('0.88'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': None, 'take_profit': None, 'order_user_id': 4, 'order_status': 'PENDING', 'contract_value': Decimal('10000.000000000'), 'margin': None, 'open_time': None}
2025-06-11 21:32:49,034 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 4 at price 0.88
2025-06-11 21:32:49,181 - INFO - orders - Barclays live user detected. Sending pending order to Firebase.
2025-06-11 21:32:49,181 - INFO - orders - [FIREBASE] Prepared Firebase payload for pending order: {'order_id': '7099216144', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_status': 'PENDING', 'order_price': '0.88000000', 'order_quantity': '0.10000000', 'contract_value': '10000.00000000', 'margin': None, 'stop_loss': None, 'take_profit': None, 'status': 'PENDING', 'action': 'pending_order', 'timestamp': '2025-06-12T04:32:49.181528+00:00'}
2025-06-11 21:32:49,559 - INFO - orders - [FIREBASE] Successfully sent pending order 7099216144 to Firebase for Barclays user 4
2025-06-11 21:32:49,559 - INFO - orders - Skipping Redis storage for Barclays user pending order 7099216144
2025-06-11 21:32:49,570 - INFO - orders - User data cache updated for user 4 after placing pending order
2025-06-11 21:32:49,570 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-11 21:32:49,570 - INFO - orders - Using order model: UserOrder
2025-06-11 21:32:49,607 - INFO - orders - Fetched 2 open orders for user 4
2025-06-11 21:32:49,655 - INFO - orders - Fetched 7 pending orders for user 4
2025-06-11 21:32:49,658 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 7 pending orders
2025-06-11 21:36:11,839 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 21:36:20,953 - INFO - orders - Pending order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.1
2025-06-11 21:36:20,973 - INFO - orders - Calculated contract_value for pending order: 10000.000000000 (contract_size: 100000.00000000 * quantity: 0.1)
2025-06-11 21:36:20,975 - INFO - orders - [DEBUG] User data from cache: {'id': 4, 'email': 'dhanush777ss@gmail.com', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'user_type': 'live', 'account_number': 'DYY5A', 'wallet_balance': Decimal('5000.00000000'), 'margin': Decimal('2603.77000000'), 'first_name': None, 'last_name': None, 'country': 'string', 'phone_number': Decimal('8618025298')}
2025-06-11 21:36:20,975 - INFO - orders - [DEBUG] Group name: Group B
2025-06-11 21:36:20,976 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-06-11 21:36:20,976 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-06-11 21:36:20,976 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-06-11 21:36:20,976 - INFO - orders - User 4 is_barclays_live_user: True (user_type: live, sending_orders_normalized: barclays)
2025-06-11 21:36:20,976 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '6161017753', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.1'), 'order_price': Decimal('0.88'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': None, 'take_profit': None, 'order_user_id': 4, 'order_status': 'PENDING_PROCESSING', 'contract_value': Decimal('10000.000000000'), 'margin': None, 'open_time': None}
2025-06-11 21:36:20,976 - INFO - orders - [BARCLAYS] Setting initial order_status to PENDING_PROCESSING for Barclays user. Will be updated to PENDING after service provider confirmation.
2025-06-11 21:36:20,976 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 4 at price 0.88
2025-06-11 21:36:21,022 - INFO - orders - Barclays live user detected. Sending pending order to Firebase.
2025-06-11 21:36:21,022 - INFO - orders - [FIREBASE] Prepared Firebase payload for pending order: {'order_id': '6161017753', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_status': 'PENDING_PROCESSING', 'order_price': '0.88000000', 'order_quantity': '0.10000000', 'contract_value': '10000.00000000', 'margin': None, 'stop_loss': None, 'take_profit': None, 'status': 'PENDING', 'action': 'pending_order', 'timestamp': '2025-06-12T04:36:21.022438+00:00'}
2025-06-11 21:36:21,317 - INFO - orders - [FIREBASE] Successfully sent pending order 6161017753 to Firebase for Barclays user 4
2025-06-11 21:36:21,317 - INFO - orders - Skipping Redis storage for Barclays user pending order 6161017753
2025-06-11 21:36:21,327 - INFO - orders - User data cache updated for user 4 after placing pending order
2025-06-11 21:36:21,327 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-11 21:36:21,327 - INFO - orders - Using order model: UserOrder
2025-06-11 21:36:21,338 - INFO - orders - Fetched 2 open orders for user 4
2025-06-11 21:36:21,347 - INFO - orders - Fetched 7 pending orders for user 4
2025-06-11 21:36:21,350 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 7 pending orders
2025-06-11 22:05:21,237 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 22:05:50,627 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 22:13:15,709 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 22:14:14,030 - INFO - orders - Cancel pending order request received - Order ID: 7099216144, User ID: 4
2025-06-11 22:14:14,053 - INFO - orders - Generated cancel_id: 2600111732 for order 7099216144
2025-06-11 22:14:14,056 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-11 22:14:14,056 - INFO - orders - Barclays user detected. Sending cancel request to Firebase for order 7099216144
2025-06-11 22:14:14,526 - INFO - orders - Cancel request sent to Firebase for order 7099216144
2025-06-11 22:15:09,640 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 22:16:14,879 - INFO - orders - Order placement request received - User ID: 4, Symbol: US30, Type: BUY, Quantity: 2
2025-06-11 22:16:14,893 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-11 22:16:14,894 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-11 22:16:14,894 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-11 22:16:15,253 - app.services.order_processing - ERROR - Error processing new order: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 182, in process_new_order
    full_margin_usd, price, contract_value, commission = await calculate_single_order_margin(
                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        redis_client=redis_client,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        raw_market_data=raw_market_data
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
2025-06-11 22:16:15,256 - ERROR - orders - Order processing error: Failed to process order: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
2025-06-11 22:21:46,909 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 22:22:47,783 - INFO - orders - Order placement request received - User ID: 4, Symbol: US30, Type: BUY, Quantity: 2
2025-06-11 22:22:47,784 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-11 22:22:47,784 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-11 22:22:47,784 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-11 22:22:48,110 - app.services.order_processing - ERROR - Error processing new order: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 182, in process_new_order
    full_margin_usd, price, contract_value, commission = await calculate_single_order_margin(
                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        redis_client=redis_client,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        raw_market_data=raw_market_data
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
2025-06-11 22:22:48,112 - ERROR - orders - Order processing error: Failed to process order: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
2025-06-11 22:23:40,633 - INFO - orders - Order placement request received - User ID: 4, Symbol: US30, Type: BUY, Quantity: 2
2025-06-11 22:23:40,635 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-11 22:23:40,635 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-11 22:23:40,635 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-11 22:23:40,983 - app.services.order_processing - ERROR - Error processing new order: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 182, in process_new_order
    full_margin_usd, price, contract_value, commission = await calculate_single_order_margin(
                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        redis_client=redis_client,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        raw_market_data=raw_market_data
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
2025-06-11 22:23:40,984 - ERROR - orders - Order processing error: Failed to process order: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
2025-06-11 22:23:45,673 - INFO - orders - Order placement request received - User ID: 4, Symbol: US30, Type: BUY, Quantity: 2
2025-06-11 22:23:45,689 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-11 22:23:45,689 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-11 22:23:45,689 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-11 22:23:46,103 - app.services.order_processing - ERROR - Error processing new order: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 182, in process_new_order
    full_margin_usd, price, contract_value, commission = await calculate_single_order_margin(
                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        redis_client=redis_client,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        raw_market_data=raw_market_data
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
2025-06-11 22:23:46,105 - ERROR - orders - Order processing error: Failed to process order: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
2025-06-11 22:27:22,291 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 22:27:30,435 - INFO - orders - Order placement request received - User ID: 4, Symbol: US30, Type: BUY, Quantity: 2
2025-06-11 22:27:30,439 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-11 22:27:30,439 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-11 22:27:30,439 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-11 22:27:30,770 - app.services.order_processing - ERROR - Error processing new order: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 183, in process_new_order
    full_margin_usd, price, contract_value, commission = await calculate_single_order_margin(
                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        redis_client=redis_client,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        raw_market_data=raw_market_data
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
2025-06-11 22:27:30,775 - ERROR - orders - Order processing error: Failed to process order: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
2025-06-11 22:27:51,112 - INFO - orders - Order placement request received - User ID: 4, Symbol: US30, Type: BUY, Quantity: 2
2025-06-11 22:27:51,114 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-11 22:27:51,114 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-11 22:27:51,114 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-11 22:27:51,453 - app.services.order_processing - ERROR - Error processing new order: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 183, in process_new_order
    full_margin_usd, price, contract_value, commission = await calculate_single_order_margin(
                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        redis_client=redis_client,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        raw_market_data=raw_market_data
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
2025-06-11 22:27:51,454 - ERROR - orders - Order processing error: Failed to process order: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
2025-06-11 22:28:12,855 - INFO - orders - Order placement request received - User ID: 4, Symbol: US30, Type: BUY, Quantity: 2
2025-06-11 22:28:12,856 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-11 22:28:12,856 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-11 22:28:12,856 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-11 22:28:13,165 - app.services.order_processing - ERROR - Error processing new order: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 183, in process_new_order
    full_margin_usd, price, contract_value, commission = await calculate_single_order_margin(
                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        redis_client=redis_client,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        raw_market_data=raw_market_data
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
2025-06-11 22:28:13,166 - ERROR - orders - Order processing error: Failed to process order: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
2025-06-11 22:28:52,376 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 22:29:04,277 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 22:29:27,284 - INFO - orders - Order placement request received - User ID: 4, Symbol: US30, Type: BUY, Quantity: 2
2025-06-11 22:29:27,288 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-11 22:29:27,289 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-11 22:29:27,289 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-11 22:29:27,705 - app.services.order_processing - ERROR - Error processing new order: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 184, in process_new_order
    full_margin_usd, price, contract_value, commission = await calculate_single_order_margin(
                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        redis_client=redis_client,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
        raw_market_data=raw_market_data
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
2025-06-11 22:29:27,709 - ERROR - orders - Order processing error: Failed to process order: calculate_single_order_margin() got an unexpected keyword argument 'redis_client'
2025-06-11 22:30:59,256 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 22:31:33,833 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 22:32:24,244 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 22:32:31,505 - INFO - orders - Order placement request received - User ID: 4, Symbol: US30, Type: BUY, Quantity: 2
2025-06-11 22:32:31,508 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-11 22:32:31,508 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-11 22:32:31,508 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-11 22:32:31,839 - INFO - orders - Calculating margin for US30 BUY order, quantity: 2
2025-06-11 22:32:31,839 - ERROR - orders - Error calculating margin: get_live_adjusted_buy_price_for_pair() missing 1 required positional argument: 'user_group_name'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 184, in calculate_margin
    price_data = await get_live_adjusted_buy_price_for_pair(redis_client, symbol)
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
TypeError: get_live_adjusted_buy_price_for_pair() missing 1 required positional argument: 'user_group_name'
2025-06-11 22:32:31,841 - app.services.order_processing - ERROR - Error processing new order: Margin calculation failed
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 269, in process_new_order
    raise OrderProcessingError("Margin calculation failed")
app.services.order_processing.OrderProcessingError: Margin calculation failed
2025-06-11 22:32:31,843 - ERROR - orders - Order processing error: Failed to process order: Margin calculation failed
2025-06-11 22:33:55,598 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 22:34:15,295 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 22:36:47,047 - INFO - orders - Order placement request received - User ID: 4, Symbol: US30, Type: BUY, Quantity: 2
2025-06-11 22:36:47,050 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-11 22:36:47,050 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-11 22:36:47,050 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-11 22:36:47,679 - INFO - orders - Calculating margin for US30 BUY order, quantity: 2
2025-06-11 22:36:47,687 - ERROR - orders - Could not get price for US30 BUY order
2025-06-11 22:36:47,687 - app.services.order_processing - ERROR - Error processing new order: Margin calculation failed
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 271, in process_new_order
    raise OrderProcessingError("Margin calculation failed")
app.services.order_processing.OrderProcessingError: Margin calculation failed
2025-06-11 22:36:47,688 - ERROR - orders - Order processing error: Failed to process order: Margin calculation failed
2025-06-11 22:37:27,324 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 22:37:54,699 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 22:38:37,055 - INFO - orders - Order placement request received - User ID: 4, Symbol: US30, Type: BUY, Quantity: 2
2025-06-11 22:38:37,069 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-11 22:38:37,070 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-11 22:38:37,070 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-11 22:38:37,443 - INFO - orders - Calculating margin for US30 BUY order, quantity: 2
2025-06-11 22:38:37,458 - INFO - orders - Using order_price 42840.55 as fallback for US30 BUY order
2025-06-11 22:38:37,458 - INFO - orders - Margin calculation results: margin=856.81, price=42840.55, contract_value=85681.1000000000, commission=20.00
2025-06-11 22:38:37,458 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol US30: Calculated commission=20.00
2025-06-11 22:38:37,482 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol US30, Positions count: 0
2025-06-11 22:38:37,483 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol US30. Returning zero margin.
2025-06-11 22:38:37,483 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol US30, Positions count: 1
2025-06-11 22:38:37,483 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol US30, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=2, StoredMargin=856.81
2025-06-11 22:38:37,483 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol US30, Pos 1: MarginPerLot=428.405
2025-06-11 22:38:37,483 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol US30: TotalBuyQty=2, TotalSellQty=0, NetQty=2
2025-06-11 22:38:37,484 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol US30: AllMarginsPerLot=[Decimal('428.405')], HighestMarginPerLot=428.405
2025-06-11 22:38:37,484 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol US30: CalculatedTotalMargin=856.81, ContributingOrders=1 (based on individual stored margins)
2025-06-11 22:38:37,484 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol US30: MarginBefore=0.00, MarginAfter=856.81, AdditionalMargin=856.81
2025-06-11 22:38:37,504 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '5784525260', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'US30', 'order_type': 'BUY', 'order_price': Decimal('42840.55'), 'order_quantity': Decimal('2'), 'contract_value': Decimal('85681.1000000000'), 'margin': Decimal('856.81'), 'commission': Decimal('20.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-11 22:38:37,617 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 2603.77000000
2025-06-11 22:38:37,675 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-11 22:38:37,917 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-11 22:38:38,136 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '5784525260', 'order_user_id': 4, 'order_company_name': 'US30', 'order_type': 'BUY', 'order_status': 'PROCESSING', 'order_price': Decimal('42840.55000000'), 'order_quantity': Decimal('2.00000000'), 'contract_value': Decimal('85681.10000000'), 'margin': Decimal('856.81000000'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-11 22:38:38,509 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 5784525260 (order_status=PROCESSING, margin not updated in DB)
2025-06-11 22:38:38,515 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-11 22:38:38,516 - INFO - orders - Using order model: UserOrder
2025-06-11 22:38:38,547 - INFO - orders - Fetched 2 open orders for user 4
2025-06-11 22:38:38,579 - INFO - orders - Fetched 7 pending orders for user 4
2025-06-11 22:38:38,583 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 7 pending orders
2025-06-11 22:45:29,299 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 22:46:24,577 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 22:47:38,150 - INFO - orders - Application starting up - Orders logging initialized
2025-06-11 22:50:59,428 - INFO - orders - Close order request received - Order ID: 4009319950, User ID: 1, User Type: demo
2025-06-11 22:50:59,428 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-11 22:50:59,429 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000228ED5F7390>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-11 22:50:59,429 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-11 22:50:59,429 - INFO - orders - Request to close order 4009319950 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-11 22:50:59,464 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-11 22:50:59,550 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol US30, Positions count: 1
2025-06-11 22:50:59,551 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol US30, Pos 1 (ID: 166): Type=BUY, Qty=2.00000000, StoredMargin=856.65100000
2025-06-11 22:50:59,551 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol US30, Pos 1: MarginPerLot=428.3255
2025-06-11 22:50:59,551 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol US30: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-11 22:50:59,551 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol US30: AllMarginsPerLot=[Decimal('428.3255')], HighestMarginPerLot=428.3255
2025-06-11 22:50:59,551 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol US30: CalculatedTotalMargin=856.65, ContributingOrders=1 (based on individual stored margins)
2025-06-11 22:50:59,551 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol US30, Positions count: 0
2025-06-11 22:50:59,551 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol US30. Returning zero margin.
2025-06-11 22:50:59,693 - INFO - orders - Existing entry commission for order 4009319950: 20.00000000
2025-06-11 22:50:59,693 - INFO - orders - Commission calculation for order 4009319950: entry=20.00000000, exit=0.0, total=20.00
2025-06-11 22:50:59,943 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=-75683.32000000, margin=163.99
2025-06-11 22:50:59,943 - INFO - orders - Setting user data cache for user 1 with wallet_balance=-75683.32000000, margin=163.99
2025-06-11 22:50:59,945 - INFO - orders - User data cache updated for user 1
2025-06-11 22:50:59,945 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-11 22:50:59,945 - INFO - orders - Using order model: DemoUserOrder
2025-06-11 22:50:59,978 - INFO - orders - Fetched 1 open orders for user 1
2025-06-11 22:50:59,986 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-11 22:50:59,988 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 4 pending orders
2025-06-11 22:50:59,988 - INFO - orders - Publishing order update for user 1
2025-06-11 22:50:59,990 - INFO - orders - Publishing user data update for user 1
2025-06-11 22:50:59,991 - INFO - orders - Publishing market data trigger
2025-06-11 22:51:26,797 - INFO - orders - Close order request received - Order ID: 2345068231, User ID: 1, User Type: demo
2025-06-11 22:51:26,797 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-11 22:51:26,797 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000228ED821F30>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-11 22:51:26,798 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-11 22:51:26,798 - INFO - orders - Request to close order 2345068231 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-11 22:51:26,865 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-11 22:51:27,195 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol BTCUSD, Positions count: 1
2025-06-11 22:51:27,196 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol BTCUSD, Pos 1 (ID: 167): Type=BUY, Qty=0.15000000, StoredMargin=163.98510000
2025-06-11 22:51:27,196 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol BTCUSD, Pos 1: MarginPerLot=1093.234
2025-06-11 22:51:27,196 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol BTCUSD: TotalBuyQty=0.15000000, TotalSellQty=0, NetQty=0.15000000
2025-06-11 22:51:27,196 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol BTCUSD: AllMarginsPerLot=[Decimal('1093.234')], HighestMarginPerLot=1093.234
2025-06-11 22:51:27,196 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol BTCUSD: CalculatedTotalMargin=163.99, ContributingOrders=1 (based on individual stored margins)
2025-06-11 22:51:27,196 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol BTCUSD, Positions count: 0
2025-06-11 22:51:27,198 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol BTCUSD. Returning zero margin.
2025-06-11 22:51:27,227 - INFO - orders - Existing entry commission for order 2345068231: 1.50000000
2025-06-11 22:51:27,227 - INFO - orders - Commission calculation for order 2345068231: entry=1.50000000, exit=0.0, total=1.50
2025-06-11 22:51:27,395 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=-92083.20000000, margin=0
2025-06-11 22:51:27,395 - INFO - orders - Setting user data cache for user 1 with wallet_balance=-92083.20000000, margin=0
2025-06-11 22:51:27,402 - INFO - orders - User data cache updated for user 1
2025-06-11 22:51:27,402 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-11 22:51:27,402 - INFO - orders - Using order model: DemoUserOrder
2025-06-11 22:51:27,422 - INFO - orders - Fetched 0 open orders for user 1
2025-06-11 22:51:27,444 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-11 22:51:27,450 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 4 pending orders
2025-06-11 22:51:27,450 - INFO - orders - Publishing order update for user 1
2025-06-11 22:51:27,454 - INFO - orders - Publishing user data update for user 1
2025-06-11 22:51:27,463 - INFO - orders - Publishing market data trigger
2025-06-11 22:54:15,875 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 20
2025-06-11 22:54:15,876 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-11 22:54:15,876 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-11 22:54:15,876 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-11 22:54:16,694 - INFO - orders - Calculating margin for AUDCAD BUY order, quantity: 20
2025-06-11 22:54:16,702 - INFO - orders - Using order_price 42840.55 as fallback for AUDCAD BUY order
2025-06-11 22:54:16,702 - INFO - orders - Margin calculation results: margin=856811000.00, price=42840.55, contract_value=85681100000.0000000000, commission=200.00
2025-06-11 22:54:16,702 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=200.00
2025-06-11 22:54:16,706 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-11 22:54:16,707 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-11 22:54:16,707 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-11 22:54:16,707 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=20, StoredMargin=856811000.00
2025-06-11 22:54:16,707 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=42840550.00
2025-06-11 22:54:16,707 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=20, TotalSellQty=0, NetQty=20
2025-06-11 22:54:16,707 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('42840550.00')], HighestMarginPerLot=42840550.00
2025-06-11 22:54:16,707 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=856811000.00, ContributingOrders=1 (based on individual stored margins)
2025-06-11 22:54:16,707 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=856811000.00, AdditionalMargin=856811000.00
2025-06-11 22:54:16,710 - app.services.order_processing - ERROR - Error processing new order: Not enough wallet balance to cover additional margin.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 321, in process_new_order
    raise InsufficientFundsError("Not enough wallet balance to cover additional margin.")
app.services.order_processing.InsufficientFundsError: Not enough wallet balance to cover additional margin.
2025-06-11 22:54:16,712 - ERROR - orders - Order processing error: Failed to process order: Not enough wallet balance to cover additional margin.
2025-06-11 22:54:24,839 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 10
2025-06-11 22:54:24,841 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-11 22:54:24,841 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-11 22:54:24,841 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-11 22:54:25,182 - INFO - orders - Calculating margin for AUDCAD BUY order, quantity: 10
2025-06-11 22:54:25,191 - INFO - orders - Using order_price 42840.55 as fallback for AUDCAD BUY order
2025-06-11 22:54:25,191 - INFO - orders - Margin calculation results: margin=428405500.00, price=42840.55, contract_value=42840550000.0000000000, commission=100.00
2025-06-11 22:54:25,191 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=100.00
2025-06-11 22:54:25,195 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-11 22:54:25,195 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-11 22:54:25,195 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-11 22:54:25,195 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=10, StoredMargin=428405500.00
2025-06-11 22:54:25,195 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=42840550.00
2025-06-11 22:54:25,195 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=10, TotalSellQty=0, NetQty=10
2025-06-11 22:54:25,195 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('42840550.00')], HighestMarginPerLot=42840550.00
2025-06-11 22:54:25,196 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=428405500.00, ContributingOrders=1 (based on individual stored margins)
2025-06-11 22:54:25,196 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=428405500.00, AdditionalMargin=428405500.00
2025-06-11 22:54:25,199 - app.services.order_processing - ERROR - Error processing new order: Not enough wallet balance to cover additional margin.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 321, in process_new_order
    raise InsufficientFundsError("Not enough wallet balance to cover additional margin.")
app.services.order_processing.InsufficientFundsError: Not enough wallet balance to cover additional margin.
2025-06-11 22:54:25,199 - ERROR - orders - Order processing error: Failed to process order: Not enough wallet balance to cover additional margin.
2025-06-11 22:55:02,576 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 20
2025-06-11 22:55:02,578 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-11 22:55:02,578 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-11 22:55:02,578 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-11 22:55:02,876 - INFO - orders - Calculating margin for AUDCAD BUY order, quantity: 20
2025-06-11 22:55:02,877 - INFO - orders - Margin calculation results: margin=17748.80, price=0.8874400000, contract_value=1774880.000000000000000000, commission=200.00
2025-06-11 22:55:02,877 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=200.00
2025-06-11 22:55:02,884 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-11 22:55:02,884 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-11 22:55:02,884 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-11 22:55:02,884 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=20, StoredMargin=17748.80
2025-06-11 22:55:02,884 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.44
2025-06-11 22:55:02,884 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=20, TotalSellQty=0, NetQty=20
2025-06-11 22:55:02,884 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.44')], HighestMarginPerLot=887.44
2025-06-11 22:55:02,884 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=17748.80, ContributingOrders=1 (based on individual stored margins)
2025-06-11 22:55:02,884 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=17748.80, AdditionalMargin=17748.80
2025-06-11 22:55:02,891 - app.services.order_processing - ERROR - Error processing new order: Not enough wallet balance to cover additional margin.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 321, in process_new_order
    raise InsufficientFundsError("Not enough wallet balance to cover additional margin.")
app.services.order_processing.InsufficientFundsError: Not enough wallet balance to cover additional margin.
2025-06-11 22:55:02,892 - ERROR - orders - Order processing error: Failed to process order: Not enough wallet balance to cover additional margin.
2025-06-11 22:55:08,754 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 10
2025-06-11 22:55:08,756 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-11 22:55:08,756 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-11 22:55:08,756 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-11 22:55:09,132 - INFO - orders - Calculating margin for AUDCAD BUY order, quantity: 10
2025-06-11 22:55:09,133 - INFO - orders - Margin calculation results: margin=8874.40, price=0.8874400000, contract_value=887440.000000000000000000, commission=100.00
2025-06-11 22:55:09,133 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=100.00
2025-06-11 22:55:09,139 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-11 22:55:09,139 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-11 22:55:09,139 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-11 22:55:09,139 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=10, StoredMargin=8874.40
2025-06-11 22:55:09,140 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.44
2025-06-11 22:55:09,140 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=10, TotalSellQty=0, NetQty=10
2025-06-11 22:55:09,140 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.44')], HighestMarginPerLot=887.44
2025-06-11 22:55:09,140 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=8874.40, ContributingOrders=1 (based on individual stored margins)
2025-06-11 22:55:09,140 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=8874.40, AdditionalMargin=8874.40
2025-06-11 22:55:09,144 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=8874.40
2025-06-11 22:55:09,184 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '5677797595', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8874400000'), 'order_quantity': Decimal('10'), 'contract_value': Decimal('887440.000000000000000000'), 'margin': Decimal('8874.40'), 'commission': Decimal('100.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-11 22:55:09,222 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 8874.40000000
2025-06-11 22:55:09,235 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-11 22:55:09,312 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-11 22:55:09,314 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-11 22:55:09,314 - INFO - orders - Using order model: DemoUserOrder
2025-06-11 22:55:09,320 - INFO - orders - Fetched 1 open orders for user 1
2025-06-11 22:55:09,325 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-11 22:55:09,328 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 4 pending orders
2025-06-11 22:55:17,186 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 5
2025-06-11 22:55:17,187 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-11 22:55:17,187 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-11 22:55:17,187 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-11 22:55:17,493 - INFO - orders - Calculating margin for AUDCAD BUY order, quantity: 5
2025-06-11 22:55:17,495 - INFO - orders - Margin calculation results: margin=4437.20, price=0.8874400000, contract_value=443720.000000000000000000, commission=50.00
2025-06-11 22:55:17,495 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=50.00
2025-06-11 22:55:17,499 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-11 22:55:17,500 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 172): Type=BUY, Qty=10.00000000, StoredMargin=8874.40000000
2025-06-11 22:55:17,500 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.44
2025-06-11 22:55:17,500 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=10.00000000, TotalSellQty=0, NetQty=10.00000000
2025-06-11 22:55:17,500 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.44')], HighestMarginPerLot=887.44
2025-06-11 22:55:17,500 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=8874.40, ContributingOrders=1 (based on individual stored margins)
2025-06-11 22:55:17,500 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-11 22:55:17,500 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 172): Type=BUY, Qty=10.00000000, StoredMargin=8874.40000000
2025-06-11 22:55:17,500 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.44
2025-06-11 22:55:17,500 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=BUY, Qty=5, StoredMargin=4437.20
2025-06-11 22:55:17,500 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=887.44
2025-06-11 22:55:17,500 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=15.00000000, TotalSellQty=0, NetQty=15.00000000
2025-06-11 22:55:17,500 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.44'), Decimal('887.44')], HighestMarginPerLot=887.44
2025-06-11 22:55:17,500 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=13311.60, ContributingOrders=2 (based on individual stored margins)
2025-06-11 22:55:17,500 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=8874.40, MarginAfter=13311.60, AdditionalMargin=4437.20
2025-06-11 22:55:17,505 - app.services.order_processing - ERROR - Error processing new order: Not enough wallet balance to cover additional margin.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 321, in process_new_order
    raise InsufficientFundsError("Not enough wallet balance to cover additional margin.")
app.services.order_processing.InsufficientFundsError: Not enough wallet balance to cover additional margin.
2025-06-11 22:55:17,506 - ERROR - orders - Order processing error: Failed to process order: Not enough wallet balance to cover additional margin.
2025-06-12 01:58:26,952 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:07:21,757 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:21:14,823 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:23:55,330 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:28:14,024 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:28:14,026 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:29:47,202 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:32:40,428 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:33:06,043 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:33:14,473 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:33:19,477 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:33:24,757 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:33:27,956 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:33:39,925 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:34:32,982 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:35:17,330 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:35:22,669 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:35:33,044 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:35:55,032 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:36:01,411 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:36:11,717 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:36:51,812 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:38:13,541 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:40:52,098 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:40:56,699 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:47:06,230 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:51:55,642 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:57:27,280 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 02:58:19,743 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 03:00:05,952 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:33:06,243 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:34:07,579 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:35:34,356 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:36:02,731 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:36:26,880 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:36:26,891 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:36:42,100 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:36:42,118 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:37:39,023 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:37:39,051 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:38:17,291 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:38:17,303 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:38:54,391 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:38:54,396 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:39:30,874 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:39:30,883 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:39:58,126 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:40:37,309 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:40:37,309 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:40:54,293 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:40:54,352 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:41:09,880 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:41:09,891 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:41:54,614 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:41:54,653 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:42:42,112 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:42:42,116 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:44:05,167 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:44:05,191 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:47:02,368 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-12 04:48:53,708 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:49:36,803 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:49:37,509 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:49:59,769 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:49:59,814 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:50:30,207 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:50:30,241 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:50:39,436 - app.api.v1.endpoints.orders - INFO - [get_closed_orders] user_type: demo
2025-06-12 04:51:46,754 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:57:24,215 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-12 04:59:17,094 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-12 04:59:40,800 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 04:59:53,880 - app.api.v1.endpoints.orders - INFO - [get_closed_orders] user_type: live
2025-06-12 05:00:42,524 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-12 05:00:42,574 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000013660A30AF0>, <app.database.models.Group object at 0x0000013660A32AD0>, <app.database.models.Group object at 0x0000013660A338A0>, <app.database.models.Group object at 0x0000013660A32030>, <app.database.models.Group object at 0x0000013660A31150>, <app.database.models.Group object at 0x0000013660A31480>, <app.database.models.Group object at 0x0000013660A32360>, <app.database.models.Group object at 0x0000013660A30490>, <app.database.models.Group object at 0x0000013660A32F10>, <app.database.models.Group object at 0x0000013660A30270>, <app.database.models.Group object at 0x0000013660A33F00>, <app.database.models.Group object at 0x0000013660A31E10>, <app.database.models.Group object at 0x0000013660A32250>, <app.database.models.Group object at 0x0000013660A339B0>, <app.database.models.Group object at 0x0000013660A309E0>, <app.database.models.Group object at 0x0000013660A32690>, <app.database.models.Group object at 0x0000013660A30D10>, <app.database.models.Group object at 0x0000013660A30380>, <app.database.models.Group object at 0x0000013660A31590>, <app.database.models.Group object at 0x0000013660A33020>, <app.database.models.Group object at 0x0000013660A316A0>, <app.database.models.Group object at 0x0000013660573AC0>, <app.database.models.Group object at 0x0000013660572BE0>, <app.database.models.Group object at 0x0000013660572E00>, <app.database.models.Group object at 0x0000013660572CF0>, <app.database.models.Group object at 0x00000136605727A0>, <app.database.models.Group object at 0x000001366077B680>, <app.database.models.Group object at 0x0000013660778160>, <app.database.models.Group object at 0x000001366077B570>, <app.database.models.Group object at 0x000001366077B240>, <app.database.models.Group object at 0x0000013660778050>, <app.database.models.Group object at 0x000001366077B790>, <app.database.models.Group object at 0x00000136607787C0>, <app.database.models.Group object at 0x00000136607786B0>, <app.database.models.Group object at 0x000001366077B8A0>, <app.database.models.Group object at 0x0000013660CA0050>, <app.database.models.Group object at 0x0000013660CA0160>, <app.database.models.Group object at 0x0000013660CA0270>, <app.database.models.Group object at 0x0000013660CA0380>, <app.database.models.Group object at 0x0000013660CA0490>, <app.database.models.Group object at 0x0000013660CA05A0>, <app.database.models.Group object at 0x0000013660CA06B0>, <app.database.models.Group object at 0x0000013660CA07C0>, <app.database.models.Group object at 0x0000013660CA08D0>, <app.database.models.Group object at 0x0000013660CA09E0>, <app.database.models.Group object at 0x0000013660CA0AF0>, <app.database.models.Group object at 0x0000013660CA0C00>, <app.database.models.Group object at 0x0000013660CA0D10>, <app.database.models.Group object at 0x0000013660CA0E20>, <app.database.models.Group object at 0x0000013660CA0F30>, <app.database.models.Group object at 0x0000013660CA1040>, <app.database.models.Group object at 0x0000013660CA1150>, <app.database.models.Group object at 0x0000013660CA1260>, <app.database.models.Group object at 0x0000013660CA1370>, <app.database.models.Group object at 0x0000013660CA1480>, <app.database.models.Group object at 0x0000013660CA1590>, <app.database.models.Group object at 0x0000013660CA16A0>, <app.database.models.Group object at 0x0000013660CA17B0>, <app.database.models.Group object at 0x0000013660CA18C0>, <app.database.models.Group object at 0x0000013660CA19D0>, <app.database.models.Group object at 0x0000013660CA1AE0>, <app.database.models.Group object at 0x0000013660CA1BF0>, <app.database.models.Group object at 0x0000013660CA1D00>, <app.database.models.Group object at 0x0000013660CA1E10>, <app.database.models.Group object at 0x0000013660CA1F20>, <app.database.models.Group object at 0x0000013660CA2030>, <app.database.models.Group object at 0x0000013660CA2140>, <app.database.models.Group object at 0x0000013660CA2250>, <app.database.models.Group object at 0x0000013660CA2360>, <app.database.models.Group object at 0x0000013660CA2470>, <app.database.models.Group object at 0x0000013660CA2580>, <app.database.models.Group object at 0x0000013660CA2690>, <app.database.models.Group object at 0x0000013660CA27A0>, <app.database.models.Group object at 0x0000013660CA28B0>, <app.database.models.Group object at 0x0000013660CA29C0>, <app.database.models.Group object at 0x0000013660CA2AD0>, <app.database.models.Group object at 0x0000013660CA2BE0>, <app.database.models.Group object at 0x0000013660CA2CF0>, <app.database.models.Group object at 0x0000013660CA2E00>]
2025-06-12 05:00:42,578 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-12 05:00:42,579 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-12 05:00:42,579 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-12 05:00:42,579 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-12 05:00:42,579 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-12 05:00:43,280 - INFO - orders - Calculating margin for AUDCAD BUY order, quantity: 0.01
2025-06-12 05:00:43,290 - INFO - orders - Margin calculation results: margin=8.88, price=0.8883500000, contract_value=888.35000000000000000000, commission=0.10
2025-06-12 05:00:43,291 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=0.10
2025-06-12 05:00:43,310 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 2
2025-06-12 05:00:43,310 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 48): Type=BUY, Qty=2.00000000, StoredMargin=1301.76269403
2025-06-12 05:00:43,310 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.881347015
2025-06-12 05:00:43,310 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 49): Type=BUY, Qty=2.00000000, StoredMargin=1301.88472416
2025-06-12 05:00:43,310 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=650.94236208
2025-06-12 05:00:43,311 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=4.00000000, TotalSellQty=0, NetQty=4.00000000
2025-06-12 05:00:43,313 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.881347015'), Decimal('650.94236208')], HighestMarginPerLot=650.94236208
2025-06-12 05:00:43,314 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=2603.77, ContributingOrders=2 (based on individual stored margins)
2025-06-12 05:00:43,315 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 3
2025-06-12 05:00:43,315 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 48): Type=BUY, Qty=2.00000000, StoredMargin=1301.76269403
2025-06-12 05:00:43,315 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.881347015
2025-06-12 05:00:43,315 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 49): Type=BUY, Qty=2.00000000, StoredMargin=1301.88472416
2025-06-12 05:00:43,315 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=650.94236208
2025-06-12 05:00:43,315 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: NEW_UNSAVED): Type=BUY, Qty=0.01, StoredMargin=8.88
2025-06-12 05:00:43,315 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=888
2025-06-12 05:00:43,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=4.01000000, TotalSellQty=0, NetQty=4.01000000
2025-06-12 05:00:43,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.881347015'), Decimal('650.94236208'), Decimal('888')], HighestMarginPerLot=888
2025-06-12 05:00:43,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=3560.88, ContributingOrders=3 (based on individual stored margins)
2025-06-12 05:00:43,316 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=2603.77, MarginAfter=3560.88, AdditionalMargin=957.11
2025-06-12 05:00:43,356 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '3955717258', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8883500000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('888.35000000000000000000'), 'margin': Decimal('8.88'), 'commission': Decimal('0.10'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-12 05:00:43,803 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 2603.77000000
2025-06-12 05:00:43,976 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-12 05:00:44,722 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-12 05:00:45,248 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '3955717258', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88835000'), 'order_quantity': Decimal('0.01000000'), 'contract_value': Decimal('888.35000000'), 'margin': Decimal('8.88000000'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-12 05:00:45,624 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 3955717258 (order_status=PROCESSING, margin not updated in DB)
2025-06-12 05:00:45,706 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-12 05:00:45,706 - INFO - orders - Using order model: UserOrder
2025-06-12 05:00:45,796 - INFO - orders - Fetched 2 open orders for user 4
2025-06-12 05:00:45,810 - INFO - orders - Fetched 7 pending orders for user 4
2025-06-12 05:00:45,830 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 7 pending orders
2025-06-12 05:15:35,256 - INFO - orders - Pending order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.01
2025-06-12 05:15:35,373 - INFO - orders - Calculated contract_value for pending order: 1000.0000000000 (contract_size: 100000.00000000 * quantity: 0.01)
2025-06-12 05:15:35,514 - INFO - orders - [DEBUG] User data from cache: {'id': 4, 'email': 'dhanush777ss@gmail.com', 'account_number': 'DYY5A', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('5000.00000000'), 'margin': Decimal('2603.77000000'), 'user_type': 'live', 'first_name': None, 'last_name': None, 'country': 'string', 'phone_number': Decimal('8618025298')}
2025-06-12 05:15:35,515 - INFO - orders - [DEBUG] Group name: Group B
2025-06-12 05:15:35,692 - INFO - orders - [DEBUG] Group settings from cache: None
2025-06-12 05:15:35,739 - INFO - orders - [DEBUG] Group from database: [<app.database.models.Group object at 0x0000013660A33AC0>, <app.database.models.Group object at 0x0000013660A317B0>, <app.database.models.Group object at 0x0000013660A33570>, <app.database.models.Group object at 0x0000013660A31BF0>, <app.database.models.Group object at 0x0000013660A32030>, <app.database.models.Group object at 0x0000013660A33680>, <app.database.models.Group object at 0x0000013660A31150>, <app.database.models.Group object at 0x0000013660A32AD0>, <app.database.models.Group object at 0x0000013660A305A0>, <app.database.models.Group object at 0x0000013660A318C0>, <app.database.models.Group object at 0x0000013660A338A0>, <app.database.models.Group object at 0x0000013660A306B0>, <app.database.models.Group object at 0x0000013660A32360>, <app.database.models.Group object at 0x0000013660A30490>, <app.database.models.Group object at 0x0000013660A32F10>, <app.database.models.Group object at 0x0000013660A30270>, <app.database.models.Group object at 0x0000013660A33F00>, <app.database.models.Group object at 0x0000013660A31E10>, <app.database.models.Group object at 0x0000013660A32250>, <app.database.models.Group object at 0x0000013660A339B0>, <app.database.models.Group object at 0x0000013660A309E0>, <app.database.models.Group object at 0x0000013660A32690>, <app.database.models.Group object at 0x0000013660A30D10>, <app.database.models.Group object at 0x0000013660A30380>, <app.database.models.Group object at 0x0000013660A31590>, <app.database.models.Group object at 0x0000013660A33020>, <app.database.models.Group object at 0x0000013660A316A0>, <app.database.models.Group object at 0x0000013660A33DF0>, <app.database.models.Group object at 0x0000013660573020>, <app.database.models.Group object at 0x00000136605727A0>, <app.database.models.Group object at 0x0000013660572E00>, <app.database.models.Group object at 0x0000013660572CF0>, <app.database.models.Group object at 0x0000013660573AC0>, <app.database.models.Group object at 0x000001366077B570>, <app.database.models.Group object at 0x00000136607786B0>, <app.database.models.Group object at 0x0000013660778160>, <app.database.models.Group object at 0x00000136607787C0>, <app.database.models.Group object at 0x000001366077B8A0>, <app.database.models.Group object at 0x000001366077B240>, <app.database.models.Group object at 0x000001366077B790>, <app.database.models.Group object at 0x0000013660778050>, <app.database.models.Group object at 0x000001366077B680>, <app.database.models.Group object at 0x0000013660E08050>, <app.database.models.Group object at 0x0000013660E08160>, <app.database.models.Group object at 0x0000013660E08270>, <app.database.models.Group object at 0x0000013660E08380>, <app.database.models.Group object at 0x0000013660E08490>, <app.database.models.Group object at 0x0000013660E085A0>, <app.database.models.Group object at 0x0000013660E086B0>, <app.database.models.Group object at 0x0000013660E087C0>, <app.database.models.Group object at 0x0000013660E088D0>, <app.database.models.Group object at 0x0000013660E089E0>, <app.database.models.Group object at 0x0000013660E08AF0>, <app.database.models.Group object at 0x0000013660E08C00>, <app.database.models.Group object at 0x0000013660E08D10>, <app.database.models.Group object at 0x0000013660E08E20>, <app.database.models.Group object at 0x0000013660E08F30>, <app.database.models.Group object at 0x0000013660E09040>, <app.database.models.Group object at 0x0000013660E09150>, <app.database.models.Group object at 0x0000013660E09260>, <app.database.models.Group object at 0x0000013660E09370>, <app.database.models.Group object at 0x0000013660E09480>, <app.database.models.Group object at 0x0000013660E09590>, <app.database.models.Group object at 0x0000013660E096A0>, <app.database.models.Group object at 0x0000013660E097B0>, <app.database.models.Group object at 0x0000013660E098C0>, <app.database.models.Group object at 0x0000013660E099D0>, <app.database.models.Group object at 0x0000013660E09AE0>, <app.database.models.Group object at 0x0000013660E09BF0>, <app.database.models.Group object at 0x0000013660E09D00>, <app.database.models.Group object at 0x0000013660E09E10>, <app.database.models.Group object at 0x0000013660E09F20>, <app.database.models.Group object at 0x0000013660E0A030>, <app.database.models.Group object at 0x0000013660E0A140>, <app.database.models.Group object at 0x0000013660E0A250>, <app.database.models.Group object at 0x0000013660E0A360>, <app.database.models.Group object at 0x0000013660E0A470>, <app.database.models.Group object at 0x0000013660E0A580>, <app.database.models.Group object at 0x0000013660E0A690>]
2025-06-12 05:15:35,740 - INFO - orders - [DEBUG] sending_orders from database (list): barclays
2025-06-12 05:15:35,881 - INFO - orders - [DEBUG] Updated group settings cache with: {'sending_orders': 'barclays'}
2025-06-12 05:15:35,885 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-06-12 05:15:35,887 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-06-12 05:15:35,888 - INFO - orders - User 4 is_barclays_live_user: True (user_type: live, sending_orders_normalized: barclays)
2025-06-12 05:15:35,893 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '7422527889', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.88'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 4, 'order_status': 'PENDING_PROCESSING', 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'open_time': None}
2025-06-12 05:15:35,898 - INFO - orders - [BARCLAYS] Setting initial order_status to PENDING_PROCESSING for Barclays user. Will be updated to PENDING after service provider confirmation.
2025-06-12 05:15:35,898 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 4 at price 0.88
2025-06-12 05:15:36,102 - INFO - orders - Barclays live user detected. Sending pending order to Firebase.
2025-06-12 05:15:36,104 - INFO - orders - [FIREBASE] Prepared Firebase payload for pending order: {'order_id': '7422527889', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_status': 'PENDING_PROCESSING', 'order_price': '0.88000000', 'order_quantity': '0.01000000', 'contract_value': '1000.00000000', 'margin': None, 'stop_loss': None, 'take_profit': None, 'status': 'PENDING', 'action': 'pending_order', 'timestamp': '2025-06-12T12:15:36.104193+00:00'}
2025-06-12 05:15:36,917 - INFO - orders - [FIREBASE] Successfully sent pending order 7422527889 to Firebase for Barclays user 4
2025-06-12 05:15:36,924 - INFO - orders - Skipping Redis storage for Barclays user pending order 7422527889
2025-06-12 05:15:37,165 - INFO - orders - User data cache updated for user 4 after placing pending order
2025-06-12 05:15:37,167 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-12 05:15:37,169 - INFO - orders - Using order model: UserOrder
2025-06-12 05:15:37,208 - INFO - orders - Fetched 2 open orders for user 4
2025-06-12 05:15:37,243 - INFO - orders - Fetched 7 pending orders for user 4
2025-06-12 05:15:37,366 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 7 pending orders
2025-06-12 05:16:37,271 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 05:16:50,626 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 05:18:00,656 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 05:18:53,229 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 05:19:36,701 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 05:20:04,407 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 05:20:24,873 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 05:21:02,025 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-12 05:22:07,194 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 05:22:37,508 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 05:22:37,541 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 05:22:42,097 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 05:22:42,116 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 05:22:56,248 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 05:24:42,132 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-12 05:24:54,250 - INFO - orders - Close order request received - Order ID: 9317277886, User ID: 4, User Type: live
2025-06-12 05:24:54,252 - INFO - orders - Close request details - Price: 0.88849, Type: BUY, Symbol: AUDCAD
2025-06-12 05:24:54,253 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x00000218A1F7A710>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-12 05:24:54,253 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-12 05:24:54,254 - INFO - orders - Request to close order 9317277886 for user 4 (User) with price 0.88849. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-12 05:24:54,342 - INFO - orders - User group: [<app.database.models.Group object at 0x00000218A2236250>, <app.database.models.Group object at 0x00000218A2236360>, <app.database.models.Group object at 0x00000218A22348D0>, <app.database.models.Group object at 0x00000218A2236BE0>, <app.database.models.Group object at 0x00000218A2235AE0>, <app.database.models.Group object at 0x00000218A2234E20>, <app.database.models.Group object at 0x00000218A2235F20>, <app.database.models.Group object at 0x00000218A2235370>, <app.database.models.Group object at 0x00000218A22358C0>, <app.database.models.Group object at 0x00000218A2236CF0>, <app.database.models.Group object at 0x00000218A2236E00>, <app.database.models.Group object at 0x00000218A2236F10>, <app.database.models.Group object at 0x00000218A2237020>, <app.database.models.Group object at 0x00000218A2237130>, <app.database.models.Group object at 0x00000218A2237240>, <app.database.models.Group object at 0x00000218A2237350>, <app.database.models.Group object at 0x00000218A2237460>, <app.database.models.Group object at 0x00000218A2237570>, <app.database.models.Group object at 0x00000218A2237680>, <app.database.models.Group object at 0x00000218A2237790>, <app.database.models.Group object at 0x00000218A22378A0>, <app.database.models.Group object at 0x00000218A22379B0>, <app.database.models.Group object at 0x00000218A2237AC0>, <app.database.models.Group object at 0x00000218A2237BD0>, <app.database.models.Group object at 0x00000218A2237CE0>, <app.database.models.Group object at 0x00000218A2237DF0>, <app.database.models.Group object at 0x00000218A2237F00>, <app.database.models.Group object at 0x00000218A22ADE10>, <app.database.models.Group object at 0x00000218A22ADF20>, <app.database.models.Group object at 0x00000218A22ADD00>, <app.database.models.Group object at 0x00000218A22ADBF0>, <app.database.models.Group object at 0x00000218A22AE030>, <app.database.models.Group object at 0x00000218A22AE140>, <app.database.models.Group object at 0x00000218A22AE250>, <app.database.models.Group object at 0x00000218A22AE360>, <app.database.models.Group object at 0x00000218A22AE470>, <app.database.models.Group object at 0x00000218A22AE580>, <app.database.models.Group object at 0x00000218A22AE690>, <app.database.models.Group object at 0x00000218A22AE7A0>, <app.database.models.Group object at 0x00000218A22AE8B0>, <app.database.models.Group object at 0x00000218A22AE9C0>, <app.database.models.Group object at 0x00000218A22AEAD0>, <app.database.models.Group object at 0x00000218A22AEBE0>, <app.database.models.Group object at 0x00000218A22AECF0>, <app.database.models.Group object at 0x00000218A22AEE00>, <app.database.models.Group object at 0x00000218A22AEF10>, <app.database.models.Group object at 0x00000218A22AF020>, <app.database.models.Group object at 0x00000218A22AF130>, <app.database.models.Group object at 0x00000218A22AF240>, <app.database.models.Group object at 0x00000218A22AF350>, <app.database.models.Group object at 0x00000218A22AF460>, <app.database.models.Group object at 0x00000218A22AF570>, <app.database.models.Group object at 0x00000218A22AF680>, <app.database.models.Group object at 0x00000218A22AF790>, <app.database.models.Group object at 0x00000218A22AF8A0>, <app.database.models.Group object at 0x00000218A22AF9B0>, <app.database.models.Group object at 0x00000218A22AFAC0>, <app.database.models.Group object at 0x00000218A22AFBD0>, <app.database.models.Group object at 0x00000218A22AFCE0>, <app.database.models.Group object at 0x00000218A22AFDF0>, <app.database.models.Group object at 0x00000218A22AFF00>, <app.database.models.Group object at 0x00000218A22AD9D0>, <app.database.models.Group object at 0x00000218A22AC050>, <app.database.models.Group object at 0x00000218A22AC160>, <app.database.models.Group object at 0x00000218A22AC270>, <app.database.models.Group object at 0x00000218A22AC380>, <app.database.models.Group object at 0x00000218A22AC490>, <app.database.models.Group object at 0x00000218A22AC5A0>, <app.database.models.Group object at 0x00000218A22AC6B0>, <app.database.models.Group object at 0x00000218A22AC7C0>, <app.database.models.Group object at 0x00000218A22AC8D0>, <app.database.models.Group object at 0x00000218A22AC9E0>, <app.database.models.Group object at 0x00000218A22ACAF0>, <app.database.models.Group object at 0x00000218A22ACC00>, <app.database.models.Group object at 0x00000218A22ACD10>, <app.database.models.Group object at 0x00000218A22ACE20>, <app.database.models.Group object at 0x00000218A22ACF30>, <app.database.models.Group object at 0x00000218A22AD040>, <app.database.models.Group object at 0x00000218A22AD150>]
2025-06-12 05:24:54,343 - ERROR - orders - Error processing close order: name 'user_type' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 896, in close_order
    is_barclays_live_user = (user_type == 'live' and sending_orders_normalized == 'barclays')
                             ^^^^^^^^^
NameError: name 'user_type' is not defined
2025-06-12 05:24:54,351 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: name 'user_type' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 896, in close_order
    is_barclays_live_user = (user_type == 'live' and sending_orders_normalized == 'barclays')
                             ^^^^^^^^^
NameError: name 'user_type' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1237, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: name 'user_type' is not defined
2025-06-12 05:25:02,347 - INFO - orders - Close order request received - Order ID: 5499382541, User ID: 4, User Type: live
2025-06-12 05:25:02,347 - INFO - orders - Close request details - Price: 0.88836, Type: BUY, Symbol: AUDCAD
2025-06-12 05:25:02,347 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x00000218A2226FD0>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-12 05:25:02,348 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-12 05:25:02,348 - INFO - orders - Request to close order 5499382541 for user 4 (User) with price 0.88836. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-12 05:25:02,368 - INFO - orders - User group: [<app.database.models.Group object at 0x00000218A2236470>, <app.database.models.Group object at 0x00000218A2236250>, <app.database.models.Group object at 0x00000218A2236030>, <app.database.models.Group object at 0x00000218A2236690>, <app.database.models.Group object at 0x00000218A2236360>, <app.database.models.Group object at 0x00000218A2234E20>, <app.database.models.Group object at 0x00000218A2235F20>, <app.database.models.Group object at 0x00000218A2235370>, <app.database.models.Group object at 0x00000218A22358C0>, <app.database.models.Group object at 0x00000218A2236CF0>, <app.database.models.Group object at 0x00000218A2236E00>, <app.database.models.Group object at 0x00000218A2236F10>, <app.database.models.Group object at 0x00000218A2237020>, <app.database.models.Group object at 0x00000218A2237130>, <app.database.models.Group object at 0x00000218A2237240>, <app.database.models.Group object at 0x00000218A2237350>, <app.database.models.Group object at 0x00000218A2237460>, <app.database.models.Group object at 0x00000218A2237570>, <app.database.models.Group object at 0x00000218A2237680>, <app.database.models.Group object at 0x00000218A2237790>, <app.database.models.Group object at 0x00000218A22378A0>, <app.database.models.Group object at 0x00000218A22379B0>, <app.database.models.Group object at 0x00000218A2237AC0>, <app.database.models.Group object at 0x00000218A2237BD0>, <app.database.models.Group object at 0x00000218A2237CE0>, <app.database.models.Group object at 0x00000218A2237DF0>, <app.database.models.Group object at 0x00000218A2237F00>, <app.database.models.Group object at 0x00000218A22369C0>, <app.database.models.Group object at 0x00000218A22367A0>, <app.database.models.Group object at 0x00000218A22ADE10>, <app.database.models.Group object at 0x00000218A22ADF20>, <app.database.models.Group object at 0x00000218A22ADD00>, <app.database.models.Group object at 0x00000218A22ADBF0>, <app.database.models.Group object at 0x00000218A22AE030>, <app.database.models.Group object at 0x00000218A22AE140>, <app.database.models.Group object at 0x00000218A22AE250>, <app.database.models.Group object at 0x00000218A22AE360>, <app.database.models.Group object at 0x00000218A22AE470>, <app.database.models.Group object at 0x00000218A22AE580>, <app.database.models.Group object at 0x00000218A22AE690>, <app.database.models.Group object at 0x00000218A22AE7A0>, <app.database.models.Group object at 0x00000218A22AE8B0>, <app.database.models.Group object at 0x00000218A22AE9C0>, <app.database.models.Group object at 0x00000218A22AEAD0>, <app.database.models.Group object at 0x00000218A22AEBE0>, <app.database.models.Group object at 0x00000218A22AECF0>, <app.database.models.Group object at 0x00000218A22AEE00>, <app.database.models.Group object at 0x00000218A22AEF10>, <app.database.models.Group object at 0x00000218A22AF020>, <app.database.models.Group object at 0x00000218A22AF130>, <app.database.models.Group object at 0x00000218A22AF240>, <app.database.models.Group object at 0x00000218A22AF350>, <app.database.models.Group object at 0x00000218A22AF460>, <app.database.models.Group object at 0x00000218A22AF570>, <app.database.models.Group object at 0x00000218A22AF680>, <app.database.models.Group object at 0x00000218A22AF790>, <app.database.models.Group object at 0x00000218A22AF8A0>, <app.database.models.Group object at 0x00000218A22AF9B0>, <app.database.models.Group object at 0x00000218A22AFAC0>, <app.database.models.Group object at 0x00000218A22AFBD0>, <app.database.models.Group object at 0x00000218A22AFCE0>, <app.database.models.Group object at 0x00000218A22AFDF0>, <app.database.models.Group object at 0x00000218A22AFF00>, <app.database.models.Group object at 0x00000218A22AD9D0>, <app.database.models.Group object at 0x00000218A22AC050>, <app.database.models.Group object at 0x00000218A22AC160>, <app.database.models.Group object at 0x00000218A22AC270>, <app.database.models.Group object at 0x00000218A22AC380>, <app.database.models.Group object at 0x00000218A22AC490>, <app.database.models.Group object at 0x00000218A22AC5A0>, <app.database.models.Group object at 0x00000218A22AC6B0>, <app.database.models.Group object at 0x00000218A22AC7C0>, <app.database.models.Group object at 0x00000218A22AC8D0>, <app.database.models.Group object at 0x00000218A22AC9E0>, <app.database.models.Group object at 0x00000218A22ACAF0>, <app.database.models.Group object at 0x00000218A22ACC00>, <app.database.models.Group object at 0x00000218A22ACD10>, <app.database.models.Group object at 0x00000218A22ACE20>, <app.database.models.Group object at 0x00000218A22ACF30>]
2025-06-12 05:25:02,368 - ERROR - orders - Error processing close order: name 'user_type' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 896, in close_order
    is_barclays_live_user = (user_type == 'live' and sending_orders_normalized == 'barclays')
                             ^^^^^^^^^
NameError: name 'user_type' is not defined
2025-06-12 05:25:02,373 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: name 'user_type' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 896, in close_order
    is_barclays_live_user = (user_type == 'live' and sending_orders_normalized == 'barclays')
                             ^^^^^^^^^
NameError: name 'user_type' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1237, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: name 'user_type' is not defined
2025-06-12 05:25:33,993 - INFO - orders - Close order request received - Order ID: 9317277886, User ID: 4, User Type: live
2025-06-12 05:25:33,993 - INFO - orders - Close request details - Price: 0.88827, Type: BUY, Symbol: AUDCAD
2025-06-12 05:25:33,993 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x000001B96811AC10>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-12 05:25:33,993 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-12 05:25:33,993 - INFO - orders - Request to close order 9317277886 for user 4 (User) with price 0.88827. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-12 05:25:34,008 - INFO - orders - User group: [<app.database.models.Group object at 0x000001B96800AAD0>, <app.database.models.Group object at 0x000001B96800A470>, <app.database.models.Group object at 0x000001B96800A9C0>, <app.database.models.Group object at 0x000001B96800ABE0>, <app.database.models.Group object at 0x000001B96800ACF0>, <app.database.models.Group object at 0x000001B96800AE00>, <app.database.models.Group object at 0x000001B96800AF10>, <app.database.models.Group object at 0x000001B96800B020>, <app.database.models.Group object at 0x000001B96800B130>, <app.database.models.Group object at 0x000001B96800B240>, <app.database.models.Group object at 0x000001B96800B350>, <app.database.models.Group object at 0x000001B96800B460>, <app.database.models.Group object at 0x000001B96800B570>, <app.database.models.Group object at 0x000001B96800B680>, <app.database.models.Group object at 0x000001B96800B790>, <app.database.models.Group object at 0x000001B96800B8A0>, <app.database.models.Group object at 0x000001B96800B9B0>, <app.database.models.Group object at 0x000001B96800BAC0>, <app.database.models.Group object at 0x000001B96800BBD0>, <app.database.models.Group object at 0x000001B96800BCE0>, <app.database.models.Group object at 0x000001B96800BDF0>, <app.database.models.Group object at 0x000001B96800BF00>, <app.database.models.Group object at 0x000001B968009040>, <app.database.models.Group object at 0x000001B9680088D0>, <app.database.models.Group object at 0x000001B968008AF0>, <app.database.models.Group object at 0x000001B9681668B0>, <app.database.models.Group object at 0x000001B968166CF0>, <app.database.models.Group object at 0x000001B968165F20>, <app.database.models.Group object at 0x000001B9681669C0>, <app.database.models.Group object at 0x000001B968165D00>, <app.database.models.Group object at 0x000001B968164050>, <app.database.models.Group object at 0x000001B968164160>, <app.database.models.Group object at 0x000001B968164270>, <app.database.models.Group object at 0x000001B968164380>, <app.database.models.Group object at 0x000001B968164490>, <app.database.models.Group object at 0x000001B9681645A0>, <app.database.models.Group object at 0x000001B9681646B0>, <app.database.models.Group object at 0x000001B9681647C0>, <app.database.models.Group object at 0x000001B9681648D0>, <app.database.models.Group object at 0x000001B9681649E0>, <app.database.models.Group object at 0x000001B968164AF0>, <app.database.models.Group object at 0x000001B968164C00>, <app.database.models.Group object at 0x000001B968164D10>, <app.database.models.Group object at 0x000001B968164E20>, <app.database.models.Group object at 0x000001B968164F30>, <app.database.models.Group object at 0x000001B968165040>, <app.database.models.Group object at 0x000001B968165150>, <app.database.models.Group object at 0x000001B968165260>, <app.database.models.Group object at 0x000001B968165370>, <app.database.models.Group object at 0x000001B968165480>, <app.database.models.Group object at 0x000001B968165590>, <app.database.models.Group object at 0x000001B9681656A0>, <app.database.models.Group object at 0x000001B9681657B0>, <app.database.models.Group object at 0x000001B9681658C0>, <app.database.models.Group object at 0x000001B9681659D0>, <app.database.models.Group object at 0x000001B968165AE0>, <app.database.models.Group object at 0x000001B968165BF0>, <app.database.models.Group object at 0x000001B968166360>, <app.database.models.Group object at 0x000001B968166580>, <app.database.models.Group object at 0x000001B968166E00>, <app.database.models.Group object at 0x000001B968166690>, <app.database.models.Group object at 0x000001B9681667A0>, <app.database.models.Group object at 0x000001B968166470>, <app.database.models.Group object at 0x000001B968166BE0>, <app.database.models.Group object at 0x000001B968166AD0>, <app.database.models.Group object at 0x000001B968166250>, <app.database.models.Group object at 0x000001B968166140>, <app.database.models.Group object at 0x000001B968166F10>, <app.database.models.Group object at 0x000001B968167020>, <app.database.models.Group object at 0x000001B968167130>, <app.database.models.Group object at 0x000001B968167240>, <app.database.models.Group object at 0x000001B968167350>, <app.database.models.Group object at 0x000001B968167460>, <app.database.models.Group object at 0x000001B968167570>, <app.database.models.Group object at 0x000001B968167680>, <app.database.models.Group object at 0x000001B968167790>, <app.database.models.Group object at 0x000001B9681678A0>, <app.database.models.Group object at 0x000001B9681679B0>, <app.database.models.Group object at 0x000001B968167AC0>]
2025-06-12 05:25:34,009 - ERROR - orders - Error processing close order: name 'user_type' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 896, in close_order
    is_barclays_live_user = (user_type == 'live' and sending_orders_normalized == 'barclays')
                             ^^^^^^^^^
NameError: name 'user_type' is not defined
2025-06-12 05:25:34,012 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: name 'user_type' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 896, in close_order
    is_barclays_live_user = (user_type == 'live' and sending_orders_normalized == 'barclays')
                             ^^^^^^^^^
NameError: name 'user_type' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1237, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: name 'user_type' is not defined
2025-06-12 05:26:15,912 - INFO - orders - Close order request received - Order ID: 5499382541, User ID: 4, User Type: live
2025-06-12 05:26:15,912 - INFO - orders - Close request details - Price: 0.88839, Type: BUY, Symbol: AUDCAD
2025-06-12 05:26:15,913 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x000001B9681182D0>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-12 05:26:15,913 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-12 05:26:15,913 - INFO - orders - Request to close order 5499382541 for user 4 (User) with price 0.88839. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-12 05:26:15,945 - INFO - orders - User group: [<app.database.models.Group object at 0x000001B96800ACF0>, <app.database.models.Group object at 0x000001B96800B020>, <app.database.models.Group object at 0x000001B96800AE00>, <app.database.models.Group object at 0x000001B968009F20>, <app.database.models.Group object at 0x000001B96800B130>, <app.database.models.Group object at 0x000001B96800B240>, <app.database.models.Group object at 0x000001B96800B350>, <app.database.models.Group object at 0x000001B96800B460>, <app.database.models.Group object at 0x000001B96800B570>, <app.database.models.Group object at 0x000001B96800B680>, <app.database.models.Group object at 0x000001B96800B790>, <app.database.models.Group object at 0x000001B96800B8A0>, <app.database.models.Group object at 0x000001B96800B9B0>, <app.database.models.Group object at 0x000001B96800BAC0>, <app.database.models.Group object at 0x000001B96800BBD0>, <app.database.models.Group object at 0x000001B96800BCE0>, <app.database.models.Group object at 0x000001B96800BDF0>, <app.database.models.Group object at 0x000001B96800BF00>, <app.database.models.Group object at 0x000001B968009040>, <app.database.models.Group object at 0x000001B9680088D0>, <app.database.models.Group object at 0x000001B968008AF0>, <app.database.models.Group object at 0x000001B96800A030>, <app.database.models.Group object at 0x000001B96800A250>, <app.database.models.Group object at 0x000001B9681668B0>, <app.database.models.Group object at 0x000001B968166CF0>, <app.database.models.Group object at 0x000001B968165F20>, <app.database.models.Group object at 0x000001B9681669C0>, <app.database.models.Group object at 0x000001B968165D00>, <app.database.models.Group object at 0x000001B968164050>, <app.database.models.Group object at 0x000001B968164160>, <app.database.models.Group object at 0x000001B968164270>, <app.database.models.Group object at 0x000001B968164380>, <app.database.models.Group object at 0x000001B968164490>, <app.database.models.Group object at 0x000001B9681645A0>, <app.database.models.Group object at 0x000001B9681646B0>, <app.database.models.Group object at 0x000001B9681647C0>, <app.database.models.Group object at 0x000001B9681648D0>, <app.database.models.Group object at 0x000001B9681649E0>, <app.database.models.Group object at 0x000001B968164AF0>, <app.database.models.Group object at 0x000001B968164C00>, <app.database.models.Group object at 0x000001B968164D10>, <app.database.models.Group object at 0x000001B968164E20>, <app.database.models.Group object at 0x000001B968164F30>, <app.database.models.Group object at 0x000001B968165040>, <app.database.models.Group object at 0x000001B968165150>, <app.database.models.Group object at 0x000001B968165260>, <app.database.models.Group object at 0x000001B968165370>, <app.database.models.Group object at 0x000001B968165480>, <app.database.models.Group object at 0x000001B968165590>, <app.database.models.Group object at 0x000001B9681656A0>, <app.database.models.Group object at 0x000001B9681657B0>, <app.database.models.Group object at 0x000001B9681658C0>, <app.database.models.Group object at 0x000001B9681659D0>, <app.database.models.Group object at 0x000001B968165AE0>, <app.database.models.Group object at 0x000001B968165BF0>, <app.database.models.Group object at 0x000001B968166360>, <app.database.models.Group object at 0x000001B968166580>, <app.database.models.Group object at 0x000001B968166E00>, <app.database.models.Group object at 0x000001B968166690>, <app.database.models.Group object at 0x000001B9681667A0>, <app.database.models.Group object at 0x000001B968166470>, <app.database.models.Group object at 0x000001B968166BE0>, <app.database.models.Group object at 0x000001B968166AD0>, <app.database.models.Group object at 0x000001B968166250>, <app.database.models.Group object at 0x000001B968166140>, <app.database.models.Group object at 0x000001B968166F10>, <app.database.models.Group object at 0x000001B968167020>, <app.database.models.Group object at 0x000001B968167130>, <app.database.models.Group object at 0x000001B968167240>, <app.database.models.Group object at 0x000001B968167350>, <app.database.models.Group object at 0x000001B968167460>, <app.database.models.Group object at 0x000001B968167570>, <app.database.models.Group object at 0x000001B968167680>, <app.database.models.Group object at 0x000001B968167790>, <app.database.models.Group object at 0x000001B9681678A0>, <app.database.models.Group object at 0x000001B9681679B0>, <app.database.models.Group object at 0x000001B968167AC0>, <app.database.models.Group object at 0x000001B968167BD0>, <app.database.models.Group object at 0x000001B968167CE0>]
2025-06-12 05:26:15,946 - ERROR - orders - Error processing close order: name 'user_type' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 896, in close_order
    is_barclays_live_user = (user_type == 'live' and sending_orders_normalized == 'barclays')
                             ^^^^^^^^^
NameError: name 'user_type' is not defined
2025-06-12 05:26:15,952 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: name 'user_type' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 896, in close_order
    is_barclays_live_user = (user_type == 'live' and sending_orders_normalized == 'barclays')
                             ^^^^^^^^^
NameError: name 'user_type' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1237, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: name 'user_type' is not defined
2025-06-12 05:26:21,789 - INFO - orders - Close order request received - Order ID: 9317277886, User ID: 4, User Type: live
2025-06-12 05:26:21,789 - INFO - orders - Close request details - Price: 0.88829, Type: BUY, Symbol: AUDCAD
2025-06-12 05:26:21,789 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x000001B96811B110>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-12 05:26:21,789 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-12 05:26:21,789 - INFO - orders - Request to close order 9317277886 for user 4 (User) with price 0.88829. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-12 05:26:21,863 - INFO - orders - User group: [<app.database.models.Group object at 0x000001B96800B570>, <app.database.models.Group object at 0x000001B96800B680>, <app.database.models.Group object at 0x000001B96800B790>, <app.database.models.Group object at 0x000001B96800A360>, <app.database.models.Group object at 0x000001B96800A9C0>, <app.database.models.Group object at 0x000001B96800B8A0>, <app.database.models.Group object at 0x000001B96800B9B0>, <app.database.models.Group object at 0x000001B96800BAC0>, <app.database.models.Group object at 0x000001B96800BBD0>, <app.database.models.Group object at 0x000001B96800BCE0>, <app.database.models.Group object at 0x000001B96800BDF0>, <app.database.models.Group object at 0x000001B96800BF00>, <app.database.models.Group object at 0x000001B968009040>, <app.database.models.Group object at 0x000001B9680088D0>, <app.database.models.Group object at 0x000001B968008AF0>, <app.database.models.Group object at 0x000001B96800A030>, <app.database.models.Group object at 0x000001B96800A250>, <app.database.models.Group object at 0x000001B96800A8B0>, <app.database.models.Group object at 0x000001B96800A690>, <app.database.models.Group object at 0x000001B96800A7A0>, <app.database.models.Group object at 0x000001B96800AF10>, <app.database.models.Group object at 0x000001B9681668B0>, <app.database.models.Group object at 0x000001B968166CF0>, <app.database.models.Group object at 0x000001B968165F20>, <app.database.models.Group object at 0x000001B9681669C0>, <app.database.models.Group object at 0x000001B968165D00>, <app.database.models.Group object at 0x000001B968164050>, <app.database.models.Group object at 0x000001B968164160>, <app.database.models.Group object at 0x000001B968164270>, <app.database.models.Group object at 0x000001B968164380>, <app.database.models.Group object at 0x000001B968164490>, <app.database.models.Group object at 0x000001B9681645A0>, <app.database.models.Group object at 0x000001B9681646B0>, <app.database.models.Group object at 0x000001B9681647C0>, <app.database.models.Group object at 0x000001B9681648D0>, <app.database.models.Group object at 0x000001B9681649E0>, <app.database.models.Group object at 0x000001B968164AF0>, <app.database.models.Group object at 0x000001B968164C00>, <app.database.models.Group object at 0x000001B968164D10>, <app.database.models.Group object at 0x000001B968164E20>, <app.database.models.Group object at 0x000001B968164F30>, <app.database.models.Group object at 0x000001B968165040>, <app.database.models.Group object at 0x000001B968165150>, <app.database.models.Group object at 0x000001B968165260>, <app.database.models.Group object at 0x000001B968165370>, <app.database.models.Group object at 0x000001B968165480>, <app.database.models.Group object at 0x000001B968165590>, <app.database.models.Group object at 0x000001B9681656A0>, <app.database.models.Group object at 0x000001B9681657B0>, <app.database.models.Group object at 0x000001B9681658C0>, <app.database.models.Group object at 0x000001B9681659D0>, <app.database.models.Group object at 0x000001B968165AE0>, <app.database.models.Group object at 0x000001B968165BF0>, <app.database.models.Group object at 0x000001B968166360>, <app.database.models.Group object at 0x000001B968166580>, <app.database.models.Group object at 0x000001B968166E00>, <app.database.models.Group object at 0x000001B968166690>, <app.database.models.Group object at 0x000001B9681667A0>, <app.database.models.Group object at 0x000001B968166470>, <app.database.models.Group object at 0x000001B968166BE0>, <app.database.models.Group object at 0x000001B968166AD0>, <app.database.models.Group object at 0x000001B968166250>, <app.database.models.Group object at 0x000001B968166140>, <app.database.models.Group object at 0x000001B968166F10>, <app.database.models.Group object at 0x000001B968167020>, <app.database.models.Group object at 0x000001B968167130>, <app.database.models.Group object at 0x000001B968167240>, <app.database.models.Group object at 0x000001B968167350>, <app.database.models.Group object at 0x000001B968167460>, <app.database.models.Group object at 0x000001B968167570>, <app.database.models.Group object at 0x000001B968167680>, <app.database.models.Group object at 0x000001B968167790>, <app.database.models.Group object at 0x000001B9681678A0>, <app.database.models.Group object at 0x000001B9681679B0>, <app.database.models.Group object at 0x000001B968167AC0>, <app.database.models.Group object at 0x000001B968167BD0>, <app.database.models.Group object at 0x000001B968167CE0>, <app.database.models.Group object at 0x000001B968167DF0>, <app.database.models.Group object at 0x000001B968167F00>]
2025-06-12 05:26:21,864 - ERROR - orders - Error processing close order: name 'user_type' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 896, in close_order
    is_barclays_live_user = (user_type == 'live' and sending_orders_normalized == 'barclays')
                             ^^^^^^^^^
NameError: name 'user_type' is not defined
2025-06-12 05:26:21,870 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: name 'user_type' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 896, in close_order
    is_barclays_live_user = (user_type == 'live' and sending_orders_normalized == 'barclays')
                             ^^^^^^^^^
NameError: name 'user_type' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1237, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: name 'user_type' is not defined
2025-06-12 05:49:20,726 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 05:55:21,461 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 5
2025-06-12 05:55:21,477 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-12 05:55:21,477 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-12 05:55:21,477 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-12 05:55:22,128 - INFO - orders - Calculating margin for AUDCAD BUY order, quantity: 5
2025-06-12 05:55:22,135 - INFO - orders - Margin calculation results: margin=4444.90, price=0.8889800000, contract_value=444490.000000000000000000, commission=50.00
2025-06-12 05:55:22,135 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=50.00
2025-06-12 05:55:22,159 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-12 05:55:22,160 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 172): Type=BUY, Qty=10.00000000, StoredMargin=8874.40000000
2025-06-12 05:55:22,160 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.44
2025-06-12 05:55:22,160 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=10.00000000, TotalSellQty=0, NetQty=10.00000000
2025-06-12 05:55:22,160 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.44')], HighestMarginPerLot=887.44
2025-06-12 05:55:22,160 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=8874.40, ContributingOrders=1 (based on individual stored margins)
2025-06-12 05:55:22,160 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-12 05:55:22,161 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 172): Type=BUY, Qty=10.00000000, StoredMargin=8874.40000000
2025-06-12 05:55:22,161 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.44
2025-06-12 05:55:22,161 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=BUY, Qty=5, StoredMargin=4444.90
2025-06-12 05:55:22,161 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=888.98
2025-06-12 05:55:22,161 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=15.00000000, TotalSellQty=0, NetQty=15.00000000
2025-06-12 05:55:22,161 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.44'), Decimal('888.98')], HighestMarginPerLot=888.98
2025-06-12 05:55:22,161 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=13334.70, ContributingOrders=2 (based on individual stored margins)
2025-06-12 05:55:22,161 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=8874.40, MarginAfter=13334.70, AdditionalMargin=4460.30
2025-06-12 05:55:22,195 - app.services.order_processing - ERROR - Error processing new order: Not enough wallet balance to cover additional margin.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 321, in process_new_order
    raise InsufficientFundsError("Not enough wallet balance to cover additional margin.")
app.services.order_processing.InsufficientFundsError: Not enough wallet balance to cover additional margin.
2025-06-12 05:55:22,201 - ERROR - orders - Order processing error: Failed to process order: Not enough wallet balance to cover additional margin.
2025-06-12 05:55:30,177 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-12 05:55:30,183 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-12 05:55:30,183 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-12 05:55:30,184 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-12 05:55:30,567 - INFO - orders - Calculating margin for AUDCAD BUY order, quantity: 1
2025-06-12 05:55:30,570 - INFO - orders - Margin calculation results: margin=889.03, price=0.8890300000, contract_value=88903.000000000000000000, commission=10.00
2025-06-12 05:55:30,570 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=10.00
2025-06-12 05:55:30,576 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-12 05:55:30,576 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 172): Type=BUY, Qty=10.00000000, StoredMargin=8874.40000000
2025-06-12 05:55:30,576 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.44
2025-06-12 05:55:30,576 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=10.00000000, TotalSellQty=0, NetQty=10.00000000
2025-06-12 05:55:30,576 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.44')], HighestMarginPerLot=887.44
2025-06-12 05:55:30,576 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=8874.40, ContributingOrders=1 (based on individual stored margins)
2025-06-12 05:55:30,576 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-12 05:55:30,576 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 172): Type=BUY, Qty=10.00000000, StoredMargin=8874.40000000
2025-06-12 05:55:30,577 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.44
2025-06-12 05:55:30,577 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=889.03
2025-06-12 05:55:30,577 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=889.03
2025-06-12 05:55:30,577 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=11.00000000, TotalSellQty=0, NetQty=11.00000000
2025-06-12 05:55:30,577 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.44'), Decimal('889.03')], HighestMarginPerLot=889.03
2025-06-12 05:55:30,577 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=9779.33, ContributingOrders=2 (based on individual stored margins)
2025-06-12 05:55:30,577 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=8874.40, MarginAfter=9779.33, AdditionalMargin=904.93
2025-06-12 05:55:30,582 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=8874.40000000, CalculatedNewMargin=9779.33
2025-06-12 05:55:30,667 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '7284393481', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8890300000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88903.000000000000000000'), 'margin': Decimal('889.03'), 'commission': Decimal('10.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-12 05:55:30,709 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 9779.33000000
2025-06-12 05:55:30,740 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-12 05:55:30,924 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-12 05:55:30,928 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 05:55:30,928 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 05:55:30,933 - INFO - orders - Fetched 2 open orders for user 1
2025-06-12 05:55:30,941 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-12 05:55:30,943 - INFO - orders - Updated static orders cache for user 1 with 2 open orders and 4 pending orders
2025-06-12 05:55:46,228 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-12 05:55:46,233 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-12 05:55:46,233 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-12 05:55:46,233 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-12 05:55:46,554 - INFO - orders - Calculating margin for AUDCAD BUY order, quantity: 1
2025-06-12 05:55:46,555 - INFO - orders - Margin calculation results: margin=889.19, price=0.8891900000, contract_value=88919.000000000000000000, commission=10.00
2025-06-12 05:55:46,556 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=10.00
2025-06-12 05:55:46,561 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-12 05:55:46,561 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 172): Type=BUY, Qty=10.00000000, StoredMargin=8874.40000000
2025-06-12 05:55:46,561 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.44
2025-06-12 05:55:46,561 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 173): Type=BUY, Qty=1.00000000, StoredMargin=889.03000000
2025-06-12 05:55:46,561 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=889.03
2025-06-12 05:55:46,561 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=11.00000000, TotalSellQty=0, NetQty=11.00000000
2025-06-12 05:55:46,561 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.44'), Decimal('889.03')], HighestMarginPerLot=889.03
2025-06-12 05:55:46,561 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=9779.33, ContributingOrders=2 (based on individual stored margins)
2025-06-12 05:55:46,561 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-12 05:55:46,561 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 172): Type=BUY, Qty=10.00000000, StoredMargin=8874.40000000
2025-06-12 05:55:46,562 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.44
2025-06-12 05:55:46,562 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 173): Type=BUY, Qty=1.00000000, StoredMargin=889.03000000
2025-06-12 05:55:46,562 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=889.03
2025-06-12 05:55:46,562 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=889.19
2025-06-12 05:55:46,562 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=889.19
2025-06-12 05:55:46,562 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=12.00000000, TotalSellQty=0, NetQty=12.00000000
2025-06-12 05:55:46,562 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.44'), Decimal('889.03'), Decimal('889.19')], HighestMarginPerLot=889.19
2025-06-12 05:55:46,562 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=10670.28, ContributingOrders=3 (based on individual stored margins)
2025-06-12 05:55:46,562 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=9779.33, MarginAfter=10670.28, AdditionalMargin=890.95
2025-06-12 05:55:46,570 - app.services.order_processing - ERROR - Error processing new order: Not enough wallet balance to cover additional margin.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 321, in process_new_order
    raise InsufficientFundsError("Not enough wallet balance to cover additional margin.")
app.services.order_processing.InsufficientFundsError: Not enough wallet balance to cover additional margin.
2025-06-12 05:55:46,572 - ERROR - orders - Order processing error: Failed to process order: Not enough wallet balance to cover additional margin.
2025-06-12 05:55:53,591 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.1
2025-06-12 05:55:53,597 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-12 05:55:53,597 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-12 05:55:53,597 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-12 05:55:54,022 - INFO - orders - Calculating margin for AUDCAD BUY order, quantity: 0.1
2025-06-12 05:55:54,023 - INFO - orders - Margin calculation results: margin=88.92, price=0.8891900000, contract_value=8891.9000000000000000000, commission=1.00
2025-06-12 05:55:54,024 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=1.00
2025-06-12 05:55:54,028 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-12 05:55:54,028 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 172): Type=BUY, Qty=10.00000000, StoredMargin=8874.40000000
2025-06-12 05:55:54,028 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.44
2025-06-12 05:55:54,028 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 173): Type=BUY, Qty=1.00000000, StoredMargin=889.03000000
2025-06-12 05:55:54,028 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=889.03
2025-06-12 05:55:54,028 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=11.00000000, TotalSellQty=0, NetQty=11.00000000
2025-06-12 05:55:54,028 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.44'), Decimal('889.03')], HighestMarginPerLot=889.03
2025-06-12 05:55:54,028 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=9779.33, ContributingOrders=2 (based on individual stored margins)
2025-06-12 05:55:54,028 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-12 05:55:54,028 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 172): Type=BUY, Qty=10.00000000, StoredMargin=8874.40000000
2025-06-12 05:55:54,028 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.44
2025-06-12 05:55:54,028 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 173): Type=BUY, Qty=1.00000000, StoredMargin=889.03000000
2025-06-12 05:55:54,028 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=889.03
2025-06-12 05:55:54,028 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: NEW_UNSAVED): Type=BUY, Qty=0.1, StoredMargin=88.92
2025-06-12 05:55:54,028 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=889.2
2025-06-12 05:55:54,028 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=11.10000000, TotalSellQty=0, NetQty=11.10000000
2025-06-12 05:55:54,028 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.44'), Decimal('889.03'), Decimal('889.2')], HighestMarginPerLot=889.2
2025-06-12 05:55:54,028 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=9870.12, ContributingOrders=3 (based on individual stored margins)
2025-06-12 05:55:54,028 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=9779.33, MarginAfter=9870.12, AdditionalMargin=90.79
2025-06-12 05:55:54,030 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=9779.33000000, CalculatedNewMargin=9870.12
2025-06-12 05:55:54,057 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '3564337946', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8891900000'), 'order_quantity': Decimal('0.1'), 'contract_value': Decimal('8891.9000000000000000000'), 'margin': Decimal('88.92'), 'commission': Decimal('1.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-12 05:55:54,117 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 9870.12000000
2025-06-12 05:55:54,139 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-12 05:55:54,285 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-12 05:55:54,302 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 05:55:54,302 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 05:55:54,312 - INFO - orders - Fetched 3 open orders for user 1
2025-06-12 05:55:54,342 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-12 05:55:54,379 - INFO - orders - Updated static orders cache for user 1 with 3 open orders and 4 pending orders
2025-06-12 05:56:46,190 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 05:57:45,594 - INFO - orders - Close order request received - Order ID: 3564337946, User ID: 1, User Type: demo
2025-06-12 05:57:45,595 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-12 05:57:45,595 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001F65B3F9950>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-12 05:57:45,595 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-12 05:57:45,595 - INFO - orders - Request to close order 3564337946 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-12 05:57:45,629 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-12 05:57:45,665 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-12 05:57:45,666 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 172): Type=BUY, Qty=10.00000000, StoredMargin=8874.40000000
2025-06-12 05:57:45,666 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.44
2025-06-12 05:57:45,666 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 173): Type=BUY, Qty=1.00000000, StoredMargin=889.03000000
2025-06-12 05:57:45,666 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=889.03
2025-06-12 05:57:45,666 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 174): Type=BUY, Qty=0.10000000, StoredMargin=88.92000000
2025-06-12 05:57:45,666 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=889.2
2025-06-12 05:57:45,666 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=11.10000000, TotalSellQty=0, NetQty=11.10000000
2025-06-12 05:57:45,667 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.44'), Decimal('889.03'), Decimal('889.2')], HighestMarginPerLot=889.2
2025-06-12 05:57:45,667 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=9870.12, ContributingOrders=3 (based on individual stored margins)
2025-06-12 05:57:45,667 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-12 05:57:45,667 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 172): Type=BUY, Qty=10.00000000, StoredMargin=8874.40000000
2025-06-12 05:57:45,667 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.44
2025-06-12 05:57:45,667 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 173): Type=BUY, Qty=1.00000000, StoredMargin=889.03000000
2025-06-12 05:57:45,667 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=889.03
2025-06-12 05:57:45,668 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=11.00000000, TotalSellQty=0, NetQty=11.00000000
2025-06-12 05:57:45,668 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.44'), Decimal('889.03')], HighestMarginPerLot=889.03
2025-06-12 05:57:45,668 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=9779.33, ContributingOrders=2 (based on individual stored margins)
2025-06-12 05:57:45,702 - INFO - orders - Existing entry commission for order 3564337946: 1.00000000
2025-06-12 05:57:45,702 - INFO - orders - Commission calculation for order 3564337946: entry=1.00000000, exit=1.000000000000, total=2.00
2025-06-12 05:57:45,708 - DEBUG - orders - Inverse conversion for PnL on Close: 8.100000000000000000000000 CAD / 1.3622400000 = 5.946088794926004228329809725 USD
2025-06-12 05:57:45,798 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=10003.95000000, margin=9779.33
2025-06-12 05:57:45,799 - INFO - orders - Setting user data cache for user 1 with wallet_balance=10003.95000000, margin=9779.33
2025-06-12 05:57:45,803 - INFO - orders - User data cache updated for user 1
2025-06-12 05:57:45,803 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 05:57:45,803 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 05:57:45,810 - INFO - orders - Fetched 2 open orders for user 1
2025-06-12 05:57:45,824 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-12 05:57:45,827 - INFO - orders - Updated static orders cache for user 1 with 2 open orders and 4 pending orders
2025-06-12 05:57:45,827 - INFO - orders - Publishing order update for user 1
2025-06-12 05:57:45,831 - INFO - orders - Publishing user data update for user 1
2025-06-12 05:57:45,835 - INFO - orders - Publishing market data trigger
2025-06-12 05:58:10,149 - INFO - orders - Close order request received - Order ID: 7284393481, User ID: 1, User Type: demo
2025-06-12 05:58:10,149 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-12 05:58:10,149 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001F65B3F9090>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-12 05:58:10,150 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-12 05:58:10,150 - INFO - orders - Request to close order 7284393481 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-12 05:58:10,189 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-12 05:58:10,222 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-12 05:58:10,223 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 172): Type=BUY, Qty=10.00000000, StoredMargin=8874.40000000
2025-06-12 05:58:10,223 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.44
2025-06-12 05:58:10,223 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 173): Type=BUY, Qty=1.00000000, StoredMargin=889.03000000
2025-06-12 05:58:10,223 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=889.03
2025-06-12 05:58:10,223 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=11.00000000, TotalSellQty=0, NetQty=11.00000000
2025-06-12 05:58:10,223 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.44'), Decimal('889.03')], HighestMarginPerLot=889.03
2025-06-12 05:58:10,223 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=9779.33, ContributingOrders=2 (based on individual stored margins)
2025-06-12 05:58:10,224 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-12 05:58:10,224 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 172): Type=BUY, Qty=10.00000000, StoredMargin=8874.40000000
2025-06-12 05:58:10,224 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.44
2025-06-12 05:58:10,225 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=10.00000000, TotalSellQty=0, NetQty=10.00000000
2025-06-12 05:58:10,225 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.44')], HighestMarginPerLot=887.44
2025-06-12 05:58:10,226 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=8874.40, ContributingOrders=1 (based on individual stored margins)
2025-06-12 05:58:10,281 - INFO - orders - Existing entry commission for order 7284393481: 10.00000000
2025-06-12 05:58:10,281 - INFO - orders - Commission calculation for order 7284393481: entry=10.00000000, exit=10.000000000000, total=20.00
2025-06-12 05:58:10,291 - DEBUG - orders - Inverse conversion for PnL on Close: 97.000000000000000000000000 CAD / 1.3622400000 = 71.20624853182992717876438807 USD
2025-06-12 05:58:10,355 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=10055.16000000, margin=8874.40
2025-06-12 05:58:10,355 - INFO - orders - Setting user data cache for user 1 with wallet_balance=10055.16000000, margin=8874.40
2025-06-12 05:58:10,358 - INFO - orders - User data cache updated for user 1
2025-06-12 05:58:10,358 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 05:58:10,358 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 05:58:10,370 - INFO - orders - Fetched 1 open orders for user 1
2025-06-12 05:58:10,380 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-12 05:58:10,389 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 4 pending orders
2025-06-12 05:58:10,389 - INFO - orders - Publishing order update for user 1
2025-06-12 05:58:10,392 - INFO - orders - Publishing user data update for user 1
2025-06-12 05:58:10,412 - INFO - orders - Publishing market data trigger
2025-06-12 05:58:20,943 - INFO - orders - Close order request received - Order ID: 5677797595, User ID: 1, User Type: demo
2025-06-12 05:58:20,944 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-12 05:58:20,944 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001F65B3FB250>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-12 05:58:20,944 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-12 05:58:20,944 - INFO - orders - Request to close order 5677797595 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-12 05:58:20,999 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-12 05:58:21,042 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-12 05:58:21,045 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 172): Type=BUY, Qty=10.00000000, StoredMargin=8874.40000000
2025-06-12 05:58:21,045 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.44
2025-06-12 05:58:21,045 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=10.00000000, TotalSellQty=0, NetQty=10.00000000
2025-06-12 05:58:21,047 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.44')], HighestMarginPerLot=887.44
2025-06-12 05:58:21,047 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=8874.40, ContributingOrders=1 (based on individual stored margins)
2025-06-12 05:58:21,047 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-12 05:58:21,047 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-12 05:58:21,115 - INFO - orders - Existing entry commission for order 5677797595: 100.00000000
2025-06-12 05:58:21,116 - INFO - orders - Commission calculation for order 5677797595: entry=100.00000000, exit=100.000000000000, total=200.00
2025-06-12 05:58:21,144 - DEBUG - orders - Inverse conversion for PnL on Close: 2560.000000000000000000000000 CAD / 1.3622300000 = 1879.271488661973381881180124 USD
2025-06-12 05:58:21,262 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=11734.43000000, margin=0
2025-06-12 05:58:21,262 - INFO - orders - Setting user data cache for user 1 with wallet_balance=11734.43000000, margin=0
2025-06-12 05:58:21,272 - INFO - orders - User data cache updated for user 1
2025-06-12 05:58:21,272 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 05:58:21,273 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 05:58:21,289 - INFO - orders - Fetched 0 open orders for user 1
2025-06-12 05:58:21,300 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-12 05:58:21,306 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 4 pending orders
2025-06-12 05:58:21,306 - INFO - orders - Publishing order update for user 1
2025-06-12 05:58:21,333 - INFO - orders - Publishing user data update for user 1
2025-06-12 05:58:21,348 - INFO - orders - Publishing market data trigger
2025-06-12 09:45:15,686 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 09:46:08,773 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 09:50:22,130 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-12 09:50:22,138 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-12 09:50:22,138 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-12 09:50:22,138 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-12 09:50:22,784 - INFO - orders - Calculating margin for AUDCAD BUY order, quantity: 1
2025-06-12 09:50:22,788 - INFO - orders - Margin calculation results: margin=887.92, price=0.8879200000, contract_value=88792.000000000000000000, commission=10.00
2025-06-12 09:50:22,788 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=10.00
2025-06-12 09:50:22,798 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-12 09:50:22,799 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-12 09:50:22,799 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-12 09:50:22,799 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=887.92
2025-06-12 09:50:22,799 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.92
2025-06-12 09:50:22,799 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1, TotalSellQty=0, NetQty=1
2025-06-12 09:50:22,799 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.92')], HighestMarginPerLot=887.92
2025-06-12 09:50:22,799 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=887.92, ContributingOrders=1 (based on individual stored margins)
2025-06-12 09:50:22,799 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=887.92, AdditionalMargin=887.92
2025-06-12 09:50:22,822 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=887.92
2025-06-12 09:50:22,915 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '5499899520', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8879200000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88792.000000000000000000'), 'margin': Decimal('887.92'), 'commission': Decimal('10.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-12 09:50:22,965 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 887.92000000
2025-06-12 09:50:22,989 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-12 09:50:23,153 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-12 09:50:23,155 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 09:50:23,155 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 09:50:23,159 - INFO - orders - Fetched 1 open orders for user 1
2025-06-12 09:50:23,162 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-12 09:50:23,164 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 4 pending orders
2025-06-12 09:51:55,567 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 09:54:34,603 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 09:58:42,086 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 09:58:52,287 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-12 09:58:52,294 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-12 09:58:52,294 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-12 09:58:52,294 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-12 09:58:53,136 - INFO - orders - Calculating margin for AUDCAD BUY order, quantity: 1
2025-06-12 09:58:53,214 - INFO - orders - Using order_price 0.8 as fallback for AUDCAD BUY order
2025-06-12 09:58:53,215 - INFO - orders - Margin calculation results: margin=800.00, price=0.8, contract_value=80000.000000000, commission=10.00
2025-06-12 09:58:53,215 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=10.00
2025-06-12 09:58:53,223 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-12 09:58:53,223 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 175): Type=BUY, Qty=1.00000000, StoredMargin=887.92000000
2025-06-12 09:58:53,223 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.92
2025-06-12 09:58:53,223 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-12 09:58:53,223 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.92')], HighestMarginPerLot=887.92
2025-06-12 09:58:53,224 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=887.92, ContributingOrders=1 (based on individual stored margins)
2025-06-12 09:58:53,224 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-12 09:58:53,224 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 175): Type=BUY, Qty=1.00000000, StoredMargin=887.92000000
2025-06-12 09:58:53,224 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.92
2025-06-12 09:58:53,224 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=800.00
2025-06-12 09:58:53,224 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=800.00
2025-06-12 09:58:53,224 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-12 09:58:53,224 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.92'), Decimal('800.00')], HighestMarginPerLot=887.92
2025-06-12 09:58:53,225 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1775.84, ContributingOrders=2 (based on individual stored margins)
2025-06-12 09:58:53,225 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=887.92, MarginAfter=1775.84, AdditionalMargin=887.92
2025-06-12 09:58:53,234 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=887.92000000, CalculatedNewMargin=1775.84
2025-06-12 09:58:53,302 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '1603626320', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('80000.000000000'), 'margin': Decimal('800.00'), 'commission': Decimal('10.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-12 09:58:53,377 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1775.84000000
2025-06-12 09:58:53,398 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-12 09:58:53,649 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-12 09:58:53,655 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 09:58:53,655 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 09:58:53,665 - INFO - orders - Fetched 2 open orders for user 1
2025-06-12 09:58:53,694 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-12 09:58:53,700 - INFO - orders - Updated static orders cache for user 1 with 2 open orders and 4 pending orders
2025-06-12 10:00:07,213 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 10:10:15,961 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 21:21:50,871 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 21:25:47,941 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 21:26:25,906 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.1
2025-06-12 21:26:25,917 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-12 21:26:25,917 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-12 21:26:25,917 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-12 21:26:26,594 - INFO - orders - Calculating margin for AUDCAD BUY order, quantity: 0.1
2025-06-12 21:26:26,615 - INFO - orders - Using order_price 0.88 as fallback for AUDCAD BUY order
2025-06-12 21:26:26,616 - INFO - orders - Margin calculation results: margin=88.00, price=0.88, contract_value=8800.00000000000, commission=1.00
2025-06-12 21:26:26,616 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=1.00
2025-06-12 21:26:26,625 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-12 21:26:26,625 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 175): Type=BUY, Qty=1.00000000, StoredMargin=887.92000000
2025-06-12 21:26:26,625 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.92
2025-06-12 21:26:26,626 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 176): Type=BUY, Qty=1.00000000, StoredMargin=800.00000000
2025-06-12 21:26:26,626 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=800
2025-06-12 21:26:26,626 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-12 21:26:26,626 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.92'), Decimal('800')], HighestMarginPerLot=887.92
2025-06-12 21:26:26,627 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1775.84, ContributingOrders=2 (based on individual stored margins)
2025-06-12 21:26:26,627 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-12 21:26:26,627 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 175): Type=BUY, Qty=1.00000000, StoredMargin=887.92000000
2025-06-12 21:26:26,627 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.92
2025-06-12 21:26:26,627 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 176): Type=BUY, Qty=1.00000000, StoredMargin=800.00000000
2025-06-12 21:26:26,627 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=800
2025-06-12 21:26:26,627 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: NEW_UNSAVED): Type=BUY, Qty=0.1, StoredMargin=88.00
2025-06-12 21:26:26,627 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=880.0
2025-06-12 21:26:26,627 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.10000000, TotalSellQty=0, NetQty=2.10000000
2025-06-12 21:26:26,628 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.92'), Decimal('800'), Decimal('880.0')], HighestMarginPerLot=887.92
2025-06-12 21:26:26,628 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1864.63, ContributingOrders=3 (based on individual stored margins)
2025-06-12 21:26:26,628 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=1775.84, MarginAfter=1864.63, AdditionalMargin=88.79
2025-06-12 21:26:26,642 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=1775.84000000, CalculatedNewMargin=1864.63
2025-06-12 21:26:26,795 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '5477003004', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.88'), 'order_quantity': Decimal('0.1'), 'contract_value': Decimal('8800.00000000000'), 'margin': Decimal('88.00'), 'commission': Decimal('1.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-12 21:26:26,899 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1864.63000000
2025-06-12 21:26:26,944 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-12 21:26:27,227 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-12 21:26:27,231 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 21:26:27,231 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 21:26:27,238 - INFO - orders - Fetched 3 open orders for user 1
2025-06-12 21:26:27,256 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-12 21:26:27,265 - INFO - orders - Updated static orders cache for user 1 with 3 open orders and 4 pending orders
2025-06-12 21:31:12,910 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 21:31:17,516 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.1
2025-06-12 21:31:17,526 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-12 21:31:17,526 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-12 21:31:17,527 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-12 21:31:18,330 - INFO - orders - Calculating margin for AUDCAD BUY order, quantity: 0.1
2025-06-12 21:31:18,349 - INFO - orders - Using order_price 0.88 as fallback for AUDCAD BUY order
2025-06-12 21:31:18,349 - INFO - orders - Margin calculation results: margin=88.00, price=0.88, contract_value=8800.00000000000, commission=1.00
2025-06-12 21:31:18,350 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=1.00
2025-06-12 21:31:18,360 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-12 21:31:18,360 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 175): Type=BUY, Qty=1.00000000, StoredMargin=887.92000000
2025-06-12 21:31:18,361 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.92
2025-06-12 21:31:18,361 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 176): Type=BUY, Qty=1.00000000, StoredMargin=800.00000000
2025-06-12 21:31:18,361 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=800
2025-06-12 21:31:18,361 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 177): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 21:31:18,361 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=880
2025-06-12 21:31:18,361 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.10000000, TotalSellQty=0, NetQty=2.10000000
2025-06-12 21:31:18,361 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.92'), Decimal('800'), Decimal('880')], HighestMarginPerLot=887.92
2025-06-12 21:31:18,362 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1864.63, ContributingOrders=3 (based on individual stored margins)
2025-06-12 21:31:18,362 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 4
2025-06-12 21:31:18,362 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 175): Type=BUY, Qty=1.00000000, StoredMargin=887.92000000
2025-06-12 21:31:18,362 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.92
2025-06-12 21:31:18,362 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 176): Type=BUY, Qty=1.00000000, StoredMargin=800.00000000
2025-06-12 21:31:18,363 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=800
2025-06-12 21:31:18,363 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 177): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 21:31:18,363 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=880
2025-06-12 21:31:18,363 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: NEW_UNSAVED): Type=BUY, Qty=0.1, StoredMargin=88.00
2025-06-12 21:31:18,363 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=880.0
2025-06-12 21:31:18,363 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.20000000, TotalSellQty=0, NetQty=2.20000000
2025-06-12 21:31:18,363 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.92'), Decimal('800'), Decimal('880'), Decimal('880.0')], HighestMarginPerLot=887.92
2025-06-12 21:31:18,364 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1953.42, ContributingOrders=4 (based on individual stored margins)
2025-06-12 21:31:18,364 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=1864.63, MarginAfter=1953.42, AdditionalMargin=88.79
2025-06-12 21:31:18,373 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=1864.63000000, CalculatedNewMargin=1953.42
2025-06-12 21:31:18,421 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '3592041828', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.88'), 'order_quantity': Decimal('0.1'), 'contract_value': Decimal('8800.00000000000'), 'margin': Decimal('88.00'), 'commission': Decimal('1.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-12 21:31:18,476 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1953.42000000
2025-06-12 21:31:18,497 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-12 21:31:18,774 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-12 21:31:18,780 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 21:31:18,780 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 21:31:18,787 - INFO - orders - Fetched 4 open orders for user 1
2025-06-12 21:31:18,794 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-12 21:31:18,798 - INFO - orders - Updated static orders cache for user 1 with 4 open orders and 4 pending orders
2025-06-12 21:37:06,150 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 21:37:11,725 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.1
2025-06-12 21:37:11,734 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-12 21:37:11,735 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-12 21:37:11,735 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-12 21:37:12,627 - INFO - orders - Calculating margin for AUDCAD BUY order, quantity: 0.1
2025-06-12 21:37:12,665 - INFO - orders - Using order_price 0.88 as fallback for AUDCAD BUY order
2025-06-12 21:37:12,665 - INFO - orders - Margin calculation results: margin=88.00, price=0.88, contract_value=8800.00000000000, commission=1.00
2025-06-12 21:37:12,665 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=1.00
2025-06-12 21:37:12,706 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 4
2025-06-12 21:37:12,706 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 175): Type=BUY, Qty=1.00000000, StoredMargin=887.92000000
2025-06-12 21:37:12,706 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.92
2025-06-12 21:37:12,707 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 176): Type=BUY, Qty=1.00000000, StoredMargin=800.00000000
2025-06-12 21:37:12,707 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=800
2025-06-12 21:37:12,707 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 177): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 21:37:12,707 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=880
2025-06-12 21:37:12,707 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 178): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 21:37:12,708 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=880
2025-06-12 21:37:12,708 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.20000000, TotalSellQty=0, NetQty=2.20000000
2025-06-12 21:37:12,708 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.92'), Decimal('800'), Decimal('880'), Decimal('880')], HighestMarginPerLot=887.92
2025-06-12 21:37:12,708 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1953.42, ContributingOrders=4 (based on individual stored margins)
2025-06-12 21:37:12,708 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 5
2025-06-12 21:37:12,708 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 175): Type=BUY, Qty=1.00000000, StoredMargin=887.92000000
2025-06-12 21:37:12,709 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.92
2025-06-12 21:37:12,709 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 176): Type=BUY, Qty=1.00000000, StoredMargin=800.00000000
2025-06-12 21:37:12,709 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=800
2025-06-12 21:37:12,709 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 177): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 21:37:12,709 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=880
2025-06-12 21:37:12,709 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 178): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 21:37:12,709 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=880
2025-06-12 21:37:12,709 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: NEW_UNSAVED): Type=BUY, Qty=0.1, StoredMargin=88.00
2025-06-12 21:37:12,710 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=880.0
2025-06-12 21:37:12,710 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.30000000, TotalSellQty=0, NetQty=2.30000000
2025-06-12 21:37:12,710 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.92'), Decimal('800'), Decimal('880'), Decimal('880'), Decimal('880.0')], HighestMarginPerLot=887.92
2025-06-12 21:37:12,710 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=2042.22, ContributingOrders=5 (based on individual stored margins)
2025-06-12 21:37:12,710 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=1953.42, MarginAfter=2042.22, AdditionalMargin=88.80
2025-06-12 21:37:12,727 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=1953.42000000, CalculatedNewMargin=2042.22
2025-06-12 21:37:12,789 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '6953758743', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.88'), 'order_quantity': Decimal('0.1'), 'contract_value': Decimal('8800.00000000000'), 'margin': Decimal('88.00'), 'commission': Decimal('1.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-12 21:37:12,865 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 2042.22000000
2025-06-12 21:37:12,911 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-12 21:37:13,076 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-12 21:37:13,079 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 21:37:13,079 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 21:37:13,085 - INFO - orders - Fetched 5 open orders for user 1
2025-06-12 21:37:13,091 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-12 21:37:13,094 - INFO - orders - Updated static orders cache for user 1 with 5 open orders and 4 pending orders
2025-06-12 21:55:28,693 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 21:56:10,478 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.1
2025-06-12 21:56:10,490 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-12 21:56:10,490 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-12 21:56:10,490 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-12 21:56:11,957 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 0.1
2025-06-12 21:56:11,957 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-12 21:56:12,036 - INFO - orders - [ORDER_MARGIN_CALC] No price in cache for AUDCAD, checking raw market data
2025-06-12 21:56:12,037 - INFO - orders - [ORDER_MARGIN_CALC] Raw market data for AUDCAD: {'b': '0.8832500000', 'o': '0.8832200000'}
2025-06-12 21:56:12,037 - INFO - orders - [ORDER_MARGIN_CALC] Using raw ask price for AUDCAD: 0 (raw: 0)
2025-06-12 21:56:12,037 - INFO - orders - [ORDER_MARGIN_CALC] Using order_price 0.88 as fallback for AUDCAD BUY order
2025-06-12 21:56:12,038 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-12 21:56:12,038 - INFO - orders - [ORDER_MARGIN_CALC] - OLD Formula: contract_value = quantity * contract_size = 0.1 * 100000.00000000 = 10000.000000000
2025-06-12 21:56:12,038 - INFO - orders - [ORDER_MARGIN_CALC] - CORRECT Formula: contract_value = quantity * contract_size * price = 0.1 * 100000.00000000 * 0.88 = 8800.00000000000
2025-06-12 21:56:12,038 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: contract_value / leverage = 8800.00000000000 / 100.00 = 88.000000000 (rounded to 88.00)
2025-06-12 21:56:12,039 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-12 21:56:12,039 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 0.1 * 10.0000 = 1.00000
2025-06-12 21:56:12,039 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-12 21:56:12,040 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=88.00, price=0.88, contract_value=8800.00000000000, commission=1.00
2025-06-12 21:56:12,040 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=1.00
2025-06-12 21:56:12,078 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 5
2025-06-12 21:56:12,079 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 175): Type=BUY, Qty=1.00000000, StoredMargin=887.92000000
2025-06-12 21:56:12,079 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.92
2025-06-12 21:56:12,080 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 176): Type=BUY, Qty=1.00000000, StoredMargin=800.00000000
2025-06-12 21:56:12,080 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=800
2025-06-12 21:56:12,081 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 177): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 21:56:12,081 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=880
2025-06-12 21:56:12,081 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 178): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 21:56:12,083 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=880
2025-06-12 21:56:12,083 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: 179): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 21:56:12,083 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=880
2025-06-12 21:56:12,083 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.30000000, TotalSellQty=0, NetQty=2.30000000
2025-06-12 21:56:12,084 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.92'), Decimal('800'), Decimal('880'), Decimal('880'), Decimal('880')], HighestMarginPerLot=887.92
2025-06-12 21:56:12,084 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=2042.22, ContributingOrders=5 (based on individual stored margins)
2025-06-12 21:56:12,084 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 6
2025-06-12 21:56:12,084 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 175): Type=BUY, Qty=1.00000000, StoredMargin=887.92000000
2025-06-12 21:56:12,093 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.92
2025-06-12 21:56:12,094 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 176): Type=BUY, Qty=1.00000000, StoredMargin=800.00000000
2025-06-12 21:56:12,094 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=800
2025-06-12 21:56:12,094 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 177): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 21:56:12,095 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=880
2025-06-12 21:56:12,095 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 178): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 21:56:12,095 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=880
2025-06-12 21:56:12,095 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: 179): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 21:56:12,099 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=880
2025-06-12 21:56:12,100 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6 (ID: NEW_UNSAVED): Type=BUY, Qty=0.1, StoredMargin=88.00
2025-06-12 21:56:12,100 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6: MarginPerLot=880.0
2025-06-12 21:56:12,100 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.40000000, TotalSellQty=0, NetQty=2.40000000
2025-06-12 21:56:12,101 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.92'), Decimal('800'), Decimal('880'), Decimal('880'), Decimal('880'), Decimal('880.0')], HighestMarginPerLot=887.92
2025-06-12 21:56:12,101 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=2131.01, ContributingOrders=6 (based on individual stored margins)
2025-06-12 21:56:12,101 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=2042.22, MarginAfter=2131.01, AdditionalMargin=88.79
2025-06-12 21:56:12,148 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=2042.22000000, CalculatedNewMargin=2131.01
2025-06-12 21:56:12,462 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '1287090754', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.88'), 'order_quantity': Decimal('0.1'), 'contract_value': Decimal('8800.00000000000'), 'margin': Decimal('88.00'), 'commission': Decimal('1.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-12 21:56:12,692 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 2131.01000000
2025-06-12 21:56:12,814 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-12 21:56:13,263 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-12 21:56:13,272 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 21:56:13,272 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 21:56:13,291 - INFO - orders - Fetched 6 open orders for user 1
2025-06-12 21:56:13,356 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-12 21:56:13,373 - INFO - orders - Updated static orders cache for user 1 with 6 open orders and 4 pending orders
2025-06-12 22:05:33,877 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:06:23,108 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:07:20,150 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:07:46,325 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:08:04,176 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:08:24,424 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:08:59,308 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.1
2025-06-12 22:08:59,320 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-12 22:08:59,320 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-12 22:08:59,321 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-12 22:09:00,161 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 0.1
2025-06-12 22:09:00,161 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-12 22:09:00,188 - INFO - orders - [ORDER_MARGIN_CALC] No price in cache for AUDCAD, checking raw market data
2025-06-12 22:09:00,188 - INFO - orders - [ORDER_MARGIN_CALC] Raw market data for AUDCAD: {'b': '0.8837200000', 'o': '0.8836600000'}
2025-06-12 22:09:00,188 - INFO - orders - [ORDER_MARGIN_CALC] Using raw ask price for AUDCAD: 0 (raw: 0)
2025-06-12 22:09:00,189 - INFO - orders - [ORDER_MARGIN_CALC] Using order_price 0.88 as fallback for AUDCAD BUY order
2025-06-12 22:09:00,189 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-12 22:09:00,189 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 0.1 * 100000.00000000 = 10000.000000000
2025-06-12 22:09:00,190 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (10000.000000000 * 0.88) / 100.00 = 88.000000000 (rounded to 88.00)
2025-06-12 22:09:00,190 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-12 22:09:00,190 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 0.1 * 10.0000 = 1.00000
2025-06-12 22:09:00,190 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-12 22:09:00,190 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 88.00 CAD
2025-06-12 22:09:00,191 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 88.00 CAD to USD for margin for AUDCAD BUY order (user_id: 1, position: )
2025-06-12 22:09:00,191 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-12 22:09:00,195 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-12 22:09:00,195 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-12 22:09:00,196 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-12 22:09:00,202 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3610400000'), 'o': Decimal('1.3610200000')}
2025-06-12 22:09:00,202 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3610400000
2025-06-12 22:09:00,203 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 88.00 CAD / 1.3610400000 = 64.65643919355786751307823429 USD
2025-06-12 22:09:00,203 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 88.00 CAD -> 64.65643919355786751307823429 USD
2025-06-12 22:09:00,203 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=64.65643919355786751307823429, price=0.88, contract_value=10000.000000000, commission=1.00
2025-06-12 22:09:00,203 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=1.00
2025-06-12 22:09:00,227 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 6
2025-06-12 22:09:00,228 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 175): Type=BUY, Qty=1.00000000, StoredMargin=887.92000000
2025-06-12 22:09:00,228 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.92
2025-06-12 22:09:00,229 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 176): Type=BUY, Qty=1.00000000, StoredMargin=800.00000000
2025-06-12 22:09:00,229 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=800
2025-06-12 22:09:00,229 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 177): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:09:00,229 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=880
2025-06-12 22:09:00,229 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 178): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:09:00,229 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=880
2025-06-12 22:09:00,230 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: 179): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:09:00,230 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=880
2025-06-12 22:09:00,231 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6 (ID: 180): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:09:00,232 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6: MarginPerLot=880
2025-06-12 22:09:00,232 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.40000000, TotalSellQty=0, NetQty=2.40000000
2025-06-12 22:09:00,232 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.92'), Decimal('800'), Decimal('880'), Decimal('880'), Decimal('880'), Decimal('880')], HighestMarginPerLot=887.92
2025-06-12 22:09:00,232 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=2131.01, ContributingOrders=6 (based on individual stored margins)
2025-06-12 22:09:00,233 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 7
2025-06-12 22:09:00,233 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 175): Type=BUY, Qty=1.00000000, StoredMargin=887.92000000
2025-06-12 22:09:00,233 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.92
2025-06-12 22:09:00,233 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 176): Type=BUY, Qty=1.00000000, StoredMargin=800.00000000
2025-06-12 22:09:00,233 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=800
2025-06-12 22:09:00,233 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 177): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:09:00,234 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=880
2025-06-12 22:09:00,236 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 178): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:09:00,237 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=880
2025-06-12 22:09:00,239 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: 179): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:09:00,239 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=880
2025-06-12 22:09:00,243 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6 (ID: 180): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:09:00,244 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6: MarginPerLot=880
2025-06-12 22:09:00,244 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7 (ID: NEW_UNSAVED): Type=BUY, Qty=0.1, StoredMargin=64.65643919355786751307823429
2025-06-12 22:09:00,244 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7: MarginPerLot=646.5643919355786751307823429
2025-06-12 22:09:00,246 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.50000000, TotalSellQty=0, NetQty=2.50000000
2025-06-12 22:09:00,246 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.92'), Decimal('800'), Decimal('880'), Decimal('880'), Decimal('880'), Decimal('880'), Decimal('646.5643919355786751307823429')], HighestMarginPerLot=887.92
2025-06-12 22:09:00,247 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=2219.80, ContributingOrders=7 (based on individual stored margins)
2025-06-12 22:09:00,247 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=2131.01, MarginAfter=2219.80, AdditionalMargin=88.79
2025-06-12 22:09:00,305 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=2131.01000000, CalculatedNewMargin=2219.80
2025-06-12 22:09:00,454 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '2172292076', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.88'), 'order_quantity': Decimal('0.1'), 'contract_value': Decimal('10000.000000000'), 'margin': Decimal('64.65643919355786751307823429'), 'commission': Decimal('1.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-12 22:09:00,719 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 2219.80000000
2025-06-12 22:09:00,849 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-12 22:09:01,469 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-12 22:09:01,479 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 22:09:01,479 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 22:09:01,496 - INFO - orders - Fetched 7 open orders for user 1
2025-06-12 22:09:01,557 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-12 22:09:01,567 - INFO - orders - Updated static orders cache for user 1 with 7 open orders and 4 pending orders
2025-06-12 22:09:23,381 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:13:22,607 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:23:07,086 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:24:16,078 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:25:24,918 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:26:34,109 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:26:48,000 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:29:39,970 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:30:52,504 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:33:08,397 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:33:37,407 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:34:06,071 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:34:06,080 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:42:00,572 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:44:29,679 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:44:29,687 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:44:54,655 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:44:54,655 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:45:20,162 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:45:20,163 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:46:20,189 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:46:20,190 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:46:31,471 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:46:54,986 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:46:55,033 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:46:55,042 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:47:48,461 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:47:48,466 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:47:48,468 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:47:54,034 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:47:54,060 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:47:54,068 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:48:08,630 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:48:53,241 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:48:53,250 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:48:53,257 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:48:53,260 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 22:52:41,430 - INFO - orders - Close order request received - Order ID: 5499899520, User ID: 1, User Type: demo
2025-06-12 22:52:41,430 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-12 22:52:41,430 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001ECFC1C5D10>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-12 22:52:41,430 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-12 22:52:41,430 - INFO - orders - Request to close order 5499899520 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-12 22:52:41,450 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-12 22:52:41,469 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 7
2025-06-12 22:52:41,469 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 175): Type=BUY, Qty=1.00000000, StoredMargin=887.92000000
2025-06-12 22:52:41,469 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=887.92
2025-06-12 22:52:41,470 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 176): Type=BUY, Qty=1.00000000, StoredMargin=800.00000000
2025-06-12 22:52:41,470 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=800
2025-06-12 22:52:41,470 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 177): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:52:41,470 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=880
2025-06-12 22:52:41,470 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 178): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:52:41,470 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=880
2025-06-12 22:52:41,470 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: 179): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:52:41,470 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=880
2025-06-12 22:52:41,470 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6 (ID: 180): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:52:41,471 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6: MarginPerLot=880
2025-06-12 22:52:41,471 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7 (ID: 181): Type=BUY, Qty=0.10000000, StoredMargin=64.65643919
2025-06-12 22:52:41,471 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7: MarginPerLot=646.5643919
2025-06-12 22:52:41,471 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.50000000, TotalSellQty=0, NetQty=2.50000000
2025-06-12 22:52:41,471 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('887.92'), Decimal('800'), Decimal('880'), Decimal('880'), Decimal('880'), Decimal('880'), Decimal('646.5643919')], HighestMarginPerLot=887.92
2025-06-12 22:52:41,471 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=2219.80, ContributingOrders=7 (based on individual stored margins)
2025-06-12 22:52:41,471 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 6
2025-06-12 22:52:41,471 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 176): Type=BUY, Qty=1.00000000, StoredMargin=800.00000000
2025-06-12 22:52:41,471 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=800
2025-06-12 22:52:41,471 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 177): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:52:41,471 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=880
2025-06-12 22:52:41,472 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 178): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:52:41,472 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=880
2025-06-12 22:52:41,472 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 179): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:52:41,472 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=880
2025-06-12 22:52:41,472 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: 180): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:52:41,472 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=880
2025-06-12 22:52:41,472 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6 (ID: 181): Type=BUY, Qty=0.10000000, StoredMargin=64.65643919
2025-06-12 22:52:41,472 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6: MarginPerLot=646.5643919
2025-06-12 22:52:41,472 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.50000000, TotalSellQty=0, NetQty=1.50000000
2025-06-12 22:52:41,472 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('800'), Decimal('880'), Decimal('880'), Decimal('880'), Decimal('880'), Decimal('646.5643919')], HighestMarginPerLot=880
2025-06-12 22:52:41,472 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1320.00, ContributingOrders=6 (based on individual stored margins)
2025-06-12 22:52:41,491 - INFO - orders - Existing entry commission for order 5499899520: 10.00000000
2025-06-12 22:52:41,491 - INFO - orders - Commission calculation for order 5499899520: entry=10.00000000, exit=10.000000000000, total=20.00
2025-06-12 22:52:41,492 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 208.000000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 5499899520)
2025-06-12 22:52:41,492 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-12 22:52:41,495 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-12 22:52:41,495 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-12 22:52:41,495 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-12 22:52:41,501 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3643700000'), 'o': Decimal('1.3643300000')}
2025-06-12 22:52:41,501 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3643700000
2025-06-12 22:52:41,501 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 208.000000000000000000000000 CAD / 1.3643700000 = 152.4513145261182816977799277 USD
2025-06-12 22:52:41,576 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=11866.88000000, margin=1320.00
2025-06-12 22:52:41,576 - INFO - orders - Setting user data cache for user 1 with wallet_balance=11866.88000000, margin=1320.00
2025-06-12 22:52:41,578 - INFO - orders - User data cache updated for user 1
2025-06-12 22:52:41,578 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 22:52:41,578 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 22:52:41,586 - INFO - orders - Fetched 6 open orders for user 1
2025-06-12 22:52:41,599 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-12 22:52:41,601 - INFO - orders - Updated static orders cache for user 1 with 6 open orders and 4 pending orders
2025-06-12 22:52:41,601 - INFO - orders - Publishing order update for user 1
2025-06-12 22:52:41,606 - INFO - orders - Publishing user data update for user 1
2025-06-12 22:52:41,608 - INFO - orders - Publishing market data trigger
2025-06-12 22:53:10,634 - INFO - orders - Close order request received - Order ID: 1603626320, User ID: 1, User Type: demo
2025-06-12 22:53:10,634 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-12 22:53:10,634 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001ECFC1C89D0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-12 22:53:10,634 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-12 22:53:10,635 - INFO - orders - Request to close order 1603626320 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-12 22:53:10,646 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-12 22:53:10,658 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 6
2025-06-12 22:53:10,659 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 176): Type=BUY, Qty=1.00000000, StoredMargin=800.00000000
2025-06-12 22:53:10,659 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=800
2025-06-12 22:53:10,659 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 177): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:10,659 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=880
2025-06-12 22:53:10,659 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 178): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:10,659 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=880
2025-06-12 22:53:10,659 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 179): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:10,659 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=880
2025-06-12 22:53:10,659 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: 180): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:10,659 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=880
2025-06-12 22:53:10,659 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6 (ID: 181): Type=BUY, Qty=0.10000000, StoredMargin=64.65643919
2025-06-12 22:53:10,659 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6: MarginPerLot=646.5643919
2025-06-12 22:53:10,659 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.50000000, TotalSellQty=0, NetQty=1.50000000
2025-06-12 22:53:10,659 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('800'), Decimal('880'), Decimal('880'), Decimal('880'), Decimal('880'), Decimal('646.5643919')], HighestMarginPerLot=880
2025-06-12 22:53:10,659 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1320.00, ContributingOrders=6 (based on individual stored margins)
2025-06-12 22:53:10,659 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 5
2025-06-12 22:53:10,660 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 177): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:10,660 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=880
2025-06-12 22:53:10,660 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 178): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:10,660 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=880
2025-06-12 22:53:10,660 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 179): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:10,660 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=880
2025-06-12 22:53:10,660 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 180): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:10,660 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=880
2025-06-12 22:53:10,660 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: 181): Type=BUY, Qty=0.10000000, StoredMargin=64.65643919
2025-06-12 22:53:10,660 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=646.5643919
2025-06-12 22:53:10,660 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0.50000000, TotalSellQty=0, NetQty=0.50000000
2025-06-12 22:53:10,660 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('880'), Decimal('880'), Decimal('880'), Decimal('880'), Decimal('646.5643919')], HighestMarginPerLot=880
2025-06-12 22:53:10,660 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=440.00, ContributingOrders=5 (based on individual stored margins)
2025-06-12 22:53:10,672 - INFO - orders - Existing entry commission for order 1603626320: 10.00000000
2025-06-12 22:53:10,672 - INFO - orders - Commission calculation for order 1603626320: entry=10.00000000, exit=10.000000000000, total=20.00
2025-06-12 22:53:10,672 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 9000.000000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1603626320)
2025-06-12 22:53:10,672 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-12 22:53:10,673 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-12 22:53:10,674 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-12 22:53:10,674 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-12 22:53:10,677 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3643800000'), 'o': Decimal('1.3643000000')}
2025-06-12 22:53:10,677 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3643800000
2025-06-12 22:53:10,677 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 9000.000000000000000000000000 CAD / 1.3643800000 = 6596.402761693956229203007960 USD
2025-06-12 22:53:10,708 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=18443.28000000, margin=440.00
2025-06-12 22:53:10,708 - INFO - orders - Setting user data cache for user 1 with wallet_balance=18443.28000000, margin=440.00
2025-06-12 22:53:10,711 - INFO - orders - User data cache updated for user 1
2025-06-12 22:53:10,711 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 22:53:10,711 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 22:53:10,718 - INFO - orders - Fetched 5 open orders for user 1
2025-06-12 22:53:10,724 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-12 22:53:10,726 - INFO - orders - Updated static orders cache for user 1 with 5 open orders and 4 pending orders
2025-06-12 22:53:10,726 - INFO - orders - Publishing order update for user 1
2025-06-12 22:53:10,728 - INFO - orders - Publishing user data update for user 1
2025-06-12 22:53:10,735 - INFO - orders - Publishing market data trigger
2025-06-12 22:53:32,269 - INFO - orders - Close order request received - Order ID: 5477003004, User ID: 1, User Type: demo
2025-06-12 22:53:32,269 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-12 22:53:32,269 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001ECFC1CA9E0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-12 22:53:32,269 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-12 22:53:32,269 - INFO - orders - Request to close order 5477003004 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-12 22:53:32,283 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-12 22:53:32,303 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 5
2025-06-12 22:53:32,303 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 177): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:32,303 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=880
2025-06-12 22:53:32,304 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 178): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:32,304 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=880
2025-06-12 22:53:32,304 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 179): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:32,304 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=880
2025-06-12 22:53:32,304 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 180): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:32,304 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=880
2025-06-12 22:53:32,304 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: 181): Type=BUY, Qty=0.10000000, StoredMargin=64.65643919
2025-06-12 22:53:32,304 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=646.5643919
2025-06-12 22:53:32,304 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0.50000000, TotalSellQty=0, NetQty=0.50000000
2025-06-12 22:53:32,304 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('880'), Decimal('880'), Decimal('880'), Decimal('880'), Decimal('646.5643919')], HighestMarginPerLot=880
2025-06-12 22:53:32,304 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=440.00, ContributingOrders=5 (based on individual stored margins)
2025-06-12 22:53:32,304 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 4
2025-06-12 22:53:32,304 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 178): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:32,304 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=880
2025-06-12 22:53:32,304 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 179): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:32,304 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=880
2025-06-12 22:53:32,304 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 180): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:32,304 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=880
2025-06-12 22:53:32,304 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 181): Type=BUY, Qty=0.10000000, StoredMargin=64.65643919
2025-06-12 22:53:32,305 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=646.5643919
2025-06-12 22:53:32,305 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0.40000000, TotalSellQty=0, NetQty=0.40000000
2025-06-12 22:53:32,305 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('880'), Decimal('880'), Decimal('880'), Decimal('646.5643919')], HighestMarginPerLot=880
2025-06-12 22:53:32,305 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=352.00, ContributingOrders=4 (based on individual stored margins)
2025-06-12 22:53:32,328 - INFO - orders - Existing entry commission for order 5477003004: 1.00000000
2025-06-12 22:53:32,328 - INFO - orders - Commission calculation for order 5477003004: entry=1.00000000, exit=1.000000000000, total=2.00
2025-06-12 22:53:32,328 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 100.000000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 5477003004)
2025-06-12 22:53:32,328 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-12 22:53:32,339 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-12 22:53:32,339 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-12 22:53:32,339 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-12 22:53:32,341 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3643700000'), 'o': Decimal('1.3643200000')}
2025-06-12 22:53:32,341 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3643700000
2025-06-12 22:53:32,341 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 100.000000000000000000000000 CAD / 1.3643700000 = 73.29390121447994312393265756 USD
2025-06-12 22:53:32,380 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=18514.57000000, margin=352.00
2025-06-12 22:53:32,380 - INFO - orders - Setting user data cache for user 1 with wallet_balance=18514.57000000, margin=352.00
2025-06-12 22:53:32,382 - INFO - orders - User data cache updated for user 1
2025-06-12 22:53:32,382 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 22:53:32,382 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 22:53:32,387 - INFO - orders - Fetched 4 open orders for user 1
2025-06-12 22:53:32,395 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-12 22:53:32,403 - INFO - orders - Updated static orders cache for user 1 with 4 open orders and 4 pending orders
2025-06-12 22:53:32,403 - INFO - orders - Publishing order update for user 1
2025-06-12 22:53:32,405 - INFO - orders - Publishing user data update for user 1
2025-06-12 22:53:32,409 - INFO - orders - Publishing market data trigger
2025-06-12 22:53:34,735 - INFO - orders - Close order request received - Order ID: 5477003004, User ID: 1, User Type: demo
2025-06-12 22:53:34,735 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-12 22:53:34,735 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001ECFC1CA9E0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-12 22:53:34,735 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-12 22:53:34,735 - INFO - orders - Request to close order 5477003004 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-12 22:53:34,744 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-12 22:53:34,747 - ERROR - orders - Error processing close order: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1083, in close_order
    raise HTTPException(status_code=400, detail=f"Order status is '{db_order.order_status}'. Only 'OPEN' orders can be closed.")
fastapi.exceptions.HTTPException: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.
2025-06-12 22:53:34,749 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1083, in close_order
    raise HTTPException(status_code=400, detail=f"Order status is '{db_order.order_status}'. Only 'OPEN' orders can be closed.")
fastapi.exceptions.HTTPException: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1237, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.
2025-06-12 22:53:44,265 - INFO - orders - Close order request received - Order ID: 3592041828, User ID: 1, User Type: demo
2025-06-12 22:53:44,265 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-12 22:53:44,266 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001ECFC1C9A70>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-12 22:53:44,266 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-12 22:53:44,266 - INFO - orders - Request to close order 3592041828 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-12 22:53:44,275 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-12 22:53:44,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 4
2025-06-12 22:53:44,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 178): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:44,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=880
2025-06-12 22:53:44,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 179): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:44,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=880
2025-06-12 22:53:44,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 180): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:44,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=880
2025-06-12 22:53:44,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 181): Type=BUY, Qty=0.10000000, StoredMargin=64.65643919
2025-06-12 22:53:44,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=646.5643919
2025-06-12 22:53:44,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0.40000000, TotalSellQty=0, NetQty=0.40000000
2025-06-12 22:53:44,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('880'), Decimal('880'), Decimal('880'), Decimal('646.5643919')], HighestMarginPerLot=880
2025-06-12 22:53:44,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=352.00, ContributingOrders=4 (based on individual stored margins)
2025-06-12 22:53:44,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-12 22:53:44,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 179): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:44,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=880
2025-06-12 22:53:44,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 180): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:44,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=880
2025-06-12 22:53:44,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 181): Type=BUY, Qty=0.10000000, StoredMargin=64.65643919
2025-06-12 22:53:44,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=646.5643919
2025-06-12 22:53:44,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0.30000000, TotalSellQty=0, NetQty=0.30000000
2025-06-12 22:53:44,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('880'), Decimal('880'), Decimal('646.5643919')], HighestMarginPerLot=880
2025-06-12 22:53:44,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=264.00, ContributingOrders=3 (based on individual stored margins)
2025-06-12 22:53:44,292 - INFO - orders - Existing entry commission for order 3592041828: 1.00000000
2025-06-12 22:53:44,292 - INFO - orders - Commission calculation for order 3592041828: entry=1.00000000, exit=1.000000000000, total=2.00
2025-06-12 22:53:44,292 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 100.000000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 3592041828)
2025-06-12 22:53:44,292 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-12 22:53:44,294 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-12 22:53:44,294 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-12 22:53:44,294 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-12 22:53:44,296 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3643600000'), 'o': Decimal('1.3643200000')}
2025-06-12 22:53:44,297 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3643600000
2025-06-12 22:53:44,297 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 100.000000000000000000000000 CAD / 1.3643600000 = 73.29443841801284118561083585 USD
2025-06-12 22:53:44,323 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=18585.86000000, margin=264.00
2025-06-12 22:53:44,323 - INFO - orders - Setting user data cache for user 1 with wallet_balance=18585.86000000, margin=264.00
2025-06-12 22:53:44,326 - INFO - orders - User data cache updated for user 1
2025-06-12 22:53:44,326 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 22:53:44,326 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 22:53:44,331 - INFO - orders - Fetched 3 open orders for user 1
2025-06-12 22:53:44,336 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-12 22:53:44,343 - INFO - orders - Updated static orders cache for user 1 with 3 open orders and 4 pending orders
2025-06-12 22:53:44,343 - INFO - orders - Publishing order update for user 1
2025-06-12 22:53:44,346 - INFO - orders - Publishing user data update for user 1
2025-06-12 22:53:44,348 - INFO - orders - Publishing market data trigger
2025-06-12 22:53:50,420 - INFO - orders - Close order request received - Order ID: 6953758743, User ID: 1, User Type: demo
2025-06-12 22:53:50,420 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-12 22:53:50,420 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001ECFC1C9480>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-12 22:53:50,420 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-12 22:53:50,421 - INFO - orders - Request to close order 6953758743 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-12 22:53:50,432 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-12 22:53:50,440 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-12 22:53:50,440 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 179): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:50,440 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=880
2025-06-12 22:53:50,440 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 180): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:50,440 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=880
2025-06-12 22:53:50,440 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 181): Type=BUY, Qty=0.10000000, StoredMargin=64.65643919
2025-06-12 22:53:50,440 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=646.5643919
2025-06-12 22:53:50,440 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0.30000000, TotalSellQty=0, NetQty=0.30000000
2025-06-12 22:53:50,441 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('880'), Decimal('880'), Decimal('646.5643919')], HighestMarginPerLot=880
2025-06-12 22:53:50,441 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=264.00, ContributingOrders=3 (based on individual stored margins)
2025-06-12 22:53:50,441 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-12 22:53:50,441 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 180): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:50,441 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=880
2025-06-12 22:53:50,441 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 181): Type=BUY, Qty=0.10000000, StoredMargin=64.65643919
2025-06-12 22:53:50,441 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=646.5643919
2025-06-12 22:53:50,441 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0.20000000, TotalSellQty=0, NetQty=0.20000000
2025-06-12 22:53:50,441 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('880'), Decimal('646.5643919')], HighestMarginPerLot=880
2025-06-12 22:53:50,441 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=176.00, ContributingOrders=2 (based on individual stored margins)
2025-06-12 22:53:50,453 - INFO - orders - Existing entry commission for order 6953758743: 1.00000000
2025-06-12 22:53:50,453 - INFO - orders - Commission calculation for order 6953758743: entry=1.00000000, exit=1.000000000000, total=2.00
2025-06-12 22:53:50,453 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 100.000000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 6953758743)
2025-06-12 22:53:50,453 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-12 22:53:50,455 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-12 22:53:50,455 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-12 22:53:50,455 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-12 22:53:50,456 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3643600000'), 'o': Decimal('1.3643200000')}
2025-06-12 22:53:50,456 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3643600000
2025-06-12 22:53:50,456 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 100.000000000000000000000000 CAD / 1.3643600000 = 73.29443841801284118561083585 USD
2025-06-12 22:53:50,480 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=18657.15000000, margin=176.00
2025-06-12 22:53:50,480 - INFO - orders - Setting user data cache for user 1 with wallet_balance=18657.15000000, margin=176.00
2025-06-12 22:53:50,483 - INFO - orders - User data cache updated for user 1
2025-06-12 22:53:50,483 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 22:53:50,483 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 22:53:50,486 - INFO - orders - Fetched 2 open orders for user 1
2025-06-12 22:53:50,490 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-12 22:53:50,492 - INFO - orders - Updated static orders cache for user 1 with 2 open orders and 4 pending orders
2025-06-12 22:53:50,492 - INFO - orders - Publishing order update for user 1
2025-06-12 22:53:50,494 - INFO - orders - Publishing user data update for user 1
2025-06-12 22:53:50,496 - INFO - orders - Publishing market data trigger
2025-06-12 22:53:55,812 - INFO - orders - Close order request received - Order ID: 1287090754, User ID: 1, User Type: demo
2025-06-12 22:53:55,812 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-12 22:53:55,812 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001ECFC1C9810>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-12 22:53:55,812 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-12 22:53:55,812 - INFO - orders - Request to close order 1287090754 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-12 22:53:55,819 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-12 22:53:55,828 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-12 22:53:55,829 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 180): Type=BUY, Qty=0.10000000, StoredMargin=88.00000000
2025-06-12 22:53:55,829 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=880
2025-06-12 22:53:55,829 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 181): Type=BUY, Qty=0.10000000, StoredMargin=64.65643919
2025-06-12 22:53:55,829 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=646.5643919
2025-06-12 22:53:55,829 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0.20000000, TotalSellQty=0, NetQty=0.20000000
2025-06-12 22:53:55,829 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('880'), Decimal('646.5643919')], HighestMarginPerLot=880
2025-06-12 22:53:55,829 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=176.00, ContributingOrders=2 (based on individual stored margins)
2025-06-12 22:53:55,829 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-12 22:53:55,829 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 181): Type=BUY, Qty=0.10000000, StoredMargin=64.65643919
2025-06-12 22:53:55,829 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=646.5643919
2025-06-12 22:53:55,829 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0.10000000, TotalSellQty=0, NetQty=0.10000000
2025-06-12 22:53:55,829 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('646.5643919')], HighestMarginPerLot=646.5643919
2025-06-12 22:53:55,829 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=64.66, ContributingOrders=1 (based on individual stored margins)
2025-06-12 22:53:55,837 - INFO - orders - Existing entry commission for order 1287090754: 1.00000000
2025-06-12 22:53:55,837 - INFO - orders - Commission calculation for order 1287090754: entry=1.00000000, exit=1.000000000000, total=2.00
2025-06-12 22:53:55,837 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 100.000000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 1287090754)
2025-06-12 22:53:55,837 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-12 22:53:55,839 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-12 22:53:55,839 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-12 22:53:55,839 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-12 22:53:55,840 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3643600000'), 'o': Decimal('1.3643200000')}
2025-06-12 22:53:55,840 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3643600000
2025-06-12 22:53:55,840 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 100.000000000000000000000000 CAD / 1.3643600000 = 73.29443841801284118561083585 USD
2025-06-12 22:53:55,864 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=18728.44000000, margin=64.66
2025-06-12 22:53:55,864 - INFO - orders - Setting user data cache for user 1 with wallet_balance=18728.44000000, margin=64.66
2025-06-12 22:53:55,866 - INFO - orders - User data cache updated for user 1
2025-06-12 22:53:55,866 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 22:53:55,866 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 22:53:55,870 - INFO - orders - Fetched 1 open orders for user 1
2025-06-12 22:53:55,873 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-12 22:53:55,875 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 4 pending orders
2025-06-12 22:53:55,875 - INFO - orders - Publishing order update for user 1
2025-06-12 22:53:55,876 - INFO - orders - Publishing user data update for user 1
2025-06-12 22:53:55,878 - INFO - orders - Publishing market data trigger
2025-06-12 22:54:01,599 - INFO - orders - Close order request received - Order ID: 2172292076, User ID: 1, User Type: demo
2025-06-12 22:54:01,599 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-12 22:54:01,599 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001ECFC1C9BA0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-12 22:54:01,599 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-12 22:54:01,599 - INFO - orders - Request to close order 2172292076 for user 1 (DemoUser) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-12 22:54:01,608 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-12 22:54:01,619 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-12 22:54:01,619 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 181): Type=BUY, Qty=0.10000000, StoredMargin=64.65643919
2025-06-12 22:54:01,619 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=646.5643919
2025-06-12 22:54:01,619 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0.10000000, TotalSellQty=0, NetQty=0.10000000
2025-06-12 22:54:01,619 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('646.5643919')], HighestMarginPerLot=646.5643919
2025-06-12 22:54:01,619 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=64.66, ContributingOrders=1 (based on individual stored margins)
2025-06-12 22:54:01,619 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-12 22:54:01,619 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-12 22:54:01,628 - INFO - orders - Existing entry commission for order 2172292076: 1.00000000
2025-06-12 22:54:01,628 - INFO - orders - Commission calculation for order 2172292076: entry=1.00000000, exit=1.000000000000, total=2.00
2025-06-12 22:54:01,628 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 100.000000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 2172292076)
2025-06-12 22:54:01,628 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-12 22:54:01,630 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-12 22:54:01,630 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-12 22:54:01,630 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-12 22:54:01,632 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3643400000'), 'o': Decimal('1.3643200000')}
2025-06-12 22:54:01,632 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3643400000
2025-06-12 22:54:01,632 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 100.000000000000000000000000 CAD / 1.3643400000 = 73.29551284870340237770643681 USD
2025-06-12 22:54:01,657 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=18799.74000000, margin=0
2025-06-12 22:54:01,658 - INFO - orders - Setting user data cache for user 1 with wallet_balance=18799.74000000, margin=0
2025-06-12 22:54:01,660 - INFO - orders - User data cache updated for user 1
2025-06-12 22:54:01,660 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 22:54:01,660 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 22:54:01,665 - INFO - orders - Fetched 0 open orders for user 1
2025-06-12 22:54:01,670 - INFO - orders - Fetched 4 pending orders for user 1
2025-06-12 22:54:01,671 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 4 pending orders
2025-06-12 22:54:01,671 - INFO - orders - Publishing order update for user 1
2025-06-12 22:54:01,673 - INFO - orders - Publishing user data update for user 1
2025-06-12 22:54:01,694 - INFO - orders - Publishing market data trigger
2025-06-12 22:56:16,395 - INFO - orders - Cancel pending order request received - Order ID: 4530201306, User ID: 1
2025-06-12 22:56:16,421 - INFO - orders - Generated cancel_id: 1097270994 for order 4530201306
2025-06-12 22:56:16,458 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-12 22:56:16,458 - INFO - orders - Non-Barclays user. Cancelling order 4530201306 immediately
2025-06-12 22:56:16,512 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 22:56:16,512 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 22:56:16,520 - INFO - orders - Fetched 0 open orders for user 1
2025-06-12 22:56:16,532 - INFO - orders - Fetched 3 pending orders for user 1
2025-06-12 22:56:16,545 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 3 pending orders
2025-06-12 22:56:28,662 - INFO - orders - Cancel pending order request received - Order ID: 8001568901, User ID: 1
2025-06-12 22:56:28,682 - INFO - orders - Generated cancel_id: 5940868689 for order 8001568901
2025-06-12 22:56:28,719 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-12 22:56:28,719 - INFO - orders - Non-Barclays user. Cancelling order 8001568901 immediately
2025-06-12 22:56:28,780 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 22:56:28,780 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 22:56:28,790 - INFO - orders - Fetched 0 open orders for user 1
2025-06-12 22:56:28,804 - INFO - orders - Fetched 2 pending orders for user 1
2025-06-12 22:56:28,819 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 2 pending orders
2025-06-12 22:56:41,026 - INFO - orders - Cancel pending order request received - Order ID: 3992424747, User ID: 1
2025-06-12 22:56:41,034 - INFO - orders - Generated cancel_id: 4161673524 for order 3992424747
2025-06-12 22:56:41,059 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-12 22:56:41,060 - INFO - orders - Non-Barclays user. Cancelling order 3992424747 immediately
2025-06-12 22:56:41,091 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 22:56:41,092 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 22:56:41,096 - INFO - orders - Fetched 0 open orders for user 1
2025-06-12 22:56:41,101 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-12 22:56:41,111 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 1 pending orders
2025-06-12 22:56:52,312 - INFO - orders - Cancel pending order request received - Order ID: 1507683451, User ID: 1
2025-06-12 22:56:52,343 - INFO - orders - Generated cancel_id: 3031024381 for order 1507683451
2025-06-12 22:56:52,385 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-12 22:56:52,385 - INFO - orders - Non-Barclays user. Cancelling order 1507683451 immediately
2025-06-12 22:56:52,455 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 22:56:52,455 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 22:56:52,460 - INFO - orders - Fetched 0 open orders for user 1
2025-06-12 22:56:52,464 - INFO - orders - Fetched 0 pending orders for user 1
2025-06-12 22:56:52,479 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 0 pending orders
2025-06-12 22:57:17,633 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.1
2025-06-12 22:57:17,660 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-12 22:57:17,661 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-12 22:57:17,661 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-12 22:57:18,747 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 0.1
2025-06-12 22:57:18,747 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-12 22:57:18,757 - INFO - orders - [ORDER_MARGIN_CALC] Got BUY price for AUDCAD from cache: 0.8836000000
2025-06-12 22:57:18,757 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-12 22:57:18,757 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 0.1 * 100000.00000000 = 10000.000000000
2025-06-12 22:57:18,757 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (10000.000000000 * 0.8836000000) / 100.00 = 88.36000000000000000 (rounded to 88.36)
2025-06-12 22:57:18,758 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-12 22:57:18,758 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 0.1 * 10.0000 = 1.00000
2025-06-12 22:57:18,758 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-12 22:57:18,758 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 88.36 CAD
2025-06-12 22:57:18,758 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 88.36 CAD to USD for margin for AUDCAD BUY order (user_id: 1, position: )
2025-06-12 22:57:18,758 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-12 22:57:18,768 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-12 22:57:18,768 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-12 22:57:18,768 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-12 22:57:18,807 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3642600000'), 'o': Decimal('1.3642000000')}
2025-06-12 22:57:18,807 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3642600000
2025-06-12 22:57:18,807 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 88.36 CAD / 1.3642600000 = 64.76771289930071980414290531 USD
2025-06-12 22:57:18,807 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 88.36 CAD -> 64.76771289930071980414290531 USD
2025-06-12 22:57:18,807 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=64.76771289930071980414290531, price=0.8836000000, contract_value=10000.000000000, commission=1.00
2025-06-12 22:57:18,808 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=1.00
2025-06-12 22:57:18,815 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-12 22:57:18,815 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-12 22:57:18,816 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-12 22:57:18,816 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=0.1, StoredMargin=64.76771289930071980414290531
2025-06-12 22:57:18,816 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=647.6771289930071980414290531
2025-06-12 22:57:18,816 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0.1, TotalSellQty=0, NetQty=0.1
2025-06-12 22:57:18,816 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('647.6771289930071980414290531')], HighestMarginPerLot=647.6771289930071980414290531
2025-06-12 22:57:18,816 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=64.77, ContributingOrders=1 (based on individual stored margins)
2025-06-12 22:57:18,816 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=64.77, AdditionalMargin=64.77
2025-06-12 22:57:18,822 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=64.77
2025-06-12 22:57:18,871 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '4285277098', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8836000000'), 'order_quantity': Decimal('0.1'), 'contract_value': Decimal('10000.000000000'), 'margin': Decimal('64.76771289930071980414290531'), 'commission': Decimal('1.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-12 22:57:18,930 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 64.77000000
2025-06-12 22:57:19,011 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-12 22:57:21,742 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-12 22:57:21,767 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 22:57:21,767 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 22:57:21,774 - INFO - orders - Fetched 1 open orders for user 1
2025-06-12 22:57:21,780 - INFO - orders - Fetched 0 pending orders for user 1
2025-06-12 22:57:21,796 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-06-12 23:29:49,494 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:31:31,793 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:31:33,019 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:31:33,020 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:31:33,020 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:31:33,023 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:31:37,349 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-12 23:32:35,981 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-12 23:33:59,566 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-12 23:36:20,817 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL_LIMIT, Quantity: 0.01
2025-06-12 23:36:20,842 - INFO - orders - Calculated contract_value for pending order: 1000.0000000000 (contract_size: 100000.00000000 * quantity: 0.01)
2025-06-12 23:36:20,856 - INFO - orders - [DEBUG] User data from cache: {'id': 1, 'email': 'dhanush777ss@gmail.com', 'account_number': '5O42G', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('18799.74000000'), 'margin': Decimal('64.77000000'), 'user_type': 'demo', 'first_name': None, 'last_name': None, 'country': None, 'phone_number': Decimal('8618025298')}
2025-06-12 23:36:20,857 - INFO - orders - [DEBUG] Group name: Group B
2025-06-12 23:36:20,867 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-06-12 23:36:20,867 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-06-12 23:36:20,868 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-06-12 23:36:20,868 - INFO - orders - User 1 is_barclays_live_user: False (user_type: demo, sending_orders_normalized: barclays)
2025-06-12 23:36:20,868 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '8318720332', 'order_company_name': 'AUDCAD', 'order_type': 'SELL_LIMIT', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.88315'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'open_time': None}
2025-06-12 23:36:20,868 - INFO - orders - Placing PENDING order: SELL_LIMIT for user 1 at price 0.88315
2025-06-12 23:36:20,977 - INFO - orders - Pending order 8318720332 added to Redis for non-Barclays user.
2025-06-12 23:36:20,993 - INFO - orders - User data cache updated for user 1 after placing pending order
2025-06-12 23:36:20,993 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 23:36:20,994 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 23:36:20,999 - INFO - orders - Fetched 1 open orders for user 1
2025-06-12 23:36:21,004 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-12 23:36:21,023 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 1 pending orders
2025-06-12 23:38:04,921 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL_LIMIT, Quantity: 0.01
2025-06-12 23:38:04,960 - INFO - orders - Calculated contract_value for pending order: 1000.0000000000 (contract_size: 100000.00000000 * quantity: 0.01)
2025-06-12 23:38:04,979 - INFO - orders - [DEBUG] User data from cache: {'id': 1, 'email': 'dhanush777ss@gmail.com', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'user_type': 'demo', 'account_number': '5O42G', 'wallet_balance': Decimal('18799.74000000'), 'margin': Decimal('64.77000000'), 'first_name': None, 'last_name': None, 'country': None, 'phone_number': Decimal('8618025298')}
2025-06-12 23:38:04,980 - INFO - orders - [DEBUG] Group name: Group B
2025-06-12 23:38:04,993 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-06-12 23:38:04,993 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-06-12 23:38:04,993 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-06-12 23:38:04,993 - INFO - orders - User 1 is_barclays_live_user: False (user_type: demo, sending_orders_normalized: barclays)
2025-06-12 23:38:04,993 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '5542258954', 'order_company_name': 'AUDCAD', 'order_type': 'SELL_LIMIT', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.88308'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'open_time': None}
2025-06-12 23:38:04,994 - INFO - orders - Placing PENDING order: SELL_LIMIT for user 1 at price 0.88308
2025-06-12 23:38:05,093 - INFO - orders - Pending order 5542258954 added to Redis for non-Barclays user.
2025-06-12 23:38:05,120 - INFO - orders - User data cache updated for user 1 after placing pending order
2025-06-12 23:38:05,120 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 23:38:05,120 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 23:38:05,129 - INFO - orders - Fetched 1 open orders for user 1
2025-06-12 23:38:05,145 - INFO - orders - Fetched 2 pending orders for user 1
2025-06-12 23:38:05,160 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 2 pending orders
2025-06-12 23:46:59,120 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:47:31,503 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:47:31,572 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:47:31,578 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:47:31,587 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:47:31,676 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:48:08,663 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:48:08,669 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:48:08,670 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:48:08,671 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:48:08,768 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:49:01,044 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:49:01,055 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:49:01,065 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:49:01,079 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:49:01,109 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:49:27,952 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:49:27,954 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:49:27,956 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:49:27,965 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:49:28,071 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:49:39,476 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:50:38,204 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:50:38,204 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:50:38,206 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:50:38,249 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:50:38,273 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:50:38,303 - INFO - orders - Application starting up - Orders logging initialized
2025-06-12 23:50:40,007 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-12 23:51:51,025 - INFO - orders - Cancel pending order request received - Order ID: 8318720332, User ID: 1
2025-06-12 23:51:51,073 - INFO - orders - Generated cancel_id: 5323898779 for order 8318720332
2025-06-12 23:51:51,139 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-12 23:51:51,140 - INFO - orders - Non-Barclays user. Cancelling order 8318720332 immediately
2025-06-12 23:51:51,260 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 23:51:51,261 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 23:51:51,280 - INFO - orders - Fetched 1 open orders for user 1
2025-06-12 23:51:51,310 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-12 23:51:51,336 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 1 pending orders
2025-06-12 23:51:54,827 - INFO - orders - Cancel pending order request received - Order ID: 5542258954, User ID: 1
2025-06-12 23:51:54,837 - INFO - orders - Generated cancel_id: 3946358285 for order 5542258954
2025-06-12 23:51:54,874 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-12 23:51:54,874 - INFO - orders - Non-Barclays user. Cancelling order 5542258954 immediately
2025-06-12 23:51:54,908 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 23:51:54,908 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 23:51:54,915 - INFO - orders - Fetched 1 open orders for user 1
2025-06-12 23:51:54,920 - INFO - orders - Fetched 0 pending orders for user 1
2025-06-12 23:51:54,943 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-06-12 23:52:08,288 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.01
2025-06-12 23:52:08,308 - INFO - orders - Calculated contract_value for pending order: 1000.0000000000 (contract_size: 100000.00000000 * quantity: 0.01)
2025-06-12 23:52:08,331 - INFO - orders - [DEBUG] User data from cache: {'id': 1, 'email': 'dhanush777ss@gmail.com', 'account_number': '5O42G', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('18799.74000000'), 'margin': Decimal('64.77000000'), 'user_type': 'demo', 'first_name': None, 'last_name': None, 'country': None, 'phone_number': Decimal('8618025298')}
2025-06-12 23:52:08,331 - INFO - orders - [DEBUG] Group name: Group B
2025-06-12 23:52:08,548 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-06-12 23:52:08,549 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-06-12 23:52:08,550 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-06-12 23:52:08,550 - INFO - orders - User 1 is_barclays_live_user: False (user_type: demo, sending_orders_normalized: barclays)
2025-06-12 23:52:08,550 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '9074712462', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.8823'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'open_time': None}
2025-06-12 23:52:08,555 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8823
2025-06-12 23:52:08,691 - INFO - orders - Pending order 9074712462 added to Redis for non-Barclays user or demo user.
2025-06-12 23:52:08,714 - INFO - orders - User data cache updated for user 1 after placing pending order
2025-06-12 23:52:08,714 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 23:52:08,715 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 23:52:08,721 - INFO - orders - Fetched 1 open orders for user 1
2025-06-12 23:52:08,727 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-12 23:52:08,742 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 1 pending orders
2025-06-12 23:57:09,131 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.01
2025-06-12 23:57:09,246 - INFO - orders - Calculated contract_value for pending order: 1000.0000000000 (contract_size: 100000.00000000 * quantity: 0.01)
2025-06-12 23:57:09,324 - INFO - orders - [DEBUG] User data from cache: {'id': 1, 'email': 'dhanush777ss@gmail.com', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'user_type': 'demo', 'account_number': '5O42G', 'wallet_balance': Decimal('18799.74000000'), 'margin': Decimal('64.77000000'), 'first_name': None, 'last_name': None, 'country': None, 'phone_number': Decimal('8618025298')}
2025-06-12 23:57:09,325 - INFO - orders - [DEBUG] Group name: Group B
2025-06-12 23:57:09,383 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-06-12 23:57:09,383 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-06-12 23:57:09,383 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-06-12 23:57:09,383 - INFO - orders - User 1 is_barclays_live_user: False (user_type: demo, sending_orders_normalized: barclays)
2025-06-12 23:57:09,384 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '8315671577', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.88238'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'open_time': None}
2025-06-12 23:57:09,385 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.88238
2025-06-12 23:57:09,763 - INFO - orders - Pending order 8315671577 added to Redis for non-Barclays user or demo user.
2025-06-12 23:57:10,398 - INFO - orders - User data cache updated for user 1 after placing pending order
2025-06-12 23:57:10,398 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-12 23:57:10,399 - INFO - orders - Using order model: DemoUserOrder
2025-06-12 23:57:10,518 - INFO - orders - Fetched 1 open orders for user 1
2025-06-12 23:57:10,535 - INFO - orders - Fetched 2 pending orders for user 1
2025-06-12 23:57:10,643 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 2 pending orders
2025-06-12 23:59:36,862 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-13 00:02:00,060 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.01
2025-06-13 00:02:00,102 - INFO - orders - Calculated contract_value for pending order: 1000.0000000000 (contract_size: 100000.00000000 * quantity: 0.01)
2025-06-13 00:02:00,163 - INFO - orders - [DEBUG] User data from cache: {'id': 1, 'email': 'dhanush777ss@gmail.com', 'account_number': '5O42G', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('18799.74000000'), 'margin': Decimal('64.77000000'), 'user_type': 'demo', 'first_name': None, 'last_name': None, 'country': None, 'phone_number': Decimal('8618025298')}
2025-06-13 00:02:00,164 - INFO - orders - [DEBUG] Group name: Group B
2025-06-13 00:02:00,219 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-06-13 00:02:00,220 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-06-13 00:02:00,220 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-06-13 00:02:00,221 - INFO - orders - User 1 is_barclays_live_user: False (user_type: demo, sending_orders_normalized: barclays)
2025-06-13 00:02:00,222 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '9179366117', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.88315'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'open_time': None}
2025-06-13 00:02:00,222 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.88315
2025-06-13 00:02:00,338 - INFO - orders - Pending order 9179366117 added to Redis for non-Barclays user or demo user.
2025-06-13 00:02:00,410 - INFO - orders - User data cache updated for user 1 after placing pending order
2025-06-13 00:02:00,411 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-13 00:02:00,411 - INFO - orders - Using order model: DemoUserOrder
2025-06-13 00:02:00,427 - INFO - orders - Fetched 1 open orders for user 1
2025-06-13 00:02:00,442 - INFO - orders - Fetched 3 pending orders for user 1
2025-06-13 00:02:00,487 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 3 pending orders
2025-06-13 00:15:04,835 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 00:15:04,855 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 00:15:04,862 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 00:15:04,863 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 00:15:04,865 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 00:15:50,866 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 00:15:50,896 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 00:15:51,145 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 00:15:51,519 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 00:15:51,691 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 00:16:33,607 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 00:16:33,633 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 00:16:33,642 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 00:16:33,645 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 00:16:33,668 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 00:16:38,919 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 00:17:06,446 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-13 00:17:27,124 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-13 00:17:27,443 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-13 00:17:27,443 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-13 00:17:27,444 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-13 00:17:28,396 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 0.01
2025-06-13 00:17:28,397 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-13 00:17:28,452 - INFO - orders - [ORDER_MARGIN_CALC] Got BUY price for AUDCAD from cache: 0.8832700000
2025-06-13 00:17:28,467 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-13 00:17:28,485 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 0.01 * 100000.00000000 = 1000.0000000000
2025-06-13 00:17:28,485 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (1000.0000000000 * 0.8832700000) / 100.00 = 8.832700000000000000 (rounded to 8.83)
2025-06-13 00:17:28,497 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-13 00:17:28,497 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 0.01 * 10.0000 = 0.100000
2025-06-13 00:17:28,498 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-13 00:17:28,498 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 8.83 CAD
2025-06-13 00:17:28,498 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.83 CAD to USD for margin for AUDCAD BUY order (user_id: 4, position: )
2025-06-13 00:17:28,498 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-13 00:17:28,527 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-13 00:17:28,527 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-13 00:17:28,528 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-13 00:17:28,635 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3628700000'), 'o': Decimal('1.3628400000')}
2025-06-13 00:17:28,636 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3628700000
2025-06-13 00:17:28,637 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.83 CAD / 1.3628700000 = 6.478974517011894017771320816 USD
2025-06-13 00:17:28,637 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 8.83 CAD -> 6.478974517011894017771320816 USD
2025-06-13 00:17:28,638 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=6.478974517011894017771320816, price=0.8832700000, contract_value=1000.0000000000, commission=0.10
2025-06-13 00:17:28,638 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=0.10
2025-06-13 00:17:28,658 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 2
2025-06-13 00:17:28,658 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 48): Type=BUY, Qty=2.00000000, StoredMargin=1301.76269403
2025-06-13 00:17:28,658 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.881347015
2025-06-13 00:17:28,659 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 49): Type=BUY, Qty=2.00000000, StoredMargin=1301.88472416
2025-06-13 00:17:28,659 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=650.94236208
2025-06-13 00:17:28,659 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=4.00000000, TotalSellQty=0, NetQty=4.00000000
2025-06-13 00:17:28,659 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.881347015'), Decimal('650.94236208')], HighestMarginPerLot=650.94236208
2025-06-13 00:17:28,660 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=2603.77, ContributingOrders=2 (based on individual stored margins)
2025-06-13 00:17:28,660 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 3
2025-06-13 00:17:28,661 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 48): Type=BUY, Qty=2.00000000, StoredMargin=1301.76269403
2025-06-13 00:17:28,661 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.881347015
2025-06-13 00:17:28,661 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 49): Type=BUY, Qty=2.00000000, StoredMargin=1301.88472416
2025-06-13 00:17:28,661 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=650.94236208
2025-06-13 00:17:28,662 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: NEW_UNSAVED): Type=BUY, Qty=0.01, StoredMargin=6.478974517011894017771320816
2025-06-13 00:17:28,662 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=647.8974517011894017771320816
2025-06-13 00:17:28,662 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=4.01000000, TotalSellQty=0, NetQty=4.01000000
2025-06-13 00:17:28,665 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.881347015'), Decimal('650.94236208'), Decimal('647.8974517011894017771320816')], HighestMarginPerLot=650.94236208
2025-06-13 00:17:28,666 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=2610.28, ContributingOrders=3 (based on individual stored margins)
2025-06-13 00:17:28,666 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=2603.77, MarginAfter=2610.28, AdditionalMargin=6.51
2025-06-13 00:17:28,685 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '9333507960', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8832700000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': Decimal('6.478974517011894017771320816'), 'commission': Decimal('0.10'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-13 00:17:28,827 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 2603.77000000
2025-06-13 00:17:28,917 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-13 00:17:32,488 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-13 00:17:42,163 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '9333507960', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88327000'), 'order_quantity': Decimal('0.01000000'), 'contract_value': Decimal('1000.00000000'), 'margin': Decimal('6.47897452'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-13 00:17:42,455 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 9333507960 (order_status=PROCESSING, margin not updated in DB)
2025-06-13 00:17:42,676 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-13 00:17:42,678 - INFO - orders - Using order model: UserOrder
2025-06-13 00:17:42,730 - INFO - orders - Fetched 2 open orders for user 4
2025-06-13 00:17:42,832 - INFO - orders - Fetched 7 pending orders for user 4
2025-06-13 00:17:42,931 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 7 pending orders
2025-06-13 01:23:42,512 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 01:44:32,300 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 01:57:27,053 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-13 02:09:57,650 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 02:12:35,590 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-13 02:13:55,457 - INFO - orders - Cancel pending order request received - Order ID: 9074712462, User ID: 1
2025-06-13 02:13:55,510 - INFO - orders - Generated cancel_id: 3546891465 for order 9074712462
2025-06-13 02:13:55,523 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-13 02:13:55,523 - INFO - orders - Non-Barclays user. Cancelling order 9074712462 immediately
2025-06-13 02:13:55,657 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-13 02:13:55,657 - INFO - orders - Using order model: DemoUserOrder
2025-06-13 02:13:55,673 - INFO - orders - Fetched 1 open orders for user 1
2025-06-13 02:13:55,687 - INFO - orders - Fetched 2 pending orders for user 1
2025-06-13 02:13:55,693 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 2 pending orders
2025-06-13 02:13:59,353 - INFO - orders - Cancel pending order request received - Order ID: 8315671577, User ID: 1
2025-06-13 02:13:59,371 - INFO - orders - Generated cancel_id: 3201475667 for order 8315671577
2025-06-13 02:13:59,378 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-13 02:13:59,378 - INFO - orders - Non-Barclays user. Cancelling order 8315671577 immediately
2025-06-13 02:13:59,415 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-13 02:13:59,415 - INFO - orders - Using order model: DemoUserOrder
2025-06-13 02:13:59,424 - INFO - orders - Fetched 1 open orders for user 1
2025-06-13 02:13:59,430 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-13 02:13:59,435 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 1 pending orders
2025-06-13 02:14:02,712 - INFO - orders - Cancel pending order request received - Order ID: 9179366117, User ID: 1
2025-06-13 02:14:02,734 - INFO - orders - Generated cancel_id: 2253915372 for order 9179366117
2025-06-13 02:14:02,748 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-13 02:14:02,748 - INFO - orders - Non-Barclays user. Cancelling order 9179366117 immediately
2025-06-13 02:14:02,809 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-13 02:14:02,809 - INFO - orders - Using order model: DemoUserOrder
2025-06-13 02:14:02,820 - INFO - orders - Fetched 1 open orders for user 1
2025-06-13 02:14:02,826 - INFO - orders - Fetched 0 pending orders for user 1
2025-06-13 02:14:02,829 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-06-13 02:14:05,496 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-13 02:28:05,381 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 02:29:06,493 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 02:30:17,707 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 02:31:34,188 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 02:44:13,498 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 02:48:17,938 - INFO - orders-log - [TEST] Testing orders logger
2025-06-13 02:49:39,240 - INFO - orders-log - Application starting up - Orders logging initialized
2025-06-13 02:50:38,957 - INFO - orders-log - Application starting up - Orders logging initialized
2025-06-13 02:56:59,187 - INFO - orders-log - Application starting up - Orders logging initialized
2025-06-13 03:00:33,078 - INFO - orders-log - Application starting up - Orders logging initialized
2025-06-13 03:00:33,078 - INFO - orders-log - Application starting up - Orders logging initialized
2025-06-13 03:01:08,181 - INFO - orders-log - Application starting up - Orders logging initialized
2025-06-13 03:01:08,185 - INFO - orders-log - Application starting up - Orders logging initialized
2025-06-13 03:01:30,231 - INFO - orders-log - Application starting up - Orders logging initialized
2025-06-13 03:01:30,232 - INFO - orders-log - Application starting up - Orders logging initialized
2025-06-13 03:05:33,070 - INFO - orders-log - Application starting up - Orders logging initialized
2025-06-13 03:05:33,071 - INFO - orders-log - Application starting up - Orders logging initialized
2025-06-13 03:05:43,830 - INFO - orders-log - [NOAUTH_DEBUG_PUBLIC_CHECK] No-auth public debug endpoint accessed
2025-06-13 03:06:12,928 - INFO - orders-log - [NOAUTH_DEBUG_CHECK_ORDER] Checking order 1234567890 with user_type demo
2025-06-13 03:06:12,928 - INFO - orders-log - [NOAUTH_DEBUG_CHECK_ORDER] Using order model: DemoUserOrder
2025-06-13 03:06:12,945 - ERROR - orders-log - [NOAUTH_DEBUG_CHECK_ORDER] Order 1234567890 not found in the database
2025-06-13 03:06:21,877 - INFO - orders-log - [NOAUTH_DEBUG_CHECK_ORDER] Checking order 1234567890 with user_type demo
2025-06-13 03:06:21,877 - INFO - orders-log - [NOAUTH_DEBUG_CHECK_ORDER] Using order model: DemoUserOrder
2025-06-13 03:06:21,910 - ERROR - orders-log - [NOAUTH_DEBUG_CHECK_ORDER] Order 1234567890 not found in the database
2025-06-13 03:07:04,591 - INFO - orders-log - [NOAUTH_DEBUG_TEST_STOPLOSS] Testing stoploss for order 1234567890
2025-06-13 03:07:04,593 - INFO - orders-log - [NOAUTH_DEBUG_TEST_STOPLOSS] Using order model: DemoUserOrder
2025-06-13 03:07:04,593 - INFO - orders-log - [NOAUTH_DEBUG_TEST_STOPLOSS] Searching for order with ID 1234567890 for user 1
2025-06-13 03:07:04,603 - ERROR - orders-log - [NOAUTH_DEBUG_TEST_STOPLOSS] Order 1234567890 not found for user 1 using model DemoUserOrder
2025-06-13 03:07:04,608 - ERROR - orders-log - [NOAUTH_DEBUG_TEST_STOPLOSS] Order 1234567890 does not exist in the database at all
2025-06-13 03:08:55,046 - INFO - orders-log - Application starting up - Orders logging initialized
2025-06-13 03:08:55,047 - INFO - orders-log - Application starting up - Orders logging initialized
2025-06-13 03:09:49,424 - INFO - orders-log - Application starting up - Orders logging initialized
2025-06-13 03:15:12,188 - INFO - orders-log - Application starting up - Orders logging initialized
2025-06-13 03:16:57,076 - INFO - orders-log - [ADD_STOPLOSS] Request received - Order ID: 4285277098, User ID: 1
2025-06-13 03:16:57,077 - INFO - orders-log - [ADD_STOPLOSS] Request details: symbol=AUDCAD, user_type=demo, order_status=OPEN, stop_loss=0.86
2025-06-13 03:16:57,077 - INFO - orders-log - [ADD_STOPLOSS] Using order model: DemoUserOrder
2025-06-13 03:16:57,077 - INFO - orders-log - [ADD_STOPLOSS] Searching for order with ID 4285277098 for user 1
2025-06-13 03:16:57,085 - INFO - orders-log - [ADD_STOPLOSS] Found order 4285277098 with status OPEN
2025-06-13 03:16:57,104 - INFO - orders-log - [ADD_STOPLOSS] Generated stoploss_id: 3933351693 for order 4285277098
2025-06-13 03:16:57,111 - INFO - orders-log - [ADD_STOPLOSS] User group_name: Group B
2025-06-13 03:16:57,115 - INFO - orders-log - [ADD_STOPLOSS] Group sending_orders setting: barclays
2025-06-13 03:16:57,116 - INFO - orders-log - [ADD_STOPLOSS] User 1 is_barclays_live_user: False
2025-06-13 03:16:57,116 - INFO - orders-log - [ADD_STOPLOSS] Non-Barclays user. Adding stoploss to order 4285277098 immediately
2025-06-13 03:16:57,240 - INFO - orders-log - [ADD_STOPLOSS] Order updated with stop_loss=0.86 and stoploss_id=3933351693
2025-06-13 03:16:57,240 - INFO - orders-log - Starting update_user_static_orders for user 1, user_type demo
2025-06-13 03:16:57,240 - INFO - orders-log - Using order model: DemoUserOrder
2025-06-13 03:16:57,274 - INFO - orders-log - Fetched 1 open orders for user 1
2025-06-13 03:16:57,294 - INFO - orders-log - Fetched 0 pending orders for user 1
2025-06-13 03:16:57,300 - INFO - orders-log - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-06-13 03:16:57,300 - INFO - orders-log - [ADD_STOPLOSS] Static orders cache updated for user 1
2025-06-13 03:16:57,306 - INFO - orders-log - [ADD_STOPLOSS] Published order and user data updates to WebSocket
2025-06-13 03:19:27,018 - INFO - orders-log - Cancel stoploss request received - Order ID: 4285277098, User ID: 1
2025-06-13 03:19:27,053 - INFO - orders-log - User 1 is_barclays_live_user: False
2025-06-13 03:19:27,091 - INFO - orders-log - Starting update_user_static_orders for user 1, user_type demo
2025-06-13 03:19:27,091 - INFO - orders-log - Using order model: DemoUserOrder
2025-06-13 03:19:27,105 - INFO - orders-log - Fetched 1 open orders for user 1
2025-06-13 03:19:27,116 - INFO - orders-log - Fetched 0 pending orders for user 1
2025-06-13 03:19:27,120 - INFO - orders-log - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-06-13 03:32:32,663 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 03:33:41,664 - INFO - orders - Add stoploss request received - Order ID: 4285277098, User ID: 1
2025-06-13 03:33:41,686 - INFO - orders - Generated stoploss_id: 1167974345 for order 4285277098
2025-06-13 03:33:41,695 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-13 03:33:41,695 - INFO - orders - Non-Barclays user. Adding stoploss to order 4285277098 immediately
2025-06-13 03:33:41,752 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-13 03:33:41,753 - INFO - orders - Using order model: DemoUserOrder
2025-06-13 03:33:41,764 - INFO - orders - Fetched 1 open orders for user 1
2025-06-13 03:33:41,780 - INFO - orders - Fetched 0 pending orders for user 1
2025-06-13 03:33:41,787 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-06-13 03:34:21,536 - INFO - orders - Cancel stoploss request received - Order ID: 4285277098, User ID: 1
2025-06-13 03:34:21,600 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-13 03:34:21,642 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-13 03:34:21,643 - INFO - orders - Using order model: DemoUserOrder
2025-06-13 03:34:21,666 - INFO - orders - Fetched 1 open orders for user 1
2025-06-13 03:34:21,685 - INFO - orders - Fetched 0 pending orders for user 1
2025-06-13 03:34:21,692 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-06-13 03:37:41,889 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 03:38:23,237 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 0.1
2025-06-13 03:38:23,243 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-13 03:38:23,243 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-13 03:38:23,243 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-13 03:38:23,849 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 0.1
2025-06-13 03:38:23,849 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-13 03:38:23,857 - INFO - orders - [ORDER_MARGIN_CALC] No price in cache for AUDCAD, checking raw market data
2025-06-13 03:38:23,857 - INFO - orders - [ORDER_MARGIN_CALC] Raw market data for AUDCAD: {'b': '0.8820300000', 'o': '0.8819700000'}
2025-06-13 03:38:23,857 - INFO - orders - [ORDER_MARGIN_CALC] Using raw ask price for AUDCAD: 0 (raw: 0)
2025-06-13 03:38:23,857 - INFO - orders - [ORDER_MARGIN_CALC] Using order_price 0.88 as fallback for AUDCAD BUY order
2025-06-13 03:38:23,857 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-13 03:38:23,857 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 0.1 * 100000.00000000 = 10000.000000000
2025-06-13 03:38:23,857 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (10000.000000000 * 0.88) / 100.00 = 88.000000000 (rounded to 88.00)
2025-06-13 03:38:23,858 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-13 03:38:23,858 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 0.1 * 10.0000 = 1.00000
2025-06-13 03:38:23,858 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-13 03:38:23,858 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 88.00 CAD
2025-06-13 03:38:23,858 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 88.00 CAD to USD for margin for AUDCAD BUY order (user_id: 4, position: )
2025-06-13 03:38:23,858 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-13 03:38:23,862 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-13 03:38:23,862 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-13 03:38:23,862 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-13 03:38:23,865 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3630300000'), 'o': Decimal('1.3630300000')}
2025-06-13 03:38:23,865 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3630300000
2025-06-13 03:38:23,865 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 88.00 CAD / 1.3630300000 = 64.56204192130767481273339545 USD
2025-06-13 03:38:23,865 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 88.00 CAD -> 64.56204192130767481273339545 USD
2025-06-13 03:38:23,865 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=64.56204192130767481273339545, price=0.88, contract_value=10000.000000000, commission=1.00
2025-06-13 03:38:23,866 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=1.00
2025-06-13 03:38:23,871 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 2
2025-06-13 03:38:23,871 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 48): Type=BUY, Qty=2.00000000, StoredMargin=1301.76269403
2025-06-13 03:38:23,871 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.881347015
2025-06-13 03:38:23,871 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 49): Type=BUY, Qty=2.00000000, StoredMargin=1301.88472416
2025-06-13 03:38:23,871 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=650.94236208
2025-06-13 03:38:23,871 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=4.00000000, TotalSellQty=0, NetQty=4.00000000
2025-06-13 03:38:23,871 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.881347015'), Decimal('650.94236208')], HighestMarginPerLot=650.94236208
2025-06-13 03:38:23,871 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=2603.77, ContributingOrders=2 (based on individual stored margins)
2025-06-13 03:38:23,871 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 3
2025-06-13 03:38:23,871 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 48): Type=BUY, Qty=2.00000000, StoredMargin=1301.76269403
2025-06-13 03:38:23,871 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.881347015
2025-06-13 03:38:23,871 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 49): Type=BUY, Qty=2.00000000, StoredMargin=1301.88472416
2025-06-13 03:38:23,871 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=650.94236208
2025-06-13 03:38:23,871 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: NEW_UNSAVED): Type=BUY, Qty=0.1, StoredMargin=64.56204192130767481273339545
2025-06-13 03:38:23,871 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=645.6204192130767481273339545
2025-06-13 03:38:23,872 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=4.10000000, TotalSellQty=0, NetQty=4.10000000
2025-06-13 03:38:23,872 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.881347015'), Decimal('650.94236208'), Decimal('645.6204192130767481273339545')], HighestMarginPerLot=650.94236208
2025-06-13 03:38:23,872 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=2668.86, ContributingOrders=3 (based on individual stored margins)
2025-06-13 03:38:23,872 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=2603.77, MarginAfter=2668.86, AdditionalMargin=65.09
2025-06-13 03:38:23,878 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4: OriginalMarginDB=2603.77000000, CalculatedNewMargin=2668.86
2025-06-13 03:38:23,932 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '1920987108', 'order_status': 'OPEN', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.88'), 'order_quantity': Decimal('0.1'), 'contract_value': Decimal('10000.000000000'), 'margin': Decimal('64.56204192130767481273339545'), 'commission': Decimal('1.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-13 03:38:23,971 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 2668.86000000
2025-06-13 03:38:23,992 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-13 03:38:24,159 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-13 03:38:24,161 - INFO - orders - Starting update_user_static_orders for user 4, user_type demo
2025-06-13 03:38:24,161 - INFO - orders - Using order model: DemoUserOrder
2025-06-13 03:38:24,167 - INFO - orders - Fetched 0 open orders for user 4
2025-06-13 03:38:24,173 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-13 03:38:24,174 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-13 03:55:31,852 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 03:55:45,966 - INFO - orders - Close order request received - Order ID: 1920987108, User ID: 4, User Type: live
2025-06-13 03:55:45,967 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-13 03:55:45,967 - ERROR - orders - Unauthorized user_id specification - Current user: 4, Requested user: 1
2025-06-13 03:55:45,968 - ERROR - orders - Error in close_order endpoint: 403: Not authorized to specify user_id.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 884, in close_order
    raise HTTPException(status_code=403, detail="Not authorized to specify user_id.")
fastapi.exceptions.HTTPException: 403: Not authorized to specify user_id.
2025-06-13 03:55:57,839 - INFO - orders - Close order request received - Order ID: 1920987108, User ID: 4, User Type: live
2025-06-13 03:55:57,839 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-13 03:55:57,839 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x00000210D8CE6210>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-13 03:55:57,840 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-13 03:55:57,840 - INFO - orders - Request to close order 1920987108 for user 4 (User) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-13 03:55:57,871 - INFO - orders - User group: [<app.database.models.Group object at 0x00000210D8B502F0>, <app.database.models.Group object at 0x00000210D8CE5D10>, <app.database.models.Group object at 0x00000210D8CE42D0>, <app.database.models.Group object at 0x00000210D8CAC9D0>, <app.database.models.Group object at 0x00000210D8CAD0F0>, <app.database.models.Group object at 0x00000210D8E48950>, <app.database.models.Group object at 0x00000210D8BF5AE0>, <app.database.models.Group object at 0x00000210D8BF4E20>, <app.database.models.Group object at 0x00000210D8BF47C0>, <app.database.models.Group object at 0x00000210D8BF5BF0>, <app.database.models.Group object at 0x00000210D8BF5D00>, <app.database.models.Group object at 0x00000210D8BF5E10>, <app.database.models.Group object at 0x00000210D8BF5F20>, <app.database.models.Group object at 0x00000210D8BF6030>, <app.database.models.Group object at 0x00000210D8BF6140>, <app.database.models.Group object at 0x00000210D8BF6250>, <app.database.models.Group object at 0x00000210D8BF6360>, <app.database.models.Group object at 0x00000210D8BF6470>, <app.database.models.Group object at 0x00000210D8BF6580>, <app.database.models.Group object at 0x00000210D8BF6690>, <app.database.models.Group object at 0x00000210D8BF67A0>, <app.database.models.Group object at 0x00000210D8BF68B0>, <app.database.models.Group object at 0x00000210D8BF69C0>, <app.database.models.Group object at 0x00000210D8BF6AD0>, <app.database.models.Group object at 0x00000210D8BF6BE0>, <app.database.models.Group object at 0x00000210D8BF6CF0>, <app.database.models.Group object at 0x00000210D8BF6E00>, <app.database.models.Group object at 0x00000210D8BF6F10>, <app.database.models.Group object at 0x00000210D8BF7020>, <app.database.models.Group object at 0x00000210D8BF7130>, <app.database.models.Group object at 0x00000210D8BF7240>, <app.database.models.Group object at 0x00000210D8BF7350>, <app.database.models.Group object at 0x00000210D8BF7460>, <app.database.models.Group object at 0x00000210D8BF7570>, <app.database.models.Group object at 0x00000210D8BF7680>, <app.database.models.Group object at 0x00000210D8BF7790>, <app.database.models.Group object at 0x00000210D8BF78A0>, <app.database.models.Group object at 0x00000210D8BF79B0>, <app.database.models.Group object at 0x00000210D8BF7AC0>, <app.database.models.Group object at 0x00000210D8BF7BD0>, <app.database.models.Group object at 0x00000210D8BF7CE0>, <app.database.models.Group object at 0x00000210D8BF7DF0>, <app.database.models.Group object at 0x00000210D8BF7F00>, <app.database.models.Group object at 0x00000210D8E8C050>, <app.database.models.Group object at 0x00000210D8E8C160>, <app.database.models.Group object at 0x00000210D8E8C270>, <app.database.models.Group object at 0x00000210D8E8C380>, <app.database.models.Group object at 0x00000210D8E8C490>, <app.database.models.Group object at 0x00000210D8E8C5A0>, <app.database.models.Group object at 0x00000210D8E8C6B0>, <app.database.models.Group object at 0x00000210D8E8C7C0>, <app.database.models.Group object at 0x00000210D8E8C8D0>, <app.database.models.Group object at 0x00000210D8E8C9E0>, <app.database.models.Group object at 0x00000210D8E8CAF0>, <app.database.models.Group object at 0x00000210D8E8CC00>, <app.database.models.Group object at 0x00000210D8E8CD10>, <app.database.models.Group object at 0x00000210D8E8CE20>, <app.database.models.Group object at 0x00000210D8E8CF30>, <app.database.models.Group object at 0x00000210D8E8D040>, <app.database.models.Group object at 0x00000210D8E8D150>, <app.database.models.Group object at 0x00000210D8E8D260>, <app.database.models.Group object at 0x00000210D8E8D370>, <app.database.models.Group object at 0x00000210D8E8D480>, <app.database.models.Group object at 0x00000210D8E8D590>, <app.database.models.Group object at 0x00000210D8E8D6A0>, <app.database.models.Group object at 0x00000210D8E8D7B0>, <app.database.models.Group object at 0x00000210D8E8D8C0>, <app.database.models.Group object at 0x00000210D8E8D9D0>, <app.database.models.Group object at 0x00000210D8E8DAE0>, <app.database.models.Group object at 0x00000210D8E8DBF0>, <app.database.models.Group object at 0x00000210D8E8DD00>, <app.database.models.Group object at 0x00000210D8E8DE10>, <app.database.models.Group object at 0x00000210D8E8DF20>, <app.database.models.Group object at 0x00000210D8E8E030>, <app.database.models.Group object at 0x00000210D8E8E140>, <app.database.models.Group object at 0x00000210D8E8E250>, <app.database.models.Group object at 0x00000210D8E8E360>, <app.database.models.Group object at 0x00000210D8E8E470>, <app.database.models.Group object at 0x00000210D8E8E580>]
2025-06-13 03:55:57,872 - ERROR - orders - Error processing close order: name 'user_type' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 908, in close_order
    is_barclays_live_user = (user_type == 'live' and sending_orders_normalized == 'barclays')
                             ^^^^^^^^^
NameError: name 'user_type' is not defined
2025-06-13 03:55:57,879 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: name 'user_type' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 908, in close_order
    is_barclays_live_user = (user_type == 'live' and sending_orders_normalized == 'barclays')
                             ^^^^^^^^^
NameError: name 'user_type' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1249, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: name 'user_type' is not defined
2025-06-13 03:56:16,914 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 0.1
2025-06-13 03:56:16,928 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-13 03:56:16,929 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-13 03:56:16,929 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-13 03:56:17,640 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 0.1
2025-06-13 03:56:17,641 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-13 03:56:17,657 - INFO - orders - [ORDER_MARGIN_CALC] No price in cache for AUDCAD, checking raw market data
2025-06-13 03:56:17,658 - INFO - orders - [ORDER_MARGIN_CALC] Raw market data for AUDCAD: {'b': '0.8819100000', 'o': '0.8818600000'}
2025-06-13 03:56:17,658 - INFO - orders - [ORDER_MARGIN_CALC] Using raw ask price for AUDCAD: 0 (raw: 0)
2025-06-13 03:56:17,658 - INFO - orders - [ORDER_MARGIN_CALC] Using order_price 0.88 as fallback for AUDCAD BUY order
2025-06-13 03:56:17,658 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-13 03:56:17,658 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 0.1 * 100000.00000000 = 10000.000000000
2025-06-13 03:56:17,659 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (10000.000000000 * 0.88) / 100.00 = 88.000000000 (rounded to 88.00)
2025-06-13 03:56:17,659 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-13 03:56:17,660 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 0.1 * 10.0000 = 1.00000
2025-06-13 03:56:17,660 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-13 03:56:17,660 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 88.00 CAD
2025-06-13 03:56:17,660 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 88.00 CAD to USD for margin for AUDCAD BUY order (user_id: 4, position: )
2025-06-13 03:56:17,660 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-13 03:56:17,664 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-13 03:56:17,664 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-13 03:56:17,664 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-13 03:56:17,667 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3630300000'), 'o': Decimal('1.3630300000')}
2025-06-13 03:56:17,667 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3630300000
2025-06-13 03:56:17,667 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 88.00 CAD / 1.3630300000 = 64.56204192130767481273339545 USD
2025-06-13 03:56:17,667 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 88.00 CAD -> 64.56204192130767481273339545 USD
2025-06-13 03:56:17,667 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=64.56204192130767481273339545, price=0.88, contract_value=10000.000000000, commission=1.00
2025-06-13 03:56:17,668 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=1.00
2025-06-13 03:56:17,679 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 3
2025-06-13 03:56:17,680 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 48): Type=BUY, Qty=2.00000000, StoredMargin=1301.76269403
2025-06-13 03:56:17,680 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.881347015
2025-06-13 03:56:17,680 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 49): Type=BUY, Qty=2.00000000, StoredMargin=1301.88472416
2025-06-13 03:56:17,681 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=650.94236208
2025-06-13 03:56:17,681 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: 67): Type=BUY, Qty=0.10000000, StoredMargin=64.56204192
2025-06-13 03:56:17,681 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=645.6204192
2025-06-13 03:56:17,681 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=4.10000000, TotalSellQty=0, NetQty=4.10000000
2025-06-13 03:56:17,681 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.881347015'), Decimal('650.94236208'), Decimal('645.6204192')], HighestMarginPerLot=650.94236208
2025-06-13 03:56:17,681 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=2668.86, ContributingOrders=3 (based on individual stored margins)
2025-06-13 03:56:17,682 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 4
2025-06-13 03:56:17,682 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 48): Type=BUY, Qty=2.00000000, StoredMargin=1301.76269403
2025-06-13 03:56:17,682 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.881347015
2025-06-13 03:56:17,683 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 49): Type=BUY, Qty=2.00000000, StoredMargin=1301.88472416
2025-06-13 03:56:17,683 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=650.94236208
2025-06-13 03:56:17,683 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: 67): Type=BUY, Qty=0.10000000, StoredMargin=64.56204192
2025-06-13 03:56:17,683 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=645.6204192
2025-06-13 03:56:17,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4 (ID: NEW_UNSAVED): Type=BUY, Qty=0.1, StoredMargin=64.56204192130767481273339545
2025-06-13 03:56:17,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4: MarginPerLot=645.6204192130767481273339545
2025-06-13 03:56:17,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=4.20000000, TotalSellQty=0, NetQty=4.20000000
2025-06-13 03:56:17,685 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.881347015'), Decimal('650.94236208'), Decimal('645.6204192'), Decimal('645.6204192130767481273339545')], HighestMarginPerLot=650.94236208
2025-06-13 03:56:17,685 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=2733.96, ContributingOrders=4 (based on individual stored margins)
2025-06-13 03:56:17,685 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=2668.86, MarginAfter=2733.96, AdditionalMargin=65.10
2025-06-13 03:56:17,702 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '1732810752', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.88'), 'order_quantity': Decimal('0.1'), 'contract_value': Decimal('10000.000000000'), 'margin': Decimal('64.56204192130767481273339545'), 'commission': Decimal('1.00'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-13 03:56:17,843 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 2668.86000000
2025-06-13 03:56:17,889 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-13 03:56:18,087 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-13 03:56:18,347 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '1732810752', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88000000'), 'order_quantity': Decimal('0.10000000'), 'contract_value': Decimal('10000.00000000'), 'margin': Decimal('64.56204192'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-13 03:56:18,667 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 1732810752 (order_status=PROCESSING, margin not updated in DB)
2025-06-13 03:56:18,672 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-13 03:56:18,672 - INFO - orders - Using order model: UserOrder
2025-06-13 03:56:18,682 - INFO - orders - Fetched 3 open orders for user 4
2025-06-13 03:56:18,696 - INFO - orders - Fetched 7 pending orders for user 4
2025-06-13 03:56:18,706 - INFO - orders - Updated static orders cache for user 4 with 3 open orders and 7 pending orders
2025-06-13 03:56:29,351 - INFO - orders - Close order request received - Order ID: 1920987108, User ID: 4, User Type: live
2025-06-13 03:56:29,352 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-13 03:56:29,352 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x00000210D8CE7250>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-13 03:56:29,352 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-13 03:56:29,352 - INFO - orders - Request to close order 1920987108 for user 4 (User) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-13 03:56:29,382 - INFO - orders - User group: [<app.database.models.Group object at 0x00000210D8BF5480>, <app.database.models.Group object at 0x00000210D8BF4E20>, <app.database.models.Group object at 0x00000210D8BF48D0>, <app.database.models.Group object at 0x00000210D8BF5150>, <app.database.models.Group object at 0x00000210D8BF6030>, <app.database.models.Group object at 0x00000210D8BF5F20>, <app.database.models.Group object at 0x00000210D8BF6580>, <app.database.models.Group object at 0x00000210D8BF6140>, <app.database.models.Group object at 0x00000210D8BF68B0>, <app.database.models.Group object at 0x00000210D8BF69C0>, <app.database.models.Group object at 0x00000210D8BF6AD0>, <app.database.models.Group object at 0x00000210D8BF6690>, <app.database.models.Group object at 0x00000210D8BF5E10>, <app.database.models.Group object at 0x00000210D8BF6BE0>, <app.database.models.Group object at 0x00000210D8BF6CF0>, <app.database.models.Group object at 0x00000210D8BF6E00>, <app.database.models.Group object at 0x00000210D8BF6F10>, <app.database.models.Group object at 0x00000210D8BF7020>, <app.database.models.Group object at 0x00000210D8BF7130>, <app.database.models.Group object at 0x00000210D8BF7240>, <app.database.models.Group object at 0x00000210D8BF7350>, <app.database.models.Group object at 0x00000210D8BF7460>, <app.database.models.Group object at 0x00000210D8BF7570>, <app.database.models.Group object at 0x00000210D8BF7680>, <app.database.models.Group object at 0x00000210D8BF7790>, <app.database.models.Group object at 0x00000210D8BF78A0>, <app.database.models.Group object at 0x00000210D8BF79B0>, <app.database.models.Group object at 0x00000210D8BF7AC0>, <app.database.models.Group object at 0x00000210D8BF7BD0>, <app.database.models.Group object at 0x00000210D8BF7CE0>, <app.database.models.Group object at 0x00000210D8BF7DF0>, <app.database.models.Group object at 0x00000210D8BF7F00>, <app.database.models.Group object at 0x00000210D8BF57B0>, <app.database.models.Group object at 0x00000210D8BF58C0>, <app.database.models.Group object at 0x00000210D8BF59D0>, <app.database.models.Group object at 0x00000210D8F38050>, <app.database.models.Group object at 0x00000210D8F38160>, <app.database.models.Group object at 0x00000210D8F38270>, <app.database.models.Group object at 0x00000210D8F38380>, <app.database.models.Group object at 0x00000210D8F38490>, <app.database.models.Group object at 0x00000210D8F385A0>, <app.database.models.Group object at 0x00000210D8F386B0>, <app.database.models.Group object at 0x00000210D8F387C0>, <app.database.models.Group object at 0x00000210D8F388D0>, <app.database.models.Group object at 0x00000210D8F389E0>, <app.database.models.Group object at 0x00000210D8F38AF0>, <app.database.models.Group object at 0x00000210D8F38C00>, <app.database.models.Group object at 0x00000210D8F38D10>, <app.database.models.Group object at 0x00000210D8F38E20>, <app.database.models.Group object at 0x00000210D8F38F30>, <app.database.models.Group object at 0x00000210D8F39040>, <app.database.models.Group object at 0x00000210D8F39150>, <app.database.models.Group object at 0x00000210D8F39260>, <app.database.models.Group object at 0x00000210D8F39370>, <app.database.models.Group object at 0x00000210D8F39480>, <app.database.models.Group object at 0x00000210D8F39590>, <app.database.models.Group object at 0x00000210D8F396A0>, <app.database.models.Group object at 0x00000210D8F397B0>, <app.database.models.Group object at 0x00000210D8F398C0>, <app.database.models.Group object at 0x00000210D8F399D0>, <app.database.models.Group object at 0x00000210D8F39AE0>, <app.database.models.Group object at 0x00000210D8F39BF0>, <app.database.models.Group object at 0x00000210D8F39D00>, <app.database.models.Group object at 0x00000210D8F39E10>, <app.database.models.Group object at 0x00000210D8F39F20>, <app.database.models.Group object at 0x00000210D8F3A030>, <app.database.models.Group object at 0x00000210D8F3A140>, <app.database.models.Group object at 0x00000210D8F3A250>, <app.database.models.Group object at 0x00000210D8F3A360>, <app.database.models.Group object at 0x00000210D8F3A470>, <app.database.models.Group object at 0x00000210D8F3A580>, <app.database.models.Group object at 0x00000210D8F3A690>, <app.database.models.Group object at 0x00000210D8F3A7A0>, <app.database.models.Group object at 0x00000210D8F3A8B0>, <app.database.models.Group object at 0x00000210D8F3A9C0>, <app.database.models.Group object at 0x00000210D8F3AAD0>, <app.database.models.Group object at 0x00000210D8F3ABE0>, <app.database.models.Group object at 0x00000210D8F3ACF0>, <app.database.models.Group object at 0x00000210D8F3AE00>]
2025-06-13 03:56:29,382 - ERROR - orders - Error processing close order: name 'user_type' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 908, in close_order
    is_barclays_live_user = (user_type == 'live' and sending_orders_normalized == 'barclays')
                             ^^^^^^^^^
NameError: name 'user_type' is not defined
2025-06-13 03:56:29,390 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: name 'user_type' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 908, in close_order
    is_barclays_live_user = (user_type == 'live' and sending_orders_normalized == 'barclays')
                             ^^^^^^^^^
NameError: name 'user_type' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1249, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: name 'user_type' is not defined
2025-06-13 03:59:32,505 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 03:59:35,342 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 05:44:59,570 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 05:47:45,805 - INFO - orders - Add stoploss request received - Order ID: 4285277098, User ID: 1
2025-06-13 05:47:45,832 - INFO - orders - Generated stoploss_id: 7632451557 for order 4285277098
2025-06-13 05:47:45,843 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-13 05:47:45,843 - INFO - orders - Non-Barclays user. Adding stoploss to order 4285277098 immediately
2025-06-13 05:47:45,939 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-13 05:47:45,939 - INFO - orders - Using order model: DemoUserOrder
2025-06-13 05:47:45,965 - INFO - orders - Fetched 1 open orders for user 1
2025-06-13 05:47:45,977 - INFO - orders - Fetched 0 pending orders for user 1
2025-06-13 05:47:45,984 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-06-13 05:49:05,688 - INFO - orders - Cancel stoploss request received - Order ID: 4285277098, User ID: 1
2025-06-13 05:49:05,761 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-13 05:49:05,806 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-13 05:49:05,807 - INFO - orders - Using order model: DemoUserOrder
2025-06-13 05:49:05,822 - INFO - orders - Fetched 1 open orders for user 1
2025-06-13 05:49:05,834 - INFO - orders - Fetched 0 pending orders for user 1
2025-06-13 05:49:05,844 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-06-13 05:50:31,781 - INFO - orders - Add stoploss request received - Order ID: 4285277098, User ID: 1
2025-06-13 05:50:31,806 - INFO - orders - Generated stoploss_id: 4617390000 for order 4285277098
2025-06-13 05:50:31,831 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-13 05:50:31,831 - INFO - orders - Non-Barclays user. Adding stoploss to order 4285277098 immediately
2025-06-13 05:50:31,871 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-13 05:50:31,872 - INFO - orders - Using order model: DemoUserOrder
2025-06-13 05:50:31,908 - INFO - orders - Fetched 1 open orders for user 1
2025-06-13 05:50:31,945 - INFO - orders - Fetched 0 pending orders for user 1
2025-06-13 05:50:31,950 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 0 pending orders
2025-06-13 05:55:02,000 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 06:09:28,854 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 06:09:46,082 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-13 06:10:12,534 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.01
2025-06-13 06:10:12,578 - INFO - orders - Calculated contract_value for pending order: 1000.0000000000 (contract_size: 100000.00000000 * quantity: 0.01)
2025-06-13 06:10:12,582 - INFO - orders - [DEBUG] User data from cache: {'id': 1, 'email': 'dhanush777ss@gmail.com', 'account_number': '5O42G', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('18799.74000000'), 'margin': Decimal('64.77000000'), 'user_type': 'demo', 'first_name': None, 'last_name': None, 'country': None, 'phone_number': Decimal('8618025298')}
2025-06-13 06:10:12,584 - INFO - orders - [DEBUG] Group name: Group B
2025-06-13 06:10:12,588 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-06-13 06:10:12,588 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-06-13 06:10:12,589 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-06-13 06:10:12,589 - INFO - orders - User 1 is_barclays_live_user: False (user_type: demo, sending_orders_normalized: barclays)
2025-06-13 06:10:12,610 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '1587516032', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.88155'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '6566015118', 'takeprofit_id': '5713074580', 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'open_time': None}
2025-06-13 06:10:12,611 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.88155
2025-06-13 06:10:12,755 - INFO - orders - Pending order 1587516032 added to Redis for non-Barclays user or demo user.
2025-06-13 06:10:12,768 - INFO - orders - User data cache updated for user 1 after placing pending order
2025-06-13 06:10:12,768 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-13 06:10:12,768 - INFO - orders - Using order model: DemoUserOrder
2025-06-13 06:10:12,780 - INFO - orders - Fetched 1 open orders for user 1
2025-06-13 06:10:12,792 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-13 06:10:12,802 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 1 pending orders
2025-06-13 06:14:51,530 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 06:14:58,530 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-13 06:15:10,701 - INFO - orders - Close order request received - Order ID: 4285277098, User ID: 1, User Type: demo
2025-06-13 06:15:10,705 - INFO - orders - Close request details - Price: 0.88153, Type: BUY, Symbol: AUDCAD
2025-06-13 06:15:10,706 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001DEC0E2E780>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'demo_user_favorites', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-13 06:15:10,706 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-13 06:15:10,706 - INFO - orders - Request to close order 4285277098 for user 1 (DemoUser) with price 0.88153. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-13 06:15:10,791 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-13 06:15:10,885 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-13 06:15:10,886 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 182): Type=BUY, Qty=0.10000000, StoredMargin=64.76771290
2025-06-13 06:15:10,886 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=647.677129
2025-06-13 06:15:10,886 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0.10000000, TotalSellQty=0, NetQty=0.10000000
2025-06-13 06:15:10,886 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('647.677129')], HighestMarginPerLot=647.677129
2025-06-13 06:15:10,886 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=64.77, ContributingOrders=1 (based on individual stored margins)
2025-06-13 06:15:10,886 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-13 06:15:10,887 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-13 06:15:10,982 - INFO - orders - Existing entry commission for order 4285277098: 1.00000000
2025-06-13 06:15:10,983 - INFO - orders - Commission calculation for order 4285277098: entry=1.00000000, exit=1.000000000000, total=2.00
2025-06-13 06:15:10,983 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -20.700000000000000000000000 CAD to USD for PnL on Close (user_id: 1, position: 4285277098)
2025-06-13 06:15:10,983 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-13 06:15:11,000 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-13 06:15:11,001 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-13 06:15:11,001 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-13 06:15:11,023 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3624500000'), 'o': Decimal('1.3624200000')}
2025-06-13 06:15:11,024 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3624500000
2025-06-13 06:15:11,024 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -20.700000000000000000000000 CAD / 1.3624500000 = -15.19321809974677969833755367 USD
2025-06-13 06:15:11,447 - INFO - orders - AFTER COMMIT: User 1 wallet_balance=18782.55000000, margin=0
2025-06-13 06:15:11,451 - INFO - orders - Setting user data cache for user 1 with wallet_balance=18782.55000000, margin=0
2025-06-13 06:15:11,462 - INFO - orders - User data cache updated for user 1
2025-06-13 06:15:11,462 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-13 06:15:11,462 - INFO - orders - Using order model: DemoUserOrder
2025-06-13 06:15:11,474 - INFO - orders - Fetched 0 open orders for user 1
2025-06-13 06:15:11,498 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-13 06:15:11,517 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 1 pending orders
2025-06-13 06:15:11,518 - INFO - orders - Publishing order update for user 1
2025-06-13 06:15:11,541 - INFO - orders - Publishing user data update for user 1
2025-06-13 06:15:11,550 - INFO - orders - Publishing market data trigger
2025-06-13 06:21:19,483 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 06:22:41,068 - INFO - orders - Cancel pending order request received - Order ID: 1587516032, User ID: 1
2025-06-13 06:22:41,089 - INFO - orders - Generated cancel_id: 7842737648 for order 1587516032
2025-06-13 06:22:41,108 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-13 06:22:41,109 - INFO - orders - Non-Barclays user. Cancelling order 1587516032 immediately
2025-06-13 06:22:41,210 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-13 06:22:41,211 - INFO - orders - Using order model: DemoUserOrder
2025-06-13 06:22:41,235 - INFO - orders - Fetched 0 open orders for user 1
2025-06-13 06:22:41,261 - INFO - orders - Fetched 0 pending orders for user 1
2025-06-13 06:22:41,268 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 0 pending orders
2025-06-13 06:22:55,350 - INFO - orders - Cancel pending order request received - Order ID: 1587516032, User ID: 1
2025-06-13 06:22:55,362 - WARNING - orders - Cannot cancel order 1587516032 with status CANCELLED. Only PENDING orders can be cancelled.
2025-06-13 06:22:55,363 - ERROR - orders - Error cancelling pending order: 400: Only PENDING orders can be cancelled
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1671, in cancel_pending_order
    raise HTTPException(status_code=400, detail="Only PENDING orders can be cancelled")
fastapi.exceptions.HTTPException: 400: Only PENDING orders can be cancelled
2025-06-13 06:23:01,846 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-13 06:23:25,346 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-13 06:24:26,035 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.01
2025-06-13 06:24:26,094 - INFO - orders - Calculated contract_value for pending order: 1000.0000000000 (contract_size: 100000.00000000 * quantity: 0.01)
2025-06-13 06:24:26,098 - INFO - orders - [DEBUG] User data from cache: {'id': 1, 'email': 'dhanush777ss@gmail.com', 'account_number': '5O42G', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('18782.55000000'), 'margin': Decimal('0E-8'), 'user_type': 'demo', 'first_name': None, 'last_name': None, 'country': None, 'phone_number': Decimal('8618025298')}
2025-06-13 06:24:26,098 - INFO - orders - [DEBUG] Group name: Group B
2025-06-13 06:24:26,103 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-06-13 06:24:26,103 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-06-13 06:24:26,103 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-06-13 06:24:26,103 - INFO - orders - User 1 is_barclays_live_user: False (user_type: demo, sending_orders_normalized: barclays)
2025-06-13 06:24:26,131 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '8154218097', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.88163'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '2498639333', 'takeprofit_id': '2977934408', 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'open_time': None}
2025-06-13 06:24:26,132 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.88163
2025-06-13 06:24:26,293 - INFO - orders - Pending order 8154218097 added to Redis for non-Barclays user or demo user.
2025-06-13 06:24:26,306 - INFO - orders - User data cache updated for user 1 after placing pending order
2025-06-13 06:24:26,306 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-13 06:24:26,307 - INFO - orders - Using order model: DemoUserOrder
2025-06-13 06:24:26,324 - INFO - orders - Fetched 0 open orders for user 1
2025-06-13 06:24:26,334 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-13 06:24:26,341 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 1 pending orders
2025-06-13 06:24:35,172 - INFO - orders - Cancel pending order request received - Order ID: 8154218097, User ID: 1
2025-06-13 06:24:35,251 - INFO - orders - Generated cancel_id: 9904634436 for order 8154218097
2025-06-13 06:24:35,267 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-13 06:24:35,268 - INFO - orders - Non-Barclays user. Cancelling order 8154218097 immediately
2025-06-13 06:24:35,346 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-13 06:24:35,347 - INFO - orders - Using order model: DemoUserOrder
2025-06-13 06:24:35,365 - INFO - orders - Fetched 0 open orders for user 1
2025-06-13 06:24:35,380 - INFO - orders - Fetched 0 pending orders for user 1
2025-06-13 06:24:35,393 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 0 pending orders
2025-06-13 06:24:53,480 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.01
2025-06-13 06:24:53,524 - INFO - orders - Calculated contract_value for pending order: 1000.0000000000 (contract_size: 100000.00000000 * quantity: 0.01)
2025-06-13 06:24:53,532 - INFO - orders - [DEBUG] User data from cache: {'id': 1, 'email': 'dhanush777ss@gmail.com', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'user_type': 'demo', 'account_number': '5O42G', 'wallet_balance': Decimal('18782.55000000'), 'margin': Decimal('0E-8'), 'first_name': None, 'last_name': None, 'country': None, 'phone_number': Decimal('8618025298')}
2025-06-13 06:24:53,532 - INFO - orders - [DEBUG] Group name: Group B
2025-06-13 06:24:53,536 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-06-13 06:24:53,536 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-06-13 06:24:53,536 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-06-13 06:24:53,537 - INFO - orders - User 1 is_barclays_live_user: False (user_type: demo, sending_orders_normalized: barclays)
2025-06-13 06:24:53,554 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '3885372803', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.88153'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '4987903303', 'takeprofit_id': '4312853268', 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'open_time': None}
2025-06-13 06:24:53,556 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.88153
2025-06-13 06:24:53,662 - INFO - orders - Pending order 3885372803 added to Redis for non-Barclays user or demo user.
2025-06-13 06:24:53,675 - INFO - orders - User data cache updated for user 1 after placing pending order
2025-06-13 06:24:53,676 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-13 06:24:53,676 - INFO - orders - Using order model: DemoUserOrder
2025-06-13 06:24:53,697 - INFO - orders - Fetched 0 open orders for user 1
2025-06-13 06:24:53,720 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-13 06:24:53,735 - INFO - orders - Updated static orders cache for user 1 with 0 open orders and 1 pending orders
2025-06-13 06:26:13,992 - INFO - orders - Application starting up - Orders logging initialized
2025-06-13 06:26:39,504 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-13 06:26:39,513 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-13 06:26:39,513 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-13 06:26:39,513 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-13 06:26:40,272 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 0.01
2025-06-13 06:26:40,272 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-13 06:26:40,275 - INFO - orders - [ORDER_MARGIN_CALC] Got BUY price for AUDCAD from cache: 0.8815500000
2025-06-13 06:26:40,275 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-13 06:26:40,276 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 0.01 * 100000.00000000 = 1000.0000000000
2025-06-13 06:26:40,276 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (1000.0000000000 * 0.8815500000) / 100.00 = 8.815500000000000000 (rounded to 8.82)
2025-06-13 06:26:40,276 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-13 06:26:40,276 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 0.01 * 10.0000 = 0.100000
2025-06-13 06:26:40,276 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-13 06:26:40,276 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 8.82 CAD
2025-06-13 06:26:40,276 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.82 CAD to USD for margin for AUDCAD BUY order (user_id: 1, position: )
2025-06-13 06:26:40,277 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-13 06:26:40,279 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-13 06:26:40,279 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-13 06:26:40,279 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-13 06:26:40,283 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3628100000'), 'o': Decimal('1.3627900000')}
2025-06-13 06:26:40,283 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3628100000
2025-06-13 06:26:40,283 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.82 CAD / 1.3628100000 = 6.471921984722741981640874370 USD
2025-06-13 06:26:40,283 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 8.82 CAD -> 6.471921984722741981640874370 USD
2025-06-13 06:26:40,283 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=6.471921984722741981640874370, price=0.8815500000, contract_value=1000.0000000000, commission=0.10
2025-06-13 06:26:40,283 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=0.10
2025-06-13 06:26:40,291 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-13 06:26:40,292 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-13 06:26:40,292 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-13 06:26:40,292 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=0.01, StoredMargin=6.471921984722741981640874370
2025-06-13 06:26:40,292 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=647.1921984722741981640874370
2025-06-13 06:26:40,292 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0.01, TotalSellQty=0, NetQty=0.01
2025-06-13 06:26:40,292 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('647.1921984722741981640874370')], HighestMarginPerLot=647.1921984722741981640874370
2025-06-13 06:26:40,292 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=6.47, ContributingOrders=1 (based on individual stored margins)
2025-06-13 06:26:40,293 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=6.47, AdditionalMargin=6.47
2025-06-13 06:26:40,300 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=6.47
2025-06-13 06:26:40,377 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '2719904846', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8815500000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': Decimal('6.471921984722741981640874370'), 'commission': Decimal('0.10'), 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'OPEN'}
2025-06-13 06:26:40,441 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 6.47000000
2025-06-13 06:26:40,482 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-13 06:26:40,922 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-13 06:26:40,925 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-13 06:26:40,925 - INFO - orders - Using order model: DemoUserOrder
2025-06-13 06:26:40,931 - INFO - orders - Fetched 1 open orders for user 1
2025-06-13 06:26:40,969 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-13 06:26:40,972 - INFO - orders - Updated static orders cache for user 1 with 1 open orders and 1 pending orders
2025-06-14 01:10:10,517 - INFO - orders - Application starting up - Orders logging initialized
2025-06-14 01:15:16,884 - INFO - orders - Application starting up - Orders logging initialized
2025-06-14 01:16:51,195 - INFO - orders - Application starting up - Orders logging initialized
2025-06-14 01:20:56,927 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 0.1
2025-06-14 01:20:56,936 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-14 01:20:56,936 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-14 01:20:56,936 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-14 01:20:57,923 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 0.1
2025-06-14 01:20:57,923 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-14 01:20:57,942 - INFO - orders - [ORDER_MARGIN_CALC] No price in cache for AUDCAD, checking raw market data
2025-06-14 01:20:57,942 - INFO - orders - [ORDER_MARGIN_CALC] Raw market data for AUDCAD: {'b': '0.8815400000', 'o': '0.8809900000'}
2025-06-14 01:20:57,942 - INFO - orders - [ORDER_MARGIN_CALC] Using raw ask price for AUDCAD: 0 (raw: 0)
2025-06-14 01:20:57,943 - INFO - orders - [ORDER_MARGIN_CALC] Using order_price 0.88 as fallback for AUDCAD BUY order
2025-06-14 01:20:57,943 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-14 01:20:57,943 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 0.1 * 100000.00000000 = 10000.000000000
2025-06-14 01:20:57,944 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (10000.000000000 * 0.88) / 100.00 = 88.000000000 (rounded to 88.00)
2025-06-14 01:20:57,944 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-14 01:20:57,944 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 0.1 * 10.0000 = 1.00000
2025-06-14 01:20:57,944 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-14 01:20:57,944 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 88.00 CAD
2025-06-14 01:20:57,945 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 88.00 CAD to USD for margin for AUDCAD BUY order (user_id: 4, position: )
2025-06-14 01:20:57,945 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-14 01:20:57,949 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-14 01:20:57,949 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-14 01:20:57,949 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-14 01:20:57,953 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3623100000'), 'o': Decimal('1.3623000000')}
2025-06-14 01:20:57,953 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3623100000
2025-06-14 01:20:57,954 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 88.00 CAD / 1.3623100000 = 64.59616386872297788315434813 USD
2025-06-14 01:20:57,954 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 88.00 CAD -> 64.59616386872297788315434813 USD
2025-06-14 01:20:57,954 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=64.59616386872297788315434813, price=0.88, contract_value=10000.000000000, commission=1.00
2025-06-14 01:20:57,954 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=1.00
2025-06-14 01:20:57,968 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 3
2025-06-14 01:20:57,969 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 48): Type=BUY, Qty=2.00000000, StoredMargin=1301.76269403
2025-06-14 01:20:57,969 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.881347015
2025-06-14 01:20:57,969 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 49): Type=BUY, Qty=2.00000000, StoredMargin=1301.88472416
2025-06-14 01:20:57,970 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=650.94236208
2025-06-14 01:20:57,970 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: 67): Type=BUY, Qty=0.10000000, StoredMargin=64.56204192
2025-06-14 01:20:57,970 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=645.6204192
2025-06-14 01:20:57,970 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=4.10000000, TotalSellQty=0, NetQty=4.10000000
2025-06-14 01:20:57,970 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.881347015'), Decimal('650.94236208'), Decimal('645.6204192')], HighestMarginPerLot=650.94236208
2025-06-14 01:20:57,971 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=2668.86, ContributingOrders=3 (based on individual stored margins)
2025-06-14 01:20:57,971 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 4
2025-06-14 01:20:57,971 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 48): Type=BUY, Qty=2.00000000, StoredMargin=1301.76269403
2025-06-14 01:20:57,971 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.881347015
2025-06-14 01:20:57,971 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 49): Type=BUY, Qty=2.00000000, StoredMargin=1301.88472416
2025-06-14 01:20:57,971 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=650.94236208
2025-06-14 01:20:57,971 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: 67): Type=BUY, Qty=0.10000000, StoredMargin=64.56204192
2025-06-14 01:20:57,972 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=645.6204192
2025-06-14 01:20:57,972 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4 (ID: NEW_UNSAVED): Type=BUY, Qty=0.1, StoredMargin=64.59616386872297788315434813
2025-06-14 01:20:57,972 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4: MarginPerLot=645.9616386872297788315434813
2025-06-14 01:20:57,972 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=4.20000000, TotalSellQty=0, NetQty=4.20000000
2025-06-14 01:20:57,972 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.881347015'), Decimal('650.94236208'), Decimal('645.6204192'), Decimal('645.9616386872297788315434813')], HighestMarginPerLot=650.94236208
2025-06-14 01:20:57,972 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=2733.96, ContributingOrders=4 (based on individual stored margins)
2025-06-14 01:20:57,972 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=2668.86, MarginAfter=2733.96, AdditionalMargin=65.10
2025-06-14 01:20:57,990 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4: OriginalMarginDB=2668.86000000, CalculatedNewMargin=2733.96
2025-06-14 01:20:58,081 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '5084526449', 'order_status': 'OPEN', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.88'), 'order_quantity': Decimal('0.1'), 'contract_value': Decimal('10000.000000000'), 'margin': Decimal('64.59616386872297788315434813'), 'commission': Decimal('1.00'), 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'OPEN'}
2025-06-14 01:20:58,130 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 2733.96000000
2025-06-14 01:20:58,148 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-14 01:20:58,404 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-14 01:20:58,408 - INFO - orders - Starting update_user_static_orders for user 4, user_type demo
2025-06-14 01:20:58,408 - INFO - orders - Using order model: DemoUserOrder
2025-06-14 01:20:58,415 - INFO - orders - Fetched 0 open orders for user 4
2025-06-14 01:20:58,424 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-14 01:20:58,427 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-14 01:23:03,059 - INFO - orders - Close order request received - Order ID: 1920987108, User ID: 4, User Type: live
2025-06-14 01:23:03,060 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-14 01:23:03,060 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x00000222C2229310>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-14 01:23:03,060 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-14 01:23:03,060 - INFO - orders - Request to close order 1920987108 for user 4 (User) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-14 01:23:03,090 - INFO - orders - User group: [<app.database.models.Group object at 0x00000222C21C6900>, <app.database.models.Group object at 0x00000222C222B610>, <app.database.models.Group object at 0x00000222C249D6D0>, <app.database.models.Group object at 0x00000222C24C4D60>, <app.database.models.Group object at 0x00000222C24C4B00>, <app.database.models.Group object at 0x00000222C26243B0>, <app.database.models.Group object at 0x00000222C21D3240>, <app.database.models.Group object at 0x00000222C21D08D0>, <app.database.models.Group object at 0x00000222C21D2BE0>, <app.database.models.Group object at 0x00000222C21D3350>, <app.database.models.Group object at 0x00000222C21D3460>, <app.database.models.Group object at 0x00000222C21D2CF0>, <app.database.models.Group object at 0x00000222C21D3570>, <app.database.models.Group object at 0x00000222C21D3680>, <app.database.models.Group object at 0x00000222C21D3790>, <app.database.models.Group object at 0x00000222C21D38A0>, <app.database.models.Group object at 0x00000222C21D39B0>, <app.database.models.Group object at 0x00000222C21D3AC0>, <app.database.models.Group object at 0x00000222C21D3BD0>, <app.database.models.Group object at 0x00000222C21D3CE0>, <app.database.models.Group object at 0x00000222C21D3DF0>, <app.database.models.Group object at 0x00000222C21D3F00>, <app.database.models.Group object at 0x00000222C2640050>, <app.database.models.Group object at 0x00000222C2640160>, <app.database.models.Group object at 0x00000222C2640270>, <app.database.models.Group object at 0x00000222C2640380>, <app.database.models.Group object at 0x00000222C2640490>, <app.database.models.Group object at 0x00000222C26405A0>, <app.database.models.Group object at 0x00000222C26406B0>, <app.database.models.Group object at 0x00000222C26407C0>, <app.database.models.Group object at 0x00000222C26408D0>, <app.database.models.Group object at 0x00000222C26409E0>, <app.database.models.Group object at 0x00000222C2640AF0>, <app.database.models.Group object at 0x00000222C2640C00>, <app.database.models.Group object at 0x00000222C2640D10>, <app.database.models.Group object at 0x00000222C2640E20>, <app.database.models.Group object at 0x00000222C2640F30>, <app.database.models.Group object at 0x00000222C2641040>, <app.database.models.Group object at 0x00000222C2641150>, <app.database.models.Group object at 0x00000222C2641260>, <app.database.models.Group object at 0x00000222C2641370>, <app.database.models.Group object at 0x00000222C2641480>, <app.database.models.Group object at 0x00000222C2641590>, <app.database.models.Group object at 0x00000222C26416A0>, <app.database.models.Group object at 0x00000222C26417B0>, <app.database.models.Group object at 0x00000222C26418C0>, <app.database.models.Group object at 0x00000222C26419D0>, <app.database.models.Group object at 0x00000222C2641AE0>, <app.database.models.Group object at 0x00000222C2641BF0>, <app.database.models.Group object at 0x00000222C2641D00>, <app.database.models.Group object at 0x00000222C2641E10>, <app.database.models.Group object at 0x00000222C2641F20>, <app.database.models.Group object at 0x00000222C2642030>, <app.database.models.Group object at 0x00000222C2642140>, <app.database.models.Group object at 0x00000222C2642250>, <app.database.models.Group object at 0x00000222C2642360>, <app.database.models.Group object at 0x00000222C2642470>, <app.database.models.Group object at 0x00000222C2642580>, <app.database.models.Group object at 0x00000222C2642690>, <app.database.models.Group object at 0x00000222C26427A0>, <app.database.models.Group object at 0x00000222C26428B0>, <app.database.models.Group object at 0x00000222C26429C0>, <app.database.models.Group object at 0x00000222C2642AD0>, <app.database.models.Group object at 0x00000222C2642BE0>, <app.database.models.Group object at 0x00000222C2642CF0>, <app.database.models.Group object at 0x00000222C2642E00>, <app.database.models.Group object at 0x00000222C2642F10>, <app.database.models.Group object at 0x00000222C2643020>, <app.database.models.Group object at 0x00000222C2643130>, <app.database.models.Group object at 0x00000222C2643240>, <app.database.models.Group object at 0x00000222C2643350>, <app.database.models.Group object at 0x00000222C2643460>, <app.database.models.Group object at 0x00000222C2643570>, <app.database.models.Group object at 0x00000222C2643680>, <app.database.models.Group object at 0x00000222C2643790>, <app.database.models.Group object at 0x00000222C26438A0>, <app.database.models.Group object at 0x00000222C26439B0>, <app.database.models.Group object at 0x00000222C2643AC0>, <app.database.models.Group object at 0x00000222C2643BD0>]
2025-06-14 01:23:03,095 - ERROR - orders - Error processing close order: name 'user_type' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 912, in close_order
    is_barclays_live_user = (user_type == 'live' and sending_orders_normalized == 'barclays')
                             ^^^^^^^^^
NameError: name 'user_type' is not defined
2025-06-14 01:23:03,108 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: name 'user_type' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 912, in close_order
    is_barclays_live_user = (user_type == 'live' and sending_orders_normalized == 'barclays')
                             ^^^^^^^^^
NameError: name 'user_type' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1253, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: name 'user_type' is not defined
2025-06-14 01:24:10,644 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-14 01:25:15,576 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-14 01:28:15,474 - INFO - orders - Close order request received - Order ID: 1920987108, User ID: 4, User Type: live
2025-06-14 01:28:15,475 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-14 01:28:15,476 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x00000222C249DF90>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-14 01:28:15,476 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-14 01:28:15,476 - INFO - orders - Request to close order 1920987108 for user 4 (User) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-14 01:28:15,519 - INFO - orders - User group: [<app.database.models.Group object at 0x00000222C26AE7A0>, <app.database.models.Group object at 0x00000222C26AD480>, <app.database.models.Group object at 0x00000222C26ADE10>, <app.database.models.Group object at 0x00000222C26AE8B0>, <app.database.models.Group object at 0x00000222C26AE9C0>, <app.database.models.Group object at 0x00000222C26AEAD0>, <app.database.models.Group object at 0x00000222C26AEBE0>, <app.database.models.Group object at 0x00000222C26AECF0>, <app.database.models.Group object at 0x00000222C26AEE00>, <app.database.models.Group object at 0x00000222C26AEF10>, <app.database.models.Group object at 0x00000222C26AF020>, <app.database.models.Group object at 0x00000222C26AF130>, <app.database.models.Group object at 0x00000222C26AF240>, <app.database.models.Group object at 0x00000222C26AF350>, <app.database.models.Group object at 0x00000222C26AF460>, <app.database.models.Group object at 0x00000222C26AF570>, <app.database.models.Group object at 0x00000222C26AF680>, <app.database.models.Group object at 0x00000222C26AF790>, <app.database.models.Group object at 0x00000222C26AF8A0>, <app.database.models.Group object at 0x00000222C26AF9B0>, <app.database.models.Group object at 0x00000222C26AFAC0>, <app.database.models.Group object at 0x00000222C26AFBD0>, <app.database.models.Group object at 0x00000222C26AFCE0>, <app.database.models.Group object at 0x00000222C26AFDF0>, <app.database.models.Group object at 0x00000222C26AFF00>, <app.database.models.Group object at 0x00000222C26AC8D0>, <app.database.models.Group object at 0x00000222C26AC490>, <app.database.models.Group object at 0x00000222C26AC5A0>, <app.database.models.Group object at 0x00000222C26AD260>, <app.database.models.Group object at 0x00000222C26AC270>, <app.database.models.Group object at 0x00000222C26AC6B0>, <app.database.models.Group object at 0x00000222C26AC7C0>, <app.database.models.Group object at 0x00000222C26AD040>, <app.database.models.Group object at 0x00000222C26ACF30>, <app.database.models.Group object at 0x00000222C26ACD10>, <app.database.models.Group object at 0x00000222C26ACE20>, <app.database.models.Group object at 0x00000222C26AC9E0>, <app.database.models.Group object at 0x00000222C26ACAF0>, <app.database.models.Group object at 0x00000222C26AD150>, <app.database.models.Group object at 0x00000222C26AD8C0>, <app.database.models.Group object at 0x00000222C26ADAE0>, <app.database.models.Group object at 0x00000222C26AC050>, <app.database.models.Group object at 0x00000222C26AC160>, <app.database.models.Group object at 0x00000222C26ACC00>, <app.database.models.Group object at 0x00000222C26AE030>, <app.database.models.Group object at 0x00000222C26ADD00>, <app.database.models.Group object at 0x00000222C26ADF20>, <app.database.models.Group object at 0x00000222C2713130>, <app.database.models.Group object at 0x00000222C2712F10>, <app.database.models.Group object at 0x00000222C2710380>, <app.database.models.Group object at 0x00000222C2710270>, <app.database.models.Group object at 0x00000222C2710490>, <app.database.models.Group object at 0x00000222C2711040>, <app.database.models.Group object at 0x00000222C27107C0>, <app.database.models.Group object at 0x00000222C2711150>, <app.database.models.Group object at 0x00000222C2711260>, <app.database.models.Group object at 0x00000222C2711370>, <app.database.models.Group object at 0x00000222C2711480>, <app.database.models.Group object at 0x00000222C2711590>, <app.database.models.Group object at 0x00000222C27116A0>, <app.database.models.Group object at 0x00000222C27117B0>, <app.database.models.Group object at 0x00000222C27118C0>, <app.database.models.Group object at 0x00000222C27119D0>, <app.database.models.Group object at 0x00000222C2711AE0>, <app.database.models.Group object at 0x00000222C2711BF0>, <app.database.models.Group object at 0x00000222C2711D00>, <app.database.models.Group object at 0x00000222C2711E10>, <app.database.models.Group object at 0x00000222C2711F20>, <app.database.models.Group object at 0x00000222C2712030>, <app.database.models.Group object at 0x00000222C2712140>, <app.database.models.Group object at 0x00000222C2712250>, <app.database.models.Group object at 0x00000222C2712360>, <app.database.models.Group object at 0x00000222C2712470>, <app.database.models.Group object at 0x00000222C2712580>, <app.database.models.Group object at 0x00000222C2712690>, <app.database.models.Group object at 0x00000222C27127A0>, <app.database.models.Group object at 0x00000222C27128B0>, <app.database.models.Group object at 0x00000222C27129C0>, <app.database.models.Group object at 0x00000222C2712AD0>]
2025-06-14 01:28:15,521 - ERROR - orders - Error processing close order: name 'user_type' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 912, in close_order
    is_barclays_live_user = (user_type == 'live' and sending_orders_normalized == 'barclays')
                             ^^^^^^^^^
NameError: name 'user_type' is not defined
2025-06-14 01:28:15,533 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: name 'user_type' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 912, in close_order
    is_barclays_live_user = (user_type == 'live' and sending_orders_normalized == 'barclays')
                             ^^^^^^^^^
NameError: name 'user_type' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1253, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: name 'user_type' is not defined
2025-06-14 01:32:40,921 - INFO - orders - Application starting up - Orders logging initialized
2025-06-14 01:32:59,631 - INFO - orders - Close order request received - Order ID: 1920987108, User ID: 4, User Type: live
2025-06-14 01:32:59,631 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-14 01:32:59,632 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x0000019E991B7620>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-14 01:32:59,632 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-14 01:32:59,633 - INFO - orders - Request to close order 1920987108 for user 4 (User) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-14 01:32:59,661 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-14 01:32:59,662 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-14 01:32:59,788 - ERROR - orders - Error processing close order: 1 validation error for OrderUpdateRequest
  Value error, At least one of order_id, cancel_id, close_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id must be provided. [type=value_error, input_value={'order_status': 'PENDING...price': Decimal('0.89')}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/value_error
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 957, in close_order
    update_fields_for_history = OrderUpdateRequest(
                                ~~~~~~~~~~~~~~~~~~^
        order_status="PENDING_CLOSE",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        close_message="Order sent to service provider for closure.",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        close_price=close_price, # Log the requested close price
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).model_dump(exclude_unset=True)
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pydantic\main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for OrderUpdateRequest
  Value error, At least one of order_id, cancel_id, close_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id must be provided. [type=value_error, input_value={'order_status': 'PENDING...price': Decimal('0.89')}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/value_error
2025-06-14 01:32:59,799 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 1 validation error for OrderUpdateRequest
  Value error, At least one of order_id, cancel_id, close_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id must be provided. [type=value_error, input_value={'order_status': 'PENDING...price': Decimal('0.89')}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/value_error
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 957, in close_order
    update_fields_for_history = OrderUpdateRequest(
                                ~~~~~~~~~~~~~~~~~~^
        order_status="PENDING_CLOSE",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        close_message="Order sent to service provider for closure.",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        close_price=close_price, # Log the requested close price
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).model_dump(exclude_unset=True)
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pydantic\main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for OrderUpdateRequest
  Value error, At least one of order_id, cancel_id, close_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id must be provided. [type=value_error, input_value={'order_status': 'PENDING...price': Decimal('0.89')}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/value_error

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1269, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 1 validation error for OrderUpdateRequest
  Value error, At least one of order_id, cancel_id, close_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id must be provided. [type=value_error, input_value={'order_status': 'PENDING...price': Decimal('0.89')}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/value_error
2025-06-14 01:35:33,719 - INFO - orders - Application starting up - Orders logging initialized
2025-06-14 01:35:37,545 - INFO - orders - Close order request received - Order ID: 1920987108, User ID: 4, User Type: live
2025-06-14 01:35:37,545 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-14 01:35:37,546 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x000002B61D6874D0>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-14 01:35:37,546 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-14 01:35:37,547 - INFO - orders - Request to close order 1920987108 for user 4 (User) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-14 01:35:37,566 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-14 01:35:37,566 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-14 01:36:50,160 - INFO - orders - Close order request received - Order ID: 5084526449, User ID: 4, User Type: live
2025-06-14 01:36:50,161 - INFO - orders - Close request details - Price: 0.89, Type: BUY, Symbol: AUDCAD
2025-06-14 01:36:50,161 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x000002B61D6F3750>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-14 01:36:50,162 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-14 01:36:50,163 - INFO - orders - Request to close order 5084526449 for user 4 (User) with price 0.89. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-14 01:36:50,186 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-14 01:36:50,187 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-14 23:18:25,297 - INFO - orders - Application starting up - Orders logging initialized
2025-06-14 23:24:46,767 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-15 21:18:57,141 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 21:19:45,888 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 21:21:27,881 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-15 21:21:39,112 - INFO - orders - Close order request received - Order ID: 9317277886, User ID: 4, User Type: live
2025-06-15 21:21:39,112 - INFO - orders - Close request details - Price: 0.88123, Type: BUY, Symbol: AUDCAD
2025-06-15 21:21:39,112 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x0000018B8A1EA5D0>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-15 21:21:39,112 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-15 21:21:39,112 - INFO - orders - Request to close order 9317277886 for user 4 (User) with price 0.88123. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-15 21:21:39,126 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-15 21:21:39,126 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-15 21:21:44,455 - INFO - orders - Close order request received - Order ID: 5499382541, User ID: 4, User Type: live
2025-06-15 21:21:44,456 - INFO - orders - Close request details - Price: 0.88124, Type: BUY, Symbol: AUDCAD
2025-06-15 21:21:44,456 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x0000018B8A4796D0>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-15 21:21:44,457 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-15 21:21:44,457 - INFO - orders - Request to close order 5499382541 for user 4 (User) with price 0.88124. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-15 21:21:44,470 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-15 21:21:44,471 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-15 21:27:59,321 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 21:28:23,161 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 21:32:33,300 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 21:33:00,300 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 21:34:51,283 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 21:36:44,333 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 21:37:02,639 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-15 21:37:11,131 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-15 21:37:11,136 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-15 21:37:11,136 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-15 21:37:11,136 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-15 21:37:11,493 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 0.01
2025-06-15 21:37:11,494 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-15 21:37:11,497 - INFO - orders - [ORDER_MARGIN_CALC] Got BUY price for AUDCAD from cache: 0.8817600000
2025-06-15 21:37:11,497 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-15 21:37:11,497 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 0.01 * 100000.00000000 = 1000.0000000000
2025-06-15 21:37:11,497 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (1000.0000000000 * 0.8817600000) / 100.00 = 8.817600000000000000 (rounded to 8.82)
2025-06-15 21:37:11,497 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-15 21:37:11,497 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 0.01 * 10.0000 = 0.100000
2025-06-15 21:37:11,497 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-15 21:37:11,497 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 8.82 CAD
2025-06-15 21:37:11,497 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.82 CAD to USD for margin for AUDCAD BUY order (user_id: 4, position: )
2025-06-15 21:37:11,497 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 21:37:11,499 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 21:37:11,500 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 21:37:11,500 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 21:37:11,501 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3601500000'), 'o': Decimal('1.3601300000')}
2025-06-15 21:37:11,501 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3601500000
2025-06-15 21:37:11,501 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.82 CAD / 1.3601500000 = 6.484578906738227401389552623 USD
2025-06-15 21:37:11,501 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 8.82 CAD -> 6.484578906738227401389552623 USD
2025-06-15 21:37:11,501 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=6.484578906738227401389552623, price=0.8817600000, contract_value=1000.0000000000, commission=0.10
2025-06-15 21:37:11,501 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=0.10
2025-06-15 21:37:11,504 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-15 21:37:11,505 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-15 21:37:11,505 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 21:37:11,505 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=0.01, StoredMargin=6.484578906738227401389552623
2025-06-15 21:37:11,505 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=648.4578906738227401389552623
2025-06-15 21:37:11,505 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.01, TotalSellQty=0, NetQty=0.01
2025-06-15 21:37:11,505 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('648.4578906738227401389552623')], HighestMarginPerLot=648.4578906738227401389552623
2025-06-15 21:37:11,505 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.48, ContributingOrders=1 (based on individual stored margins)
2025-06-15 21:37:11,505 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=6.48, AdditionalMargin=6.48
2025-06-15 21:37:11,512 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '1308396892', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8817600000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': Decimal('6.484578906738227401389552623'), 'commission': Decimal('0.10'), 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'OPEN'}
2025-06-15 21:37:11,565 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 2733.96000000
2025-06-15 21:37:11,574 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-15 21:37:11,672 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-15 21:37:11,798 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '1308396892', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88176000'), 'order_quantity': Decimal('0.01000000'), 'contract_value': Decimal('1000.00000000'), 'margin': Decimal('6.48457891'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-15 21:37:12,169 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 1308396892 (order_status=PROCESSING, margin not updated in DB)
2025-06-15 21:37:12,177 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 21:37:12,177 - INFO - orders - Using order model: UserOrder
2025-06-15 21:37:12,182 - INFO - orders - Fetched 0 open orders for user 4
2025-06-15 21:37:12,189 - INFO - orders - Fetched 7 pending orders for user 4
2025-06-15 21:37:12,196 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 7 pending orders
2025-06-15 21:37:29,670 - INFO - orders - Pending order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL_LIMIT, Quantity: 0.01
2025-06-15 21:37:29,689 - INFO - orders - Calculated contract_value for pending order: 1000.0000000000 (contract_size: 100000.00000000 * quantity: 0.01)
2025-06-15 21:37:29,693 - INFO - orders - [DEBUG] User data from cache: {'id': 4, 'email': 'dhanush777ss@gmail.com', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'user_type': 'live', 'account_number': 'DYY5A', 'wallet_balance': Decimal('5000.00000000'), 'margin': Decimal('2733.96000000'), 'first_name': None, 'last_name': None, 'country': 'string', 'phone_number': Decimal('8618025298')}
2025-06-15 21:37:29,693 - INFO - orders - [DEBUG] Group name: Group B
2025-06-15 21:37:29,696 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-06-15 21:37:29,696 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-06-15 21:37:29,696 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-06-15 21:37:29,696 - INFO - orders - User 4 is_barclays_live_user: True (user_type: live, sending_orders_normalized: barclays)
2025-06-15 21:37:29,706 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '7902629611', 'order_company_name': 'AUDCAD', 'order_type': 'SELL_LIMIT', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '6108403308', 'takeprofit_id': '5689783729', 'order_user_id': 4, 'order_status': 'PENDING_PROCESSING', 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'open_time': None}
2025-06-15 21:37:29,706 - INFO - orders - [BARCLAYS] Setting initial order_status to PENDING_PROCESSING for Barclays user. Will be updated to PENDING after service provider confirmation.
2025-06-15 21:37:29,706 - INFO - orders - Placing PENDING order: SELL_LIMIT for user 4 at price 0.89
2025-06-15 21:37:29,728 - INFO - orders - Barclays live user detected. Sending pending order to Firebase.
2025-06-15 21:37:29,728 - INFO - orders - [FIREBASE] Prepared Firebase payload for pending order: {'order_id': '7902629611', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL_LIMIT', 'order_status': 'PENDING_PROCESSING', 'order_price': '0.89000000', 'order_quantity': '0.01000000', 'contract_value': '1000.00000000', 'margin': None, 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'PENDING', 'action': 'pending_order', 'timestamp': '2025-06-16T04:37:29.728610+00:00'}
2025-06-15 21:37:30,084 - INFO - orders - [FIREBASE] Successfully sent pending order 7902629611 to Firebase for Barclays user 4
2025-06-15 21:37:30,084 - INFO - orders - Skipping Redis storage for Barclays user pending order 7902629611
2025-06-15 21:37:30,092 - INFO - orders - User data cache updated for user 4 after placing pending order
2025-06-15 21:37:30,092 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 21:37:30,092 - INFO - orders - Using order model: UserOrder
2025-06-15 21:37:30,096 - INFO - orders - Fetched 0 open orders for user 4
2025-06-15 21:37:30,100 - INFO - orders - Fetched 7 pending orders for user 4
2025-06-15 21:37:30,101 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 7 pending orders
2025-06-15 21:38:33,259 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 21:39:05,257 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 21:41:53,015 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 21:42:05,052 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 21:43:27,903 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 21:46:15,679 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 190.000000000000000000000000 CAD to USD for PnL (user_id: 4, position: 5084526449)
2025-06-15 21:46:15,679 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 21:46:15,683 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 21:46:15,683 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 21:46:15,683 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 21:46:15,686 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3602500000'), 'o': Decimal('1.3602200000')}
2025-06-15 21:46:15,686 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3602500000
2025-06-15 21:46:15,686 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 190.000000000000000000000000 CAD / 1.3602500000 = 139.6802058445138761257121853 USD
2025-06-15 21:46:15,693 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 21:46:15,693 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 69): Type=BUY, Qty=0.10000000, StoredMargin=64.59616387
2025-06-15 21:46:15,693 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=645.9616387
2025-06-15 21:46:15,693 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.10000000, TotalSellQty=0, NetQty=0.10000000
2025-06-15 21:46:15,693 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('645.9616387')], HighestMarginPerLot=645.9616387
2025-06-15 21:46:15,693 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=64.60, ContributingOrders=1 (based on individual stored margins)
2025-06-15 21:46:15,694 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-15 21:46:15,694 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-15 21:46:15,822 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 21:46:15,822 - INFO - orders - Using order model: UserOrder
2025-06-15 21:46:15,839 - INFO - orders - Fetched 0 open orders for user 4
2025-06-15 21:46:15,847 - INFO - orders - Fetched 7 pending orders for user 4
2025-06-15 21:46:15,851 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 7 pending orders
2025-06-15 21:50:12,029 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 190.000000000000000000000000 CAD to USD for PnL (user_id: 4, position: 1920987108)
2025-06-15 21:50:12,029 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 21:50:12,033 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 21:50:12,033 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 21:50:12,033 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 21:50:12,036 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3602500000'), 'o': Decimal('1.3602200000')}
2025-06-15 21:50:12,036 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3602500000
2025-06-15 21:50:12,036 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 190.000000000000000000000000 CAD / 1.3602500000 = 139.6802058445138761257121853 USD
2025-06-15 21:50:12,041 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 3
2025-06-15 21:50:12,041 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 48): Type=BUY, Qty=2.00000000, StoredMargin=1301.76269403
2025-06-15 21:50:12,041 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.881347015
2025-06-15 21:50:12,041 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 49): Type=BUY, Qty=2.00000000, StoredMargin=1301.88472416
2025-06-15 21:50:12,041 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=650.94236208
2025-06-15 21:50:12,042 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: 67): Type=BUY, Qty=0.10000000, StoredMargin=64.56204192
2025-06-15 21:50:12,042 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=645.6204192
2025-06-15 21:50:12,042 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=4.10000000, TotalSellQty=0, NetQty=4.10000000
2025-06-15 21:50:12,042 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.881347015'), Decimal('650.94236208'), Decimal('645.6204192')], HighestMarginPerLot=650.94236208
2025-06-15 21:50:12,042 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=2668.86, ContributingOrders=3 (based on individual stored margins)
2025-06-15 21:50:12,042 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 2
2025-06-15 21:50:12,042 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 48): Type=BUY, Qty=2.00000000, StoredMargin=1301.76269403
2025-06-15 21:50:12,042 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.881347015
2025-06-15 21:50:12,042 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 49): Type=BUY, Qty=2.00000000, StoredMargin=1301.88472416
2025-06-15 21:50:12,042 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=650.94236208
2025-06-15 21:50:12,043 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=4.00000000, TotalSellQty=0, NetQty=4.00000000
2025-06-15 21:50:12,043 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.881347015'), Decimal('650.94236208')], HighestMarginPerLot=650.94236208
2025-06-15 21:50:12,043 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=2603.77, ContributingOrders=2 (based on individual stored margins)
2025-06-15 21:50:12,132 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 21:50:12,132 - INFO - orders - Using order model: UserOrder
2025-06-15 21:50:12,139 - INFO - orders - Fetched 2 open orders for user 4
2025-06-15 21:50:12,149 - INFO - orders - Fetched 7 pending orders for user 4
2025-06-15 21:50:12,155 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 7 pending orders
2025-06-15 21:50:23,937 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 1672.000000000000000000000000 CAD to USD for PnL (user_id: 4, position: 9317277886)
2025-06-15 21:50:23,937 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 21:50:23,939 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 21:50:23,939 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 21:50:23,939 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 21:50:23,941 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3602500000'), 'o': Decimal('1.3602200000')}
2025-06-15 21:50:23,941 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3602500000
2025-06-15 21:50:23,941 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 1672.000000000000000000000000 CAD / 1.3602500000 = 1229.185811431722109906267230 USD
2025-06-15 21:50:23,945 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 2
2025-06-15 21:50:23,945 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 48): Type=BUY, Qty=2.00000000, StoredMargin=1301.76269403
2025-06-15 21:50:23,946 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.881347015
2025-06-15 21:50:23,946 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 49): Type=BUY, Qty=2.00000000, StoredMargin=1301.88472416
2025-06-15 21:50:23,946 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=650.94236208
2025-06-15 21:50:23,946 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=4.00000000, TotalSellQty=0, NetQty=4.00000000
2025-06-15 21:50:23,946 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.881347015'), Decimal('650.94236208')], HighestMarginPerLot=650.94236208
2025-06-15 21:50:23,946 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=2603.77, ContributingOrders=2 (based on individual stored margins)
2025-06-15 21:50:23,946 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 21:50:23,946 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 49): Type=BUY, Qty=2.00000000, StoredMargin=1301.88472416
2025-06-15 21:50:23,946 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.94236208
2025-06-15 21:50:23,946 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-15 21:50:23,946 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.94236208')], HighestMarginPerLot=650.94236208
2025-06-15 21:50:23,947 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=1301.88, ContributingOrders=1 (based on individual stored margins)
2025-06-15 21:50:24,022 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 21:50:24,022 - INFO - orders - Using order model: UserOrder
2025-06-15 21:50:24,029 - INFO - orders - Fetched 1 open orders for user 4
2025-06-15 21:50:24,035 - INFO - orders - Fetched 7 pending orders for user 4
2025-06-15 21:50:24,037 - INFO - orders - Updated static orders cache for user 4 with 1 open orders and 7 pending orders
2025-06-15 21:50:32,165 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 1654.000000000000000000000000 CAD to USD for PnL (user_id: 4, position: 5499382541)
2025-06-15 21:50:32,165 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 21:50:32,168 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 21:50:32,169 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 21:50:32,169 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 21:50:32,171 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3602500000'), 'o': Decimal('1.3602200000')}
2025-06-15 21:50:32,171 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3602500000
2025-06-15 21:50:32,171 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 1654.000000000000000000000000 CAD / 1.3602500000 = 1215.952949825399742694357655 USD
2025-06-15 21:50:32,176 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 21:50:32,177 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 49): Type=BUY, Qty=2.00000000, StoredMargin=1301.88472416
2025-06-15 21:50:32,177 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.94236208
2025-06-15 21:50:32,177 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-15 21:50:32,177 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.94236208')], HighestMarginPerLot=650.94236208
2025-06-15 21:50:32,177 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=1301.88, ContributingOrders=1 (based on individual stored margins)
2025-06-15 21:50:32,177 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-15 21:50:32,177 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-15 21:50:32,243 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 21:50:32,243 - INFO - orders - Using order model: UserOrder
2025-06-15 21:50:32,253 - INFO - orders - Fetched 0 open orders for user 4
2025-06-15 21:50:32,259 - INFO - orders - Fetched 7 pending orders for user 4
2025-06-15 21:50:32,265 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 7 pending orders
2025-06-15 21:54:27,879 - INFO - orders - Service provider update request received: {"order_id":"7902629611","order_status":"PENDING","order_price":"0.88"}
2025-06-15 21:54:27,935 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 21:54:27,935 - INFO - orders - Using order model: UserOrder
2025-06-15 21:54:27,944 - INFO - orders - Fetched 0 open orders for user 4
2025-06-15 21:54:27,954 - INFO - orders - Fetched 8 pending orders for user 4
2025-06-15 21:54:27,958 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 8 pending orders
2025-06-15 21:54:58,994 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.80 CAD to USD for margin (user_id: 4, position: 7902629611)
2025-06-15 21:54:58,994 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 21:54:58,997 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 21:54:58,997 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 21:54:58,997 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 21:54:58,999 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3602500000'), 'o': Decimal('1.3602200000')}
2025-06-15 21:54:58,999 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3602500000
2025-06-15 21:54:58,999 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.80 CAD / 1.3602500000 = 6.469399007535379525822459107 USD
2025-06-15 21:54:59,004 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-15 21:54:59,004 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-15 21:54:59,004 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 21:54:59,005 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL_LIMIT, Qty=0.01000000, StoredMargin=6.469399007535379525822459107
2025-06-15 21:54:59,005 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=646.9399007535379525822459107
2025-06-15 21:54:59,005 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=0.01000000, NetQty=0.01000000
2025-06-15 21:54:59,005 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('646.9399007535379525822459107')], HighestMarginPerLot=646.9399007535379525822459107
2025-06-15 21:54:59,005 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.47, ContributingOrders=1 (based on individual stored margins)
2025-06-15 21:54:59,005 - INFO - orders - Updating user 4 margin from 0.50000000 to 6.97
2025-06-15 21:54:59,054 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 21:54:59,054 - INFO - orders - Using order model: UserOrder
2025-06-15 21:54:59,061 - INFO - orders - Fetched 1 open orders for user 4
2025-06-15 21:54:59,066 - INFO - orders - Fetched 7 pending orders for user 4
2025-06-15 21:54:59,069 - INFO - orders - Updated static orders cache for user 4 with 1 open orders and 7 pending orders
2025-06-15 21:56:54,434 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-15 21:59:06,806 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 880.00 CAD to USD for margin (user_id: 4, position: 4573979015)
2025-06-15 21:59:06,806 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 21:59:06,810 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 21:59:06,810 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 21:59:06,811 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 21:59:06,815 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3602900000'), 'o': Decimal('1.3602700000')}
2025-06-15 21:59:06,815 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3602900000
2025-06-15 21:59:06,815 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 880.00 CAD / 1.3602900000 = 646.9208771658984481250321623 USD
2025-06-15 21:59:06,821 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 21:59:06,821 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 71): Type=SELL_LIMIT, Qty=0.01000000, StoredMargin=6.46939901
2025-06-15 21:59:06,821 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=646.939901
2025-06-15 21:59:06,821 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=0.01000000, NetQty=0.01000000
2025-06-15 21:59:06,821 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('646.939901')], HighestMarginPerLot=646.939901
2025-06-15 21:59:06,821 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.47, ContributingOrders=1 (based on individual stored margins)
2025-06-15 21:59:06,824 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 2
2025-06-15 21:59:06,825 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 71): Type=SELL_LIMIT, Qty=0.01000000, StoredMargin=6.46939901
2025-06-15 21:59:06,825 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=646.939901
2025-06-15 21:59:06,825 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.9208771658984481250321623
2025-06-15 21:59:06,825 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=646.9208771658984481250321623
2025-06-15 21:59:06,825 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0.01000000, NetQty=1.00000000
2025-06-15 21:59:06,825 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('646.939901'), Decimal('646.9208771658984481250321623')], HighestMarginPerLot=646.939901
2025-06-15 21:59:06,825 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=646.94, ContributingOrders=2 (based on individual stored margins)
2025-06-15 21:59:06,825 - INFO - orders - Updating user 4 margin from 6.97000000 to 647.44
2025-06-15 21:59:06,904 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 21:59:06,905 - INFO - orders - Using order model: UserOrder
2025-06-15 21:59:06,917 - INFO - orders - Fetched 2 open orders for user 4
2025-06-15 21:59:06,936 - INFO - orders - Fetched 6 pending orders for user 4
2025-06-15 21:59:06,943 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 6 pending orders
2025-06-15 22:13:03,412 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 22:16:37,425 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 22:21:20,895 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 22:23:55,174 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 22:24:28,452 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '5186970569', 'order_status': 'OPEN', 'order_price': Decimal('0.88')}
2025-06-15 22:24:28,483 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 880.00 CAD to USD for margin (user_id: 4, position: 5186970569)
2025-06-15 22:24:28,483 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 22:24:28,485 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 22:24:28,486 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 22:24:28,486 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 22:24:28,491 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3602700000'), 'o': Decimal('1.3602000000')}
2025-06-15 22:24:28,491 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3602700000
2025-06-15 22:24:28,491 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 880.00 CAD / 1.3602700000 = 646.9303888198666441221228139 USD
2025-06-15 22:24:28,502 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 2
2025-06-15 22:24:28,502 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 51): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.92087717
2025-06-15 22:24:28,502 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=646.92087717
2025-06-15 22:24:28,502 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 71): Type=SELL_LIMIT, Qty=0.01000000, StoredMargin=6.46939901
2025-06-15 22:24:28,503 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=646.939901
2025-06-15 22:24:28,503 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0.01000000, NetQty=1.00000000
2025-06-15 22:24:28,503 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('646.92087717'), Decimal('646.939901')], HighestMarginPerLot=646.939901
2025-06-15 22:24:28,503 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=646.94, ContributingOrders=2 (based on individual stored margins)
2025-06-15 22:24:28,503 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 3
2025-06-15 22:24:28,503 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 51): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.92087717
2025-06-15 22:24:28,503 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=646.92087717
2025-06-15 22:24:28,503 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 71): Type=SELL_LIMIT, Qty=0.01000000, StoredMargin=6.46939901
2025-06-15 22:24:28,503 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=646.939901
2025-06-15 22:24:28,504 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: NEW_UNSAVED): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.9303888198666441221228139
2025-06-15 22:24:28,504 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=646.9303888198666441221228139
2025-06-15 22:24:28,504 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0.01000000, NetQty=2.00000000
2025-06-15 22:24:28,504 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('646.92087717'), Decimal('646.939901'), Decimal('646.9303888198666441221228139')], HighestMarginPerLot=646.939901
2025-06-15 22:24:28,504 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=1293.88, ContributingOrders=3 (based on individual stored margins)
2025-06-15 22:24:28,504 - INFO - orders - Updating user 4 margin from 647.44000000 to 1294.38
2025-06-15 22:24:28,571 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 22:24:28,571 - INFO - orders - Using order model: UserOrder
2025-06-15 22:24:28,578 - INFO - orders - Fetched 3 open orders for user 4
2025-06-15 22:24:28,588 - INFO - orders - Fetched 5 pending orders for user 4
2025-06-15 22:24:28,591 - INFO - orders - Updated static orders cache for user 4 with 3 open orders and 5 pending orders
2025-06-15 22:28:02,928 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 22:28:29,972 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '6086104174', 'order_status': 'OPEN', 'order_price': Decimal('0.88')}
2025-06-15 22:28:30,003 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 880.00 CAD to USD for margin (user_id: 4, position: 6086104174)
2025-06-15 22:28:30,003 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 22:28:30,005 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 22:28:30,005 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 22:28:30,005 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 22:28:30,007 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3602700000'), 'o': Decimal('1.3602000000')}
2025-06-15 22:28:30,007 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3602700000
2025-06-15 22:28:30,008 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 880.00 CAD / 1.3602700000 = 646.9303888198666441221228139 USD
2025-06-15 22:28:30,015 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 3
2025-06-15 22:28:30,015 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 51): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.92087717
2025-06-15 22:28:30,015 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=646.92087717
2025-06-15 22:28:30,015 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 52): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.93038882
2025-06-15 22:28:30,016 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=646.93038882
2025-06-15 22:28:30,016 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: 71): Type=SELL_LIMIT, Qty=0.01000000, StoredMargin=6.46939901
2025-06-15 22:28:30,016 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=646.939901
2025-06-15 22:28:30,016 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0.01000000, NetQty=2.00000000
2025-06-15 22:28:30,016 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('646.92087717'), Decimal('646.93038882'), Decimal('646.939901')], HighestMarginPerLot=646.939901
2025-06-15 22:28:30,016 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=1293.88, ContributingOrders=3 (based on individual stored margins)
2025-06-15 22:28:30,016 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 4
2025-06-15 22:28:30,016 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 51): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.92087717
2025-06-15 22:28:30,016 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=646.92087717
2025-06-15 22:28:30,017 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 52): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.93038882
2025-06-15 22:28:30,017 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=646.93038882
2025-06-15 22:28:30,017 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: 71): Type=SELL_LIMIT, Qty=0.01000000, StoredMargin=6.46939901
2025-06-15 22:28:30,017 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=646.939901
2025-06-15 22:28:30,017 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4 (ID: NEW_UNSAVED): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.9303888198666441221228139
2025-06-15 22:28:30,017 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4: MarginPerLot=646.9303888198666441221228139
2025-06-15 22:28:30,017 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=3.00000000, TotalSellQty=0.01000000, NetQty=3.00000000
2025-06-15 22:28:30,017 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('646.92087717'), Decimal('646.93038882'), Decimal('646.939901'), Decimal('646.9303888198666441221228139')], HighestMarginPerLot=646.939901
2025-06-15 22:28:30,017 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=1940.82, ContributingOrders=4 (based on individual stored margins)
2025-06-15 22:28:30,017 - INFO - orders - Updating user 4 margin from 1294.38000000 to 1941.32
2025-06-15 22:28:30,086 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 22:28:30,086 - INFO - orders - Using order model: UserOrder
2025-06-15 22:28:30,102 - INFO - orders - Fetched 4 open orders for user 4
2025-06-15 22:28:30,116 - INFO - orders - Fetched 4 pending orders for user 4
2025-06-15 22:28:30,121 - INFO - orders - Updated static orders cache for user 4 with 4 open orders and 4 pending orders
2025-06-15 22:32:08,905 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 22:33:05,511 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '3318596313', 'order_status': 'OPEN', 'order_type': 'BUY', 'order_price': Decimal('0.88')}
2025-06-15 22:33:05,527 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 88.00 CAD to USD for margin (user_id: 4, position: 3318596313)
2025-06-15 22:33:05,527 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 22:33:05,529 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 22:33:05,529 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 22:33:05,529 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 22:33:05,531 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3602700000'), 'o': Decimal('1.3602000000')}
2025-06-15 22:33:05,531 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3602700000
2025-06-15 22:33:05,531 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 88.00 CAD / 1.3602700000 = 64.69303888198666441221228139 USD
2025-06-15 22:33:05,534 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 4
2025-06-15 22:33:05,534 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 51): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.92087717
2025-06-15 22:33:05,534 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=646.92087717
2025-06-15 22:33:05,534 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 52): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.93038882
2025-06-15 22:33:05,534 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=646.93038882
2025-06-15 22:33:05,534 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: 54): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.93038882
2025-06-15 22:33:05,534 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=646.93038882
2025-06-15 22:33:05,534 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4 (ID: 71): Type=SELL_LIMIT, Qty=0.01000000, StoredMargin=6.46939901
2025-06-15 22:33:05,534 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4: MarginPerLot=646.939901
2025-06-15 22:33:05,534 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=3.00000000, TotalSellQty=0.01000000, NetQty=3.00000000
2025-06-15 22:33:05,534 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('646.92087717'), Decimal('646.93038882'), Decimal('646.93038882'), Decimal('646.939901')], HighestMarginPerLot=646.939901
2025-06-15 22:33:05,535 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=1940.82, ContributingOrders=4 (based on individual stored margins)
2025-06-15 22:33:05,535 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 5
2025-06-15 22:33:05,535 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 51): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.92087717
2025-06-15 22:33:05,535 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=646.92087717
2025-06-15 22:33:05,535 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 52): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.93038882
2025-06-15 22:33:05,535 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=646.93038882
2025-06-15 22:33:05,535 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: 54): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.93038882
2025-06-15 22:33:05,535 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=646.93038882
2025-06-15 22:33:05,535 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4 (ID: 71): Type=SELL_LIMIT, Qty=0.01000000, StoredMargin=6.46939901
2025-06-15 22:33:05,535 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4: MarginPerLot=646.939901
2025-06-15 22:33:05,535 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 5 (ID: NEW_UNSAVED): Type=BUY, Qty=0.10000000, StoredMargin=64.69303888198666441221228139
2025-06-15 22:33:05,535 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 5: MarginPerLot=646.9303888198666441221228139
2025-06-15 22:33:05,535 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=3.10000000, TotalSellQty=0.01000000, NetQty=3.10000000
2025-06-15 22:33:05,535 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('646.92087717'), Decimal('646.93038882'), Decimal('646.93038882'), Decimal('646.939901'), Decimal('646.9303888198666441221228139')], HighestMarginPerLot=646.939901
2025-06-15 22:33:05,535 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=2005.51, ContributingOrders=5 (based on individual stored margins)
2025-06-15 22:33:05,535 - INFO - orders - Updating user 4 margin from 1941.32000000 to 2006.01
2025-06-15 22:33:05,576 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 22:33:05,576 - INFO - orders - Using order model: UserOrder
2025-06-15 22:33:05,581 - INFO - orders - Fetched 5 open orders for user 4
2025-06-15 22:33:05,584 - INFO - orders - Fetched 3 pending orders for user 4
2025-06-15 22:33:05,587 - INFO - orders - Updated static orders cache for user 4 with 5 open orders and 3 pending orders
2025-06-15 22:35:48,006 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 22:35:59,422 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-15 22:36:28,864 - app.api.v1.endpoints.orders - INFO - [get_closed_orders] user_type: live
2025-06-15 22:36:50,431 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-15 22:36:51,908 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-15 22:42:45,641 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 22:55:51,688 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 22:57:33,452 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-15 22:57:47,184 - INFO - orders - Close order request received - Order ID: 5186970569, User ID: 4, User Type: live
2025-06-15 22:57:47,184 - INFO - orders - Close request details - Price: 0.88249, Type: BUY_LIMIT, Symbol: AUDCAD
2025-06-15 22:57:47,184 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x00000209301E6AD0>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-15 22:57:47,184 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-15 22:57:47,185 - INFO - orders - Request to close order 5186970569 for user 4 (User) with price 0.88249. Frontend provided type: BUY_LIMIT, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-15 22:57:47,204 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-15 22:57:47,204 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-15 22:57:49,630 - INFO - orders - Close order request received - Order ID: 6086104174, User ID: 4, User Type: live
2025-06-15 22:57:49,630 - INFO - orders - Close request details - Price: 0.88257, Type: BUY_LIMIT, Symbol: AUDCAD
2025-06-15 22:57:49,630 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x00000209301E7890>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-15 22:57:49,631 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-15 22:57:49,631 - INFO - orders - Request to close order 6086104174 for user 4 (User) with price 0.88257. Frontend provided type: BUY_LIMIT, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-15 22:57:49,639 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-15 22:57:49,639 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-15 22:57:51,704 - INFO - orders - Close order request received - Order ID: 3318596313, User ID: 4, User Type: live
2025-06-15 22:57:51,704 - INFO - orders - Close request details - Price: 0.88253, Type: BUY, Symbol: AUDCAD
2025-06-15 22:57:51,704 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x00000209301E7B10>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-15 22:57:51,704 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-15 22:57:51,705 - INFO - orders - Request to close order 3318596313 for user 4 (User) with price 0.88253. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-15 22:57:51,728 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-15 22:57:51,728 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-15 22:57:55,196 - INFO - orders - Close order request received - Order ID: 7902629611, User ID: 4, User Type: live
2025-06-15 22:57:55,196 - INFO - orders - Close request details - Price: 0.8826, Type: SELL_LIMIT, Symbol: AUDCAD
2025-06-15 22:57:55,196 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x00000209301E7B10>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-15 22:57:55,196 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-15 22:57:55,196 - INFO - orders - Request to close order 7902629611 for user 4 (User) with price 0.8826. Frontend provided type: SELL_LIMIT, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-15 22:57:55,215 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-15 22:57:55,215 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-15 22:59:10,264 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -1900.000000000000000000000000 CAD to USD for PnL (user_id: 4, position: 5186970569)
2025-06-15 22:59:10,264 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 22:59:10,266 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 22:59:10,266 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 22:59:10,266 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 22:59:10,272 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3581300000'), 'o': Decimal('1.3580800000')}
2025-06-15 22:59:10,272 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3581300000
2025-06-15 22:59:10,272 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -1900.000000000000000000000000 CAD / 1.3581300000 = -1398.982424362910767010521820 USD
2025-06-15 22:59:10,282 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 5
2025-06-15 22:59:10,282 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 51): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.92087717
2025-06-15 22:59:10,282 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=646.92087717
2025-06-15 22:59:10,282 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 52): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.93038882
2025-06-15 22:59:10,282 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=646.93038882
2025-06-15 22:59:10,282 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: 54): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.93038882
2025-06-15 22:59:10,282 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=646.93038882
2025-06-15 22:59:10,282 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4 (ID: 58): Type=BUY, Qty=0.10000000, StoredMargin=64.69303888
2025-06-15 22:59:10,282 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4: MarginPerLot=646.9303888
2025-06-15 22:59:10,282 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 5 (ID: 71): Type=SELL_LIMIT, Qty=0.01000000, StoredMargin=6.46939901
2025-06-15 22:59:10,282 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 5: MarginPerLot=646.939901
2025-06-15 22:59:10,283 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=3.10000000, TotalSellQty=0.01000000, NetQty=3.10000000
2025-06-15 22:59:10,283 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('646.92087717'), Decimal('646.93038882'), Decimal('646.93038882'), Decimal('646.9303888'), Decimal('646.939901')], HighestMarginPerLot=646.939901
2025-06-15 22:59:10,283 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=2005.51, ContributingOrders=5 (based on individual stored margins)
2025-06-15 22:59:10,283 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 5
2025-06-15 22:59:10,283 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 51): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.92087717
2025-06-15 22:59:10,283 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=646.92087717
2025-06-15 22:59:10,283 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 52): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.93038882
2025-06-15 22:59:10,283 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=646.93038882
2025-06-15 22:59:10,283 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: 54): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.93038882
2025-06-15 22:59:10,283 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=646.93038882
2025-06-15 22:59:10,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4 (ID: 58): Type=BUY, Qty=0.10000000, StoredMargin=64.69303888
2025-06-15 22:59:10,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4: MarginPerLot=646.9303888
2025-06-15 22:59:10,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 5 (ID: 71): Type=SELL_LIMIT, Qty=0.01000000, StoredMargin=6.46939901
2025-06-15 22:59:10,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 5: MarginPerLot=646.939901
2025-06-15 22:59:10,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=3.10000000, TotalSellQty=0.01000000, NetQty=3.10000000
2025-06-15 22:59:10,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('646.92087717'), Decimal('646.93038882'), Decimal('646.93038882'), Decimal('646.9303888'), Decimal('646.939901')], HighestMarginPerLot=646.939901
2025-06-15 22:59:10,284 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=2005.51, ContributingOrders=5 (based on individual stored margins)
2025-06-15 22:59:10,385 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 22:59:10,385 - INFO - orders - Using order model: UserOrder
2025-06-15 22:59:10,392 - INFO - orders - Fetched 4 open orders for user 4
2025-06-15 22:59:10,397 - INFO - orders - Fetched 3 pending orders for user 4
2025-06-15 22:59:10,401 - INFO - orders - Updated static orders cache for user 4 with 4 open orders and 3 pending orders
2025-06-15 22:59:33,026 - INFO - orders - Close order request received - Order ID: 4573979015, User ID: 4, User Type: live
2025-06-15 22:59:33,026 - INFO - orders - Close request details - Price: 0.88251, Type: BUY_LIMIT, Symbol: AUDCAD
2025-06-15 22:59:33,026 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x00000209301E5F90>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-15 22:59:33,026 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-15 22:59:33,026 - INFO - orders - Request to close order 4573979015 for user 4 (User) with price 0.88251. Frontend provided type: BUY_LIMIT, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-15 22:59:33,035 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-15 22:59:33,036 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-15 22:59:41,554 - INFO - orders - Close order request received - Order ID: 4573979015, User ID: 4, User Type: live
2025-06-15 22:59:41,554 - INFO - orders - Close request details - Price: 0.88251, Type: BUY_LIMIT, Symbol: AUDCAD
2025-06-15 22:59:41,555 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x00000209301E5F90>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-15 22:59:41,555 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-15 22:59:41,555 - INFO - orders - Request to close order 4573979015 for user 4 (User) with price 0.88251. Frontend provided type: BUY_LIMIT, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-15 22:59:41,569 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-15 22:59:41,569 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-15 22:59:41,959 - INFO - orders - Close order request received - Order ID: 4573979015, User ID: 4, User Type: live
2025-06-15 22:59:41,959 - INFO - orders - Close request details - Price: 0.88251, Type: BUY_LIMIT, Symbol: AUDCAD
2025-06-15 22:59:41,959 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x00000209301E74D0>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-15 22:59:41,960 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-15 22:59:41,960 - INFO - orders - Request to close order 4573979015 for user 4 (User) with price 0.88251. Frontend provided type: BUY_LIMIT, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-15 22:59:41,971 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-15 22:59:41,971 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-15 23:00:06,500 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -1900.000000000000000000000000 CAD to USD for PnL (user_id: 4, position: 4573979015)
2025-06-15 23:00:06,500 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:00:06,501 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:00:06,501 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:00:06,501 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:00:06,503 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3581600000'), 'o': Decimal('1.3581000000')}
2025-06-15 23:00:06,504 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3581600000
2025-06-15 23:00:06,504 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -1900.000000000000000000000000 CAD / 1.3581600000 = -1398.951522648288861400718619 USD
2025-06-15 23:00:06,510 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 4
2025-06-15 23:00:06,510 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 51): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.92087717
2025-06-15 23:00:06,510 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=646.92087717
2025-06-15 23:00:06,511 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 54): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.93038882
2025-06-15 23:00:06,511 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=646.93038882
2025-06-15 23:00:06,511 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: 58): Type=BUY, Qty=0.10000000, StoredMargin=64.69303888
2025-06-15 23:00:06,511 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=646.9303888
2025-06-15 23:00:06,511 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4 (ID: 71): Type=SELL_LIMIT, Qty=0.01000000, StoredMargin=6.46939901
2025-06-15 23:00:06,511 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4: MarginPerLot=646.939901
2025-06-15 23:00:06,511 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=2.10000000, TotalSellQty=0.01000000, NetQty=2.10000000
2025-06-15 23:00:06,511 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('646.92087717'), Decimal('646.93038882'), Decimal('646.9303888'), Decimal('646.939901')], HighestMarginPerLot=646.939901
2025-06-15 23:00:06,511 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=1358.57, ContributingOrders=4 (based on individual stored margins)
2025-06-15 23:00:06,511 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 4
2025-06-15 23:00:06,511 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 51): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.92087717
2025-06-15 23:00:06,511 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=646.92087717
2025-06-15 23:00:06,512 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 54): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.93038882
2025-06-15 23:00:06,512 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=646.93038882
2025-06-15 23:00:06,512 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: 58): Type=BUY, Qty=0.10000000, StoredMargin=64.69303888
2025-06-15 23:00:06,512 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=646.9303888
2025-06-15 23:00:06,512 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4 (ID: 71): Type=SELL_LIMIT, Qty=0.01000000, StoredMargin=6.46939901
2025-06-15 23:00:06,512 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4: MarginPerLot=646.939901
2025-06-15 23:00:06,512 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=2.10000000, TotalSellQty=0.01000000, NetQty=2.10000000
2025-06-15 23:00:06,512 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('646.92087717'), Decimal('646.93038882'), Decimal('646.9303888'), Decimal('646.939901')], HighestMarginPerLot=646.939901
2025-06-15 23:00:06,512 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=1358.57, ContributingOrders=4 (based on individual stored margins)
2025-06-15 23:00:06,568 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:00:06,568 - INFO - orders - Using order model: UserOrder
2025-06-15 23:00:06,573 - INFO - orders - Fetched 3 open orders for user 4
2025-06-15 23:00:06,577 - INFO - orders - Fetched 3 pending orders for user 4
2025-06-15 23:00:06,579 - INFO - orders - Updated static orders cache for user 4 with 3 open orders and 3 pending orders
2025-06-15 23:00:31,187 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -1900.000000000000000000000000 CAD to USD for PnL (user_id: 4, position: 6086104174)
2025-06-15 23:00:31,187 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:00:31,188 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:00:31,188 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:00:31,188 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:00:31,189 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3581600000'), 'o': Decimal('1.3581000000')}
2025-06-15 23:00:31,189 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3581600000
2025-06-15 23:00:31,189 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -1900.000000000000000000000000 CAD / 1.3581600000 = -1398.951522648288861400718619 USD
2025-06-15 23:00:31,191 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 3
2025-06-15 23:00:31,191 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 54): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.93038882
2025-06-15 23:00:31,192 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=646.93038882
2025-06-15 23:00:31,192 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 58): Type=BUY, Qty=0.10000000, StoredMargin=64.69303888
2025-06-15 23:00:31,192 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=646.9303888
2025-06-15 23:00:31,192 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: 71): Type=SELL_LIMIT, Qty=0.01000000, StoredMargin=6.46939901
2025-06-15 23:00:31,192 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=646.939901
2025-06-15 23:00:31,192 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1.10000000, TotalSellQty=0.01000000, NetQty=1.10000000
2025-06-15 23:00:31,192 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('646.93038882'), Decimal('646.9303888'), Decimal('646.939901')], HighestMarginPerLot=646.939901
2025-06-15 23:00:31,192 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=711.63, ContributingOrders=3 (based on individual stored margins)
2025-06-15 23:00:31,192 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 3
2025-06-15 23:00:31,192 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 54): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=646.93038882
2025-06-15 23:00:31,192 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=646.93038882
2025-06-15 23:00:31,192 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 58): Type=BUY, Qty=0.10000000, StoredMargin=64.69303888
2025-06-15 23:00:31,192 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=646.9303888
2025-06-15 23:00:31,192 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: 71): Type=SELL_LIMIT, Qty=0.01000000, StoredMargin=6.46939901
2025-06-15 23:00:31,192 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=646.939901
2025-06-15 23:00:31,192 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1.10000000, TotalSellQty=0.01000000, NetQty=1.10000000
2025-06-15 23:00:31,192 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('646.93038882'), Decimal('646.9303888'), Decimal('646.939901')], HighestMarginPerLot=646.939901
2025-06-15 23:00:31,192 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=711.63, ContributingOrders=3 (based on individual stored margins)
2025-06-15 23:00:31,267 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:00:31,267 - INFO - orders - Using order model: UserOrder
2025-06-15 23:00:31,272 - INFO - orders - Fetched 2 open orders for user 4
2025-06-15 23:00:31,277 - INFO - orders - Fetched 3 pending orders for user 4
2025-06-15 23:00:31,279 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 3 pending orders
2025-06-15 23:01:00,167 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 190.000000000000000000000000 CAD to USD for PnL (user_id: 4, position: 3318596313)
2025-06-15 23:01:00,167 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:01:00,169 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:01:00,169 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:01:00,170 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:01:00,173 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3581700000'), 'o': Decimal('1.3580900000')}
2025-06-15 23:01:00,173 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3581700000
2025-06-15 23:01:00,173 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 190.000000000000000000000000 CAD / 1.3581700000 = 139.8941222380114418666293616 USD
2025-06-15 23:01:00,178 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 2
2025-06-15 23:01:00,178 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 58): Type=BUY, Qty=0.10000000, StoredMargin=64.69303888
2025-06-15 23:01:00,178 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=646.9303888
2025-06-15 23:01:00,178 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 71): Type=SELL_LIMIT, Qty=0.01000000, StoredMargin=6.46939901
2025-06-15 23:01:00,178 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=646.939901
2025-06-15 23:01:00,178 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.10000000, TotalSellQty=0.01000000, NetQty=0.10000000
2025-06-15 23:01:00,178 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('646.9303888'), Decimal('646.939901')], HighestMarginPerLot=646.939901
2025-06-15 23:01:00,178 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=64.69, ContributingOrders=2 (based on individual stored margins)
2025-06-15 23:01:00,179 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 2
2025-06-15 23:01:00,179 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 58): Type=BUY, Qty=0.10000000, StoredMargin=64.69303888
2025-06-15 23:01:00,179 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=646.9303888
2025-06-15 23:01:00,179 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 71): Type=SELL_LIMIT, Qty=0.01000000, StoredMargin=6.46939901
2025-06-15 23:01:00,179 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=646.939901
2025-06-15 23:01:00,179 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.10000000, TotalSellQty=0.01000000, NetQty=0.10000000
2025-06-15 23:01:00,179 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('646.9303888'), Decimal('646.939901')], HighestMarginPerLot=646.939901
2025-06-15 23:01:00,179 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=64.69, ContributingOrders=2 (based on individual stored margins)
2025-06-15 23:01:00,211 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:01:00,211 - INFO - orders - Using order model: UserOrder
2025-06-15 23:01:00,215 - INFO - orders - Fetched 1 open orders for user 4
2025-06-15 23:01:00,218 - INFO - orders - Fetched 3 pending orders for user 4
2025-06-15 23:01:00,220 - INFO - orders - Updated static orders cache for user 4 with 1 open orders and 3 pending orders
2025-06-15 23:01:21,928 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -19.000000000000000000000000 CAD to USD for PnL (user_id: 4, position: 7902629611)
2025-06-15 23:01:21,928 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:01:21,929 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:01:21,929 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:01:21,929 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:01:21,932 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3581400000'), 'o': Decimal('1.3580900000')}
2025-06-15 23:01:21,932 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3581400000
2025-06-15 23:01:21,932 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -19.000000000000000000000000 CAD / 1.3581400000 = -13.98972123639683685039833890 USD
2025-06-15 23:01:21,935 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 23:01:21,936 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 71): Type=SELL_LIMIT, Qty=0.01000000, StoredMargin=6.46939901
2025-06-15 23:01:21,936 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=646.939901
2025-06-15 23:01:21,936 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=0.01000000, NetQty=0.01000000
2025-06-15 23:01:21,936 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('646.939901')], HighestMarginPerLot=646.939901
2025-06-15 23:01:21,936 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.47, ContributingOrders=1 (based on individual stored margins)
2025-06-15 23:01:21,936 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 23:01:21,936 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 71): Type=SELL_LIMIT, Qty=0.01000000, StoredMargin=6.46939901
2025-06-15 23:01:21,936 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=646.939901
2025-06-15 23:01:21,936 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=0.01000000, NetQty=0.01000000
2025-06-15 23:01:21,936 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('646.939901')], HighestMarginPerLot=646.939901
2025-06-15 23:01:21,936 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.47, ContributingOrders=1 (based on individual stored margins)
2025-06-15 23:01:21,993 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:01:21,993 - INFO - orders - Using order model: UserOrder
2025-06-15 23:01:21,997 - INFO - orders - Fetched 0 open orders for user 4
2025-06-15 23:01:22,001 - INFO - orders - Fetched 3 pending orders for user 4
2025-06-15 23:01:22,003 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 3 pending orders
2025-06-15 23:01:42,470 - INFO - orders - Cancel pending order request received - Order ID: 4348090858, User ID: 4
2025-06-15 23:01:42,476 - INFO - orders - Generated cancel_id: 6425200385 for order 4348090858
2025-06-15 23:01:42,482 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-15 23:01:42,482 - INFO - orders - Barclays user detected. Sending cancel request to Firebase for order 4348090858
2025-06-15 23:01:43,146 - INFO - orders - Cancel request sent to Firebase for order 4348090858
2025-06-15 23:01:48,519 - INFO - orders - Cancel pending order request received - Order ID: 2478894656, User ID: 4
2025-06-15 23:01:48,531 - INFO - orders - Generated cancel_id: 1105138348 for order 2478894656
2025-06-15 23:01:48,537 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-15 23:01:48,537 - INFO - orders - Barclays user detected. Sending cancel request to Firebase for order 2478894656
2025-06-15 23:01:48,827 - INFO - orders - Cancel request sent to Firebase for order 2478894656
2025-06-15 23:01:52,092 - INFO - orders - Cancel pending order request received - Order ID: 7099216144, User ID: 4
2025-06-15 23:01:52,104 - INFO - orders - Generated cancel_id: 8702587628 for order 7099216144
2025-06-15 23:01:52,114 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-15 23:01:52,114 - INFO - orders - Barclays user detected. Sending cancel request to Firebase for order 7099216144
2025-06-15 23:01:52,435 - INFO - orders - Cancel request sent to Firebase for order 7099216144
2025-06-15 23:02:34,331 - INFO - orders - Service provider update request received: {"order_id":"6425200385","order_status":"CANCELLED","order_price":"0.88"}
2025-06-15 23:02:34,333 - INFO - orders - Service provider is cancelling pending order 4348090858
2025-06-15 23:02:34,353 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:02:34,353 - INFO - orders - Using order model: UserOrder
2025-06-15 23:02:34,355 - INFO - orders - Fetched 0 open orders for user 4
2025-06-15 23:02:34,359 - INFO - orders - Fetched 2 pending orders for user 4
2025-06-15 23:02:34,361 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 2 pending orders
2025-06-15 23:02:58,070 - INFO - orders - Service provider update request received: {"order_id":"1105138348","order_status":"CANCELLED","order_price":"0.88"}
2025-06-15 23:02:58,072 - INFO - orders - Service provider is cancelling pending order 2478894656
2025-06-15 23:02:58,091 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:02:58,091 - INFO - orders - Using order model: UserOrder
2025-06-15 23:02:58,093 - INFO - orders - Fetched 0 open orders for user 4
2025-06-15 23:02:58,097 - INFO - orders - Fetched 1 pending orders for user 4
2025-06-15 23:02:58,099 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 1 pending orders
2025-06-15 23:03:05,207 - INFO - orders - Service provider update request received: {"order_id":"8702587628","order_status":"CANCELLED","order_price":"0.88"}
2025-06-15 23:03:05,210 - INFO - orders - Service provider is cancelling pending order 7099216144
2025-06-15 23:03:05,242 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:03:05,242 - INFO - orders - Using order model: UserOrder
2025-06-15 23:03:05,248 - INFO - orders - Fetched 0 open orders for user 4
2025-06-15 23:03:05,252 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-15 23:03:05,255 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-15 23:03:08,525 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-15 23:03:24,447 - INFO - orders - Pending order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL_LIMIT, Quantity: 0.01
2025-06-15 23:03:24,457 - INFO - orders - Calculated contract_value for pending order: 1000.0000000000 (contract_size: 100000.00000000 * quantity: 0.01)
2025-06-15 23:03:24,461 - INFO - orders - [DEBUG] User data from cache: {'id': 4, 'email': 'dhanush777ss@gmail.com', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'user_type': 'live', 'account_number': 'DYY5A', 'wallet_balance': Decimal('3507.32000000'), 'margin': Decimal('2006.01000000'), 'first_name': None, 'last_name': None, 'country': 'string', 'phone_number': Decimal('8618025298')}
2025-06-15 23:03:24,461 - INFO - orders - [DEBUG] Group name: Group B
2025-06-15 23:03:24,466 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-06-15 23:03:24,466 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-06-15 23:03:24,466 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-06-15 23:03:24,466 - INFO - orders - User 4 is_barclays_live_user: True (user_type: live, sending_orders_normalized: barclays)
2025-06-15 23:03:24,477 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '6589933905', 'order_company_name': 'AUDCAD', 'order_type': 'SELL_LIMIT', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.889'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '6975832224', 'takeprofit_id': '8965480139', 'order_user_id': 4, 'order_status': 'PENDING_PROCESSING', 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'open_time': None}
2025-06-15 23:03:24,477 - INFO - orders - [BARCLAYS] Setting initial order_status to PENDING_PROCESSING for Barclays user. Will be updated to PENDING after service provider confirmation.
2025-06-15 23:03:24,477 - INFO - orders - Placing PENDING order: SELL_LIMIT for user 4 at price 0.889
2025-06-15 23:03:24,506 - INFO - orders - Barclays live user detected. Sending pending order to Firebase.
2025-06-15 23:03:24,506 - INFO - orders - [FIREBASE] Prepared Firebase payload for pending order: {'order_id': '6589933905', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL_LIMIT', 'order_status': 'PENDING_PROCESSING', 'order_price': '0.88900000', 'order_quantity': '0.01000000', 'contract_value': '1000.00000000', 'margin': None, 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'PENDING', 'action': 'pending_order', 'timestamp': '2025-06-16T06:03:24.506618+00:00'}
2025-06-15 23:03:25,133 - INFO - orders - [FIREBASE] Successfully sent pending order 6589933905 to Firebase for Barclays user 4
2025-06-15 23:03:25,133 - INFO - orders - Skipping Redis storage for Barclays user pending order 6589933905
2025-06-15 23:03:25,144 - INFO - orders - User data cache updated for user 4 after placing pending order
2025-06-15 23:03:25,144 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:03:25,144 - INFO - orders - Using order model: UserOrder
2025-06-15 23:03:25,152 - INFO - orders - Fetched 0 open orders for user 4
2025-06-15 23:03:25,158 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-15 23:03:25,162 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-15 23:03:45,928 - INFO - orders - Service provider update request received: {"order_id":"6589933905","order_status":"PENDING","order_price":"0.88"}
2025-06-15 23:03:45,949 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:03:45,949 - INFO - orders - Using order model: UserOrder
2025-06-15 23:03:45,955 - INFO - orders - Fetched 0 open orders for user 4
2025-06-15 23:03:45,962 - INFO - orders - Fetched 1 pending orders for user 4
2025-06-15 23:03:45,966 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 1 pending orders
2025-06-15 23:07:10,409 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-15 23:07:10,412 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-15 23:07:10,412 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-15 23:07:10,412 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-15 23:07:11,178 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 0.01
2025-06-15 23:07:11,178 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-15 23:07:11,180 - INFO - orders - [ORDER_MARGIN_CALC] Got BUY price for AUDCAD from cache: 0.8826800000
2025-06-15 23:07:11,180 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-15 23:07:11,180 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 0.01 * 100000.00000000 = 1000.0000000000
2025-06-15 23:07:11,180 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (1000.0000000000 * 0.8826800000) / 100.00 = 8.826800000000000000 (rounded to 8.83)
2025-06-15 23:07:11,180 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-15 23:07:11,180 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 0.01 * 10.0000 = 0.100000
2025-06-15 23:07:11,181 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-15 23:07:11,181 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 8.83 CAD
2025-06-15 23:07:11,181 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.83 CAD to USD for margin for AUDCAD BUY order (user_id: 4, position: )
2025-06-15 23:07:11,181 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:07:11,184 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:07:11,184 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:07:11,185 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:07:11,187 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3578800000'), 'o': Decimal('1.3578500000')}
2025-06-15 23:07:11,187 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3578800000
2025-06-15 23:07:11,187 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.83 CAD / 1.3578800000 = 6.502783751141485256429139541 USD
2025-06-15 23:07:11,187 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 8.83 CAD -> 6.502783751141485256429139541 USD
2025-06-15 23:07:11,187 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=6.502783751141485256429139541, price=0.8826800000, contract_value=1000.0000000000, commission=0.10
2025-06-15 23:07:11,187 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=0.10
2025-06-15 23:07:11,200 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-15 23:07:11,201 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-15 23:07:11,201 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 23:07:11,201 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=0.01, StoredMargin=6.502783751141485256429139541
2025-06-15 23:07:11,201 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.2783751141485256429139541
2025-06-15 23:07:11,201 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.01, TotalSellQty=0, NetQty=0.01
2025-06-15 23:07:11,201 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.2783751141485256429139541')], HighestMarginPerLot=650.2783751141485256429139541
2025-06-15 23:07:11,202 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.50, ContributingOrders=1 (based on individual stored margins)
2025-06-15 23:07:11,202 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=6.50, AdditionalMargin=6.50
2025-06-15 23:07:11,221 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '7737489966', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8826800000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': Decimal('6.502783751141485256429139541'), 'commission': Decimal('0.10'), 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'OPEN'}
2025-06-15 23:07:11,255 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 2006.01000000
2025-06-15 23:07:11,267 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-15 23:07:11,398 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-15 23:07:11,529 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '7737489966', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88268000'), 'order_quantity': Decimal('0.01000000'), 'contract_value': Decimal('1000.00000000'), 'margin': Decimal('6.50278375'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-15 23:07:11,834 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 7737489966 (order_status=PROCESSING, margin not updated in DB)
2025-06-15 23:07:11,841 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:07:11,841 - INFO - orders - Using order model: UserOrder
2025-06-15 23:07:11,848 - INFO - orders - Fetched 0 open orders for user 4
2025-06-15 23:07:11,857 - INFO - orders - Fetched 1 pending orders for user 4
2025-06-15 23:07:11,867 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 1 pending orders
2025-06-15 23:07:42,346 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '7737489966', 'order_status': 'OPEN', 'order_type': 'BUY', 'order_price': Decimal('0.89')}
2025-06-15 23:07:42,378 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.90 CAD to USD for margin (user_id: 4, position: 7737489966)
2025-06-15 23:07:42,378 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:07:42,381 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:07:42,381 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:07:42,381 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:07:42,386 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3578500000'), 'o': Decimal('1.3578300000')}
2025-06-15 23:07:42,386 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3578500000
2025-06-15 23:07:42,386 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.90 CAD / 1.3578500000 = 6.554479508045807710719151600 USD
2025-06-15 23:07:42,390 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-15 23:07:42,390 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-15 23:07:42,390 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 23:07:42,390 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=0.01000000, StoredMargin=6.554479508045807710719151600
2025-06-15 23:07:42,390 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=655.44795080458077107191516
2025-06-15 23:07:42,390 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.01000000, TotalSellQty=0, NetQty=0.01000000
2025-06-15 23:07:42,390 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.44795080458077107191516')], HighestMarginPerLot=655.44795080458077107191516
2025-06-15 23:07:42,390 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.55, ContributingOrders=1 (based on individual stored margins)
2025-06-15 23:07:42,390 - INFO - orders - Updating user 4 margin from 2006.01000000 to 2012.56
2025-06-15 23:07:42,420 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:07:42,420 - INFO - orders - Using order model: UserOrder
2025-06-15 23:07:42,423 - INFO - orders - Fetched 1 open orders for user 4
2025-06-15 23:07:42,426 - INFO - orders - Fetched 1 pending orders for user 4
2025-06-15 23:07:42,428 - INFO - orders - Updated static orders cache for user 4 with 1 open orders and 1 pending orders
2025-06-15 23:08:20,886 - INFO - orders - Close order request received - Order ID: 7737489966, User ID: 4, User Type: live
2025-06-15 23:08:20,886 - INFO - orders - Close request details - Price: 0.88257, Type: BUY, Symbol: AUDCAD
2025-06-15 23:08:20,886 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x00000209303D2210>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-15 23:08:20,886 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-15 23:08:20,886 - INFO - orders - Request to close order 7737489966 for user 4 (User) with price 0.88257. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-15 23:08:20,892 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-15 23:08:20,892 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-15 23:08:51,075 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 9.000000000000000000000000 CAD to USD for PnL (user_id: 4, position: 7737489966)
2025-06-15 23:08:51,075 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:08:51,077 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:08:51,077 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:08:51,077 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:08:51,079 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3579500000'), 'o': Decimal('1.3579200000')}
2025-06-15 23:08:51,079 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3579500000
2025-06-15 23:08:51,079 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 9.000000000000000000000000 CAD / 1.3579500000 = 6.627637247321329945874295814 USD
2025-06-15 23:08:51,082 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 23:08:51,082 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 73): Type=BUY, Qty=0.01000000, StoredMargin=6.55447951
2025-06-15 23:08:51,082 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=655.447951
2025-06-15 23:08:51,083 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.01000000, TotalSellQty=0, NetQty=0.01000000
2025-06-15 23:08:51,083 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.447951')], HighestMarginPerLot=655.447951
2025-06-15 23:08:51,083 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.55, ContributingOrders=1 (based on individual stored margins)
2025-06-15 23:08:51,083 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 23:08:51,083 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 73): Type=BUY, Qty=0.01000000, StoredMargin=6.55447951
2025-06-15 23:08:51,083 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=655.447951
2025-06-15 23:08:51,083 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.01000000, TotalSellQty=0, NetQty=0.01000000
2025-06-15 23:08:51,083 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.447951')], HighestMarginPerLot=655.447951
2025-06-15 23:08:51,083 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.55, ContributingOrders=1 (based on individual stored margins)
2025-06-15 23:08:51,124 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:08:51,124 - INFO - orders - Using order model: UserOrder
2025-06-15 23:08:51,126 - INFO - orders - Fetched 0 open orders for user 4
2025-06-15 23:08:51,130 - INFO - orders - Fetched 1 pending orders for user 4
2025-06-15 23:08:51,131 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 1 pending orders
2025-06-15 23:16:57,896 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 23:17:53,895 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '6589933905', 'order_status': 'OPEN', 'order_type': 'SELL', 'order_price': Decimal('0.88')}
2025-06-15 23:17:53,917 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.80 CAD to USD for margin (user_id: 4, position: 6589933905)
2025-06-15 23:17:53,917 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:17:53,919 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:17:53,919 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:17:53,920 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:17:53,921 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3584400000'), 'o': Decimal('1.3583800000')}
2025-06-15 23:17:53,921 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3584400000
2025-06-15 23:17:53,921 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.80 CAD / 1.3584400000 = 6.478018904036983598833956597 USD
2025-06-15 23:17:53,926 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-15 23:17:53,926 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-15 23:17:53,926 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 23:17:53,926 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=0.01000000, StoredMargin=6.478018904036983598833956597
2025-06-15 23:17:53,926 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=647.8018904036983598833956597
2025-06-15 23:17:53,926 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=0.01000000, NetQty=0.01000000
2025-06-15 23:17:53,926 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('647.8018904036983598833956597')], HighestMarginPerLot=647.8018904036983598833956597
2025-06-15 23:17:53,926 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.48, ContributingOrders=1 (based on individual stored margins)
2025-06-15 23:17:53,926 - INFO - orders - Updating user 4 margin from 2012.56000000 to 2019.04
2025-06-15 23:17:53,967 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:17:53,967 - INFO - orders - Using order model: UserOrder
2025-06-15 23:17:53,970 - INFO - orders - Fetched 1 open orders for user 4
2025-06-15 23:17:53,976 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-15 23:17:53,978 - INFO - orders - Updated static orders cache for user 4 with 1 open orders and 0 pending orders
2025-06-15 23:18:32,740 - INFO - orders - Close order request received - Order ID: 6589933905, User ID: 4, User Type: live
2025-06-15 23:18:32,740 - INFO - orders - Close request details - Price: 0.88283, Type: SELL, Symbol: AUDCAD
2025-06-15 23:18:32,741 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x0000022C7123C050>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-15 23:18:32,741 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-15 23:18:32,741 - INFO - orders - Request to close order 6589933905 for user 4 (User) with price 0.88283. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-15 23:18:32,748 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-15 23:18:32,748 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-15 23:19:01,419 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -19.000000000000000000000000 CAD to USD for PnL (user_id: 4, position: 6589933905)
2025-06-15 23:19:01,419 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:19:01,420 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:19:01,421 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:19:01,421 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:19:01,422 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3585300000'), 'o': Decimal('1.3584800000')}
2025-06-15 23:19:01,422 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3585300000
2025-06-15 23:19:01,422 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -19.000000000000000000000000 CAD / 1.3585300000 = -13.98570513717032380587841270 USD
2025-06-15 23:19:01,425 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 23:19:01,425 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 72): Type=SELL, Qty=0.01000000, StoredMargin=6.47801890
2025-06-15 23:19:01,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=647.80189
2025-06-15 23:19:01,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=0.01000000, NetQty=0.01000000
2025-06-15 23:19:01,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('647.80189')], HighestMarginPerLot=647.80189
2025-06-15 23:19:01,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.48, ContributingOrders=1 (based on individual stored margins)
2025-06-15 23:19:01,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 23:19:01,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 72): Type=SELL, Qty=0.01000000, StoredMargin=6.47801890
2025-06-15 23:19:01,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=647.80189
2025-06-15 23:19:01,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=0.01000000, NetQty=0.01000000
2025-06-15 23:19:01,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('647.80189')], HighestMarginPerLot=647.80189
2025-06-15 23:19:01,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.48, ContributingOrders=1 (based on individual stored margins)
2025-06-15 23:19:01,488 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:19:01,488 - INFO - orders - Using order model: UserOrder
2025-06-15 23:19:01,494 - INFO - orders - Fetched 0 open orders for user 4
2025-06-15 23:19:01,500 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-15 23:19:01,506 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-15 23:20:06,113 - INFO - orders - Service provider update request received: {"order_id":"7422527889","order_status":"PENDING","order_price":"0.88"}
2025-06-15 23:20:06,143 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:20:06,143 - INFO - orders - Using order model: UserOrder
2025-06-15 23:20:06,146 - INFO - orders - Fetched 0 open orders for user 4
2025-06-15 23:20:06,150 - INFO - orders - Fetched 1 pending orders for user 4
2025-06-15 23:20:06,154 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 1 pending orders
2025-06-15 23:20:34,251 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '7422527889', 'order_status': 'OPEN', 'order_type': 'BUY', 'order_price': Decimal('0.88')}
2025-06-15 23:20:34,264 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.80 CAD to USD for margin (user_id: 4, position: 7422527889)
2025-06-15 23:20:34,264 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:20:34,265 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:20:34,265 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:20:34,265 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:20:34,266 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3586600000'), 'o': Decimal('1.3586000000')}
2025-06-15 23:20:34,266 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3586600000
2025-06-15 23:20:34,266 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.80 CAD / 1.3586600000 = 6.476969955691637348564026320 USD
2025-06-15 23:20:34,270 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-15 23:20:34,270 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-15 23:20:34,270 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 23:20:34,270 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=0.01000000, StoredMargin=6.476969955691637348564026320
2025-06-15 23:20:34,270 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=647.696995569163734856402632
2025-06-15 23:20:34,270 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.01000000, TotalSellQty=0, NetQty=0.01000000
2025-06-15 23:20:34,270 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('647.696995569163734856402632')], HighestMarginPerLot=647.696995569163734856402632
2025-06-15 23:20:34,270 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.48, ContributingOrders=1 (based on individual stored margins)
2025-06-15 23:20:34,270 - INFO - orders - Updating user 4 margin from 2019.04000000 to 2025.52
2025-06-15 23:20:34,296 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:20:34,296 - INFO - orders - Using order model: UserOrder
2025-06-15 23:20:34,301 - INFO - orders - Fetched 1 open orders for user 4
2025-06-15 23:20:34,305 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-15 23:20:34,307 - INFO - orders - Updated static orders cache for user 4 with 1 open orders and 0 pending orders
2025-06-15 23:20:59,214 - INFO - orders - Close order request received - Order ID: 7422527889, User ID: 4, User Type: live
2025-06-15 23:20:59,215 - INFO - orders - Close request details - Price: 0.88262, Type: BUY, Symbol: AUDCAD
2025-06-15 23:20:59,215 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x0000022C70FAFED0>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-15 23:20:59,216 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-15 23:20:59,216 - INFO - orders - Request to close order 7422527889 for user 4 (User) with price 0.88262. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-15 23:20:59,228 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-15 23:20:59,228 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-15 23:22:22,269 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 19.000000000000000000000000 CAD to USD for PnL (user_id: 4, position: 7422527889)
2025-06-15 23:22:22,269 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:22:22,270 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:22:22,271 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:22:22,271 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:22:22,272 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3587800000'), 'o': Decimal('1.3587300000')}
2025-06-15 23:22:22,272 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3587800000
2025-06-15 23:22:22,272 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 19.000000000000000000000000 CAD / 1.3587800000 = 13.98313192716996128880319110 USD
2025-06-15 23:22:22,276 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 23:22:22,276 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 65): Type=BUY, Qty=0.01000000, StoredMargin=6.47696996
2025-06-15 23:22:22,276 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=647.696996
2025-06-15 23:22:22,276 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.01000000, TotalSellQty=0, NetQty=0.01000000
2025-06-15 23:22:22,276 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('647.696996')], HighestMarginPerLot=647.696996
2025-06-15 23:22:22,276 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.48, ContributingOrders=1 (based on individual stored margins)
2025-06-15 23:22:22,276 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 23:22:22,276 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 65): Type=BUY, Qty=0.01000000, StoredMargin=6.47696996
2025-06-15 23:22:22,276 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=647.696996
2025-06-15 23:22:22,276 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.01000000, TotalSellQty=0, NetQty=0.01000000
2025-06-15 23:22:22,276 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('647.696996')], HighestMarginPerLot=647.696996
2025-06-15 23:22:22,276 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.48, ContributingOrders=1 (based on individual stored margins)
2025-06-15 23:22:22,322 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:22:22,322 - INFO - orders - Using order model: UserOrder
2025-06-15 23:22:22,326 - INFO - orders - Fetched 0 open orders for user 4
2025-06-15 23:22:22,329 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-15 23:22:22,331 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-15 23:33:33,693 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 23:37:30,222 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 23:38:12,407 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 23:39:05,183 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-15 23:39:10,311 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-15 23:39:22,327 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-15 23:39:22,336 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-15 23:39:22,336 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-15 23:39:22,336 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-15 23:39:22,653 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 1
2025-06-15 23:39:22,654 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-15 23:39:22,660 - INFO - orders - [ORDER_MARGIN_CALC] Got BUY price for AUDCAD from cache: 0.8825500000
2025-06-15 23:39:22,660 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-15 23:39:22,660 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 1 * 100000.00000000 = 100000.00000000
2025-06-15 23:39:22,660 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (100000.00000000 * 0.8825500000) / 100.00 = 882.5500000000000000 (rounded to 882.55)
2025-06-15 23:39:22,660 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-15 23:39:22,660 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 1 * 10.0000 = 10.0000
2025-06-15 23:39:22,661 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-15 23:39:22,661 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 882.55 CAD
2025-06-15 23:39:22,661 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 882.55 CAD to USD for margin for AUDCAD BUY order (user_id: 4, position: )
2025-06-15 23:39:22,661 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:39:22,664 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:39:22,664 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:39:22,664 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:39:22,667 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3591500000'), 'o': Decimal('1.3591100000')}
2025-06-15 23:39:22,667 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3591500000
2025-06-15 23:39:22,667 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 882.55 CAD / 1.3591500000 = 649.3396608174226538645476953 USD
2025-06-15 23:39:22,667 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 882.55 CAD -> 649.3396608174226538645476953 USD
2025-06-15 23:39:22,667 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=649.3396608174226538645476953, price=0.8825500000, contract_value=100000.00000000, commission=10.00
2025-06-15 23:39:22,667 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=10.00
2025-06-15 23:39:22,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-15 23:39:22,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-15 23:39:22,685 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 23:39:22,685 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=649.3396608174226538645476953
2025-06-15 23:39:22,685 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.3396608174226538645476953
2025-06-15 23:39:22,685 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1, TotalSellQty=0, NetQty=1
2025-06-15 23:39:22,685 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.3396608174226538645476953')], HighestMarginPerLot=649.3396608174226538645476953
2025-06-15 23:39:22,685 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=649.34, ContributingOrders=1 (based on individual stored margins)
2025-06-15 23:39:22,685 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=649.34, AdditionalMargin=649.34
2025-06-15 23:39:22,697 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '5286404504', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8825500000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('649.3396608174226538645476953'), 'commission': Decimal('10.00'), 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'OPEN'}
2025-06-15 23:39:22,759 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 2025.52000000
2025-06-15 23:39:22,779 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-15 23:39:22,932 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-15 23:39:23,104 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '5286404504', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88255000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('649.33966082'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-15 23:39:23,427 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 5286404504 (order_status=PROCESSING, margin not updated in DB)
2025-06-15 23:39:23,437 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:39:23,437 - INFO - orders - Using order model: UserOrder
2025-06-15 23:39:23,449 - INFO - orders - Fetched 0 open orders for user 4
2025-06-15 23:39:23,478 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-15 23:39:23,487 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-15 23:40:17,323 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '5286404504', 'order_status': 'OPEN', 'order_type': 'BUY', 'order_price': Decimal('0.8821')}
2025-06-15 23:40:17,351 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 882.10 CAD to USD for margin (user_id: 4, position: 5286404504)
2025-06-15 23:40:17,351 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:40:17,354 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:40:17,355 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:40:17,355 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:40:17,358 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3590500000'), 'o': Decimal('1.3590000000')}
2025-06-15 23:40:17,358 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3590500000
2025-06-15 23:40:17,358 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 882.10 CAD / 1.3590500000 = 649.0563261101504727567050513 USD
2025-06-15 23:40:17,365 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-15 23:40:17,365 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-15 23:40:17,366 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 23:40:17,366 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=1.00000000, StoredMargin=649.0563261101504727567050513
2025-06-15 23:40:17,366 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.0563261101504727567050513
2025-06-15 23:40:17,366 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-15 23:40:17,366 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.0563261101504727567050513')], HighestMarginPerLot=649.0563261101504727567050513
2025-06-15 23:40:17,366 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=649.06, ContributingOrders=1 (based on individual stored margins)
2025-06-15 23:40:17,367 - INFO - orders - Updating user 4 margin from 2025.52000000 to 2674.58
2025-06-15 23:40:17,439 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:40:17,439 - INFO - orders - Using order model: UserOrder
2025-06-15 23:40:17,448 - INFO - orders - Fetched 1 open orders for user 4
2025-06-15 23:40:17,462 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-15 23:40:17,468 - INFO - orders - Updated static orders cache for user 4 with 1 open orders and 0 pending orders
2025-06-15 23:40:37,808 - INFO - orders - Close order request received - Order ID: 5286404504, User ID: 4, User Type: live
2025-06-15 23:40:37,809 - INFO - orders - Close request details - Price: 0.8826, Type: BUY, Symbol: AUDCAD
2025-06-15 23:40:37,809 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x000001D4BA8DE850>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-15 23:40:37,810 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-15 23:40:37,810 - INFO - orders - Request to close order 5286404504 for user 4 (User) with price 0.8826. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-15 23:40:37,825 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-15 23:40:37,825 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-15 23:45:09,210 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 23:45:23,704 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '3144933355', 'close_price': Decimal('0.899'), 'swap': Decimal('0'), 'close_message': 'Order closed by service provider.'}
2025-06-15 23:45:23,704 - INFO - orders - Service Provider Execution: Applying generic update for transition from OPEN to OPEN
2025-06-15 23:45:23,748 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:45:23,748 - INFO - orders - Using order model: UserOrder
2025-06-15 23:45:23,755 - INFO - orders - Fetched 1 open orders for user 4
2025-06-15 23:45:23,762 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-15 23:45:23,765 - INFO - orders - Updated static orders cache for user 4 with 1 open orders and 0 pending orders
2025-06-15 23:46:16,165 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '3144933355', 'order_status': 'CLOSED', 'close_price': Decimal('0.899'), 'swap': Decimal('0'), 'close_message': 'Order closed by service provider.'}
2025-06-15 23:50:03,187 - INFO - orders - Application starting up - Orders logging initialized
2025-06-15 23:51:27,920 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '3144933355', 'order_status': 'CLOSED', 'close_price': Decimal('0.899'), 'swap': Decimal('0'), 'close_message': 'Order closed by service provider.'}
2025-06-15 23:51:27,945 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 1690.000000000000000000000000 CAD to USD for PnL (user_id: 4, position: 3144933355)
2025-06-15 23:51:27,945 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:51:27,950 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:51:27,950 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:51:27,950 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:51:27,954 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3588800000'), 'o': Decimal('1.3588400000')}
2025-06-15 23:51:27,954 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3588800000
2025-06-15 23:51:27,954 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 1690.000000000000000000000000 CAD / 1.3588800000 = 1243.671258683621806193335688 USD
2025-06-15 23:51:27,959 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 23:51:27,959 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 74): Type=BUY, Qty=1.00000000, StoredMargin=649.05632611
2025-06-15 23:51:27,959 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.05632611
2025-06-15 23:51:27,959 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-15 23:51:27,959 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.05632611')], HighestMarginPerLot=649.05632611
2025-06-15 23:51:27,959 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=649.06, ContributingOrders=1 (based on individual stored margins)
2025-06-15 23:51:27,959 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-15 23:51:27,959 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-15 23:51:28,029 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:51:28,029 - INFO - orders - Using order model: UserOrder
2025-06-15 23:51:28,034 - INFO - orders - Fetched 0 open orders for user 4
2025-06-15 23:51:28,038 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-15 23:51:28,040 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-15 23:53:03,063 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-15 23:53:25,328 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-15 23:53:27,849 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-15 23:53:39,699 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-15 23:53:39,706 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-15 23:53:39,706 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-15 23:53:39,706 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-15 23:53:40,853 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 0.01
2025-06-15 23:53:40,854 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-15 23:53:40,857 - INFO - orders - [ORDER_MARGIN_CALC] Got BUY price for AUDCAD from cache: 0.8834800000
2025-06-15 23:53:40,857 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-15 23:53:40,857 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 0.01 * 100000.00000000 = 1000.0000000000
2025-06-15 23:53:40,858 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (1000.0000000000 * 0.8834800000) / 100.00 = 8.834800000000000000 (rounded to 8.83)
2025-06-15 23:53:40,858 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-15 23:53:40,858 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 0.01 * 10.0000 = 0.100000
2025-06-15 23:53:40,858 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-15 23:53:40,858 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 8.83 CAD
2025-06-15 23:53:40,858 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.83 CAD to USD for margin for AUDCAD BUY order (user_id: 4, position: )
2025-06-15 23:53:40,858 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:53:40,860 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:53:40,860 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:53:40,860 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:53:40,863 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3579600000'), 'o': Decimal('1.3579000000')}
2025-06-15 23:53:40,863 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3579600000
2025-06-15 23:53:40,863 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.83 CAD / 1.3579600000 = 6.502400659813249285693245751 USD
2025-06-15 23:53:40,863 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 8.83 CAD -> 6.502400659813249285693245751 USD
2025-06-15 23:53:40,863 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=6.502400659813249285693245751, price=0.8834800000, contract_value=1000.0000000000, commission=0.10
2025-06-15 23:53:40,863 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=0.10
2025-06-15 23:53:40,872 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-15 23:53:40,872 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-15 23:53:40,873 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 23:53:40,873 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=0.01, StoredMargin=6.502400659813249285693245751
2025-06-15 23:53:40,873 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.2400659813249285693245751
2025-06-15 23:53:40,873 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.01, TotalSellQty=0, NetQty=0.01
2025-06-15 23:53:40,875 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.2400659813249285693245751')], HighestMarginPerLot=650.2400659813249285693245751
2025-06-15 23:53:40,875 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.50, ContributingOrders=1 (based on individual stored margins)
2025-06-15 23:53:40,875 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=6.50, AdditionalMargin=6.50
2025-06-15 23:53:40,899 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '1011010363', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8834800000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': Decimal('6.502400659813249285693245751'), 'commission': Decimal('0.10'), 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'OPEN'}
2025-06-15 23:53:40,948 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-15 23:53:40,972 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-15 23:53:41,181 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-15 23:53:41,305 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '1011010363', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88348000'), 'order_quantity': Decimal('0.01000000'), 'contract_value': Decimal('1000.00000000'), 'margin': Decimal('6.50240066'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-15 23:53:41,599 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 1011010363 (order_status=PROCESSING, margin not updated in DB)
2025-06-15 23:53:41,610 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:53:41,610 - INFO - orders - Using order model: UserOrder
2025-06-15 23:53:41,627 - INFO - orders - Fetched 0 open orders for user 4
2025-06-15 23:53:41,657 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-15 23:53:41,664 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-15 23:54:19,995 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '1011010363', 'order_status': 'OPEN', 'order_type': 'BUY', 'order_price': Decimal('0.8821')}
2025-06-15 23:54:20,006 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.82 CAD to USD for margin (user_id: 4, position: 1011010363)
2025-06-15 23:54:20,006 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:54:20,006 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:54:20,007 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:54:20,007 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:54:20,008 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3580400000'), 'o': Decimal('1.3580400000')}
2025-06-15 23:54:20,008 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3580400000
2025-06-15 23:54:20,008 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.82 CAD / 1.3580400000 = 6.494654060263320668021560484 USD
2025-06-15 23:54:20,011 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-15 23:54:20,012 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-15 23:54:20,012 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 23:54:20,012 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=0.01000000, StoredMargin=6.494654060263320668021560484
2025-06-15 23:54:20,012 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.4654060263320668021560484
2025-06-15 23:54:20,012 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.01000000, TotalSellQty=0, NetQty=0.01000000
2025-06-15 23:54:20,012 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.4654060263320668021560484')], HighestMarginPerLot=649.4654060263320668021560484
2025-06-15 23:54:20,012 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.49, ContributingOrders=1 (based on individual stored margins)
2025-06-15 23:54:20,012 - INFO - orders - Updating user 4 margin from 0E-8 to 6.49
2025-06-15 23:54:20,043 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:54:20,043 - INFO - orders - Using order model: UserOrder
2025-06-15 23:54:20,047 - INFO - orders - Fetched 1 open orders for user 4
2025-06-15 23:54:20,052 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-15 23:54:20,054 - INFO - orders - Updated static orders cache for user 4 with 1 open orders and 0 pending orders
2025-06-15 23:54:50,225 - INFO - orders - Close order request received - Order ID: 1011010363, User ID: 4, User Type: live
2025-06-15 23:54:50,225 - INFO - orders - Close request details - Price: 0.88361, Type: BUY, Symbol: AUDCAD
2025-06-15 23:54:50,225 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x00000228EA2FDD10>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-15 23:54:50,226 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-15 23:54:50,226 - INFO - orders - Request to close order 1011010363 for user 4 (User) with price 0.88361. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-15 23:54:50,230 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-15 23:54:50,230 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-15 23:55:15,031 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '1530011416', 'order_status': 'CLOSED', 'close_price': Decimal('0.899'), 'swap': Decimal('0'), 'close_message': 'Order closed by service provider.'}
2025-06-15 23:55:15,043 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 16.900000000000000000000000 CAD to USD for PnL (user_id: 4, position: 1011010363)
2025-06-15 23:55:15,043 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:55:15,046 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:55:15,046 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:55:15,046 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:55:15,048 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3580200000'), 'o': Decimal('1.3579900000')}
2025-06-15 23:55:15,048 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3580200000
2025-06-15 23:55:15,048 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 16.900000000000000000000000 CAD / 1.3580200000 = 12.44458844494190070838426533 USD
2025-06-15 23:55:15,053 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 23:55:15,053 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 75): Type=BUY, Qty=0.01000000, StoredMargin=6.49465406
2025-06-15 23:55:15,053 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.465406
2025-06-15 23:55:15,053 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.01000000, TotalSellQty=0, NetQty=0.01000000
2025-06-15 23:55:15,053 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.465406')], HighestMarginPerLot=649.465406
2025-06-15 23:55:15,053 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.49, ContributingOrders=1 (based on individual stored margins)
2025-06-15 23:55:15,053 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-15 23:55:15,053 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-15 23:55:15,090 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:55:15,090 - INFO - orders - Using order model: UserOrder
2025-06-15 23:55:15,094 - INFO - orders - Fetched 0 open orders for user 4
2025-06-15 23:55:15,096 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-15 23:55:15,098 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-15 23:55:33,746 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-15 23:55:33,761 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-15 23:55:33,761 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-15 23:55:33,761 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-15 23:55:34,055 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 0.01
2025-06-15 23:55:34,055 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-15 23:55:34,057 - INFO - orders - [ORDER_MARGIN_CALC] Got BUY price for AUDCAD from cache: 0.8835300000
2025-06-15 23:55:34,057 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-15 23:55:34,057 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 0.01 * 100000.00000000 = 1000.0000000000
2025-06-15 23:55:34,057 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (1000.0000000000 * 0.8835300000) / 100.00 = 8.835300000000000000 (rounded to 8.84)
2025-06-15 23:55:34,057 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-15 23:55:34,057 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 0.01 * 10.0000 = 0.100000
2025-06-15 23:55:34,057 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-15 23:55:34,057 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 8.84 CAD
2025-06-15 23:55:34,057 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.84 CAD to USD for margin for AUDCAD BUY order (user_id: 4, position: )
2025-06-15 23:55:34,057 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:55:34,059 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:55:34,059 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:55:34,059 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:55:34,061 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3580200000'), 'o': Decimal('1.3579800000')}
2025-06-15 23:55:34,061 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3580200000
2025-06-15 23:55:34,061 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.84 CAD / 1.3580200000 = 6.509477032738840370539461864 USD
2025-06-15 23:55:34,061 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 8.84 CAD -> 6.509477032738840370539461864 USD
2025-06-15 23:55:34,061 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=6.509477032738840370539461864, price=0.8835300000, contract_value=1000.0000000000, commission=0.10
2025-06-15 23:55:34,061 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=0.10
2025-06-15 23:55:34,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-15 23:55:34,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-15 23:55:34,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 23:55:34,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=0.01, StoredMargin=6.509477032738840370539461864
2025-06-15 23:55:34,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.9477032738840370539461864
2025-06-15 23:55:34,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.01, TotalSellQty=0, NetQty=0.01
2025-06-15 23:55:34,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.9477032738840370539461864')], HighestMarginPerLot=650.9477032738840370539461864
2025-06-15 23:55:34,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.51, ContributingOrders=1 (based on individual stored margins)
2025-06-15 23:55:34,065 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=6.51, AdditionalMargin=6.51
2025-06-15 23:55:34,068 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '4740032673', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8835300000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': Decimal('6.509477032738840370539461864'), 'commission': Decimal('0.10'), 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'OPEN'}
2025-06-15 23:55:34,090 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-15 23:55:34,128 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-15 23:55:34,359 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-15 23:55:34,566 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '4740032673', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88353000'), 'order_quantity': Decimal('0.01000000'), 'contract_value': Decimal('1000.00000000'), 'margin': Decimal('6.50947703'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-15 23:55:34,838 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 4740032673 (order_status=PROCESSING, margin not updated in DB)
2025-06-15 23:55:34,849 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:55:34,849 - INFO - orders - Using order model: UserOrder
2025-06-15 23:55:34,854 - INFO - orders - Fetched 0 open orders for user 4
2025-06-15 23:55:34,857 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-15 23:55:34,862 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-15 23:55:36,527 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-15 23:55:36,532 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-15 23:55:36,532 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-15 23:55:36,532 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-15 23:55:36,870 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 0.01
2025-06-15 23:55:36,870 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-15 23:55:36,873 - INFO - orders - [ORDER_MARGIN_CALC] Got BUY price for AUDCAD from cache: 0.8836000000
2025-06-15 23:55:36,873 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-15 23:55:36,873 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 0.01 * 100000.00000000 = 1000.0000000000
2025-06-15 23:55:36,873 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (1000.0000000000 * 0.8836000000) / 100.00 = 8.836000000000000000 (rounded to 8.84)
2025-06-15 23:55:36,873 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-15 23:55:36,873 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 0.01 * 10.0000 = 0.100000
2025-06-15 23:55:36,873 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-15 23:55:36,873 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 8.84 CAD
2025-06-15 23:55:36,873 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.84 CAD to USD for margin for AUDCAD BUY order (user_id: 4, position: )
2025-06-15 23:55:36,873 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:55:36,877 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:55:36,877 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:55:36,877 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:55:36,881 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3580100000'), 'o': Decimal('1.3579800000')}
2025-06-15 23:55:36,881 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3580100000
2025-06-15 23:55:36,881 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.84 CAD / 1.3580100000 = 6.509524966679184983910280484 USD
2025-06-15 23:55:36,881 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 8.84 CAD -> 6.509524966679184983910280484 USD
2025-06-15 23:55:36,881 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=6.509524966679184983910280484, price=0.8836000000, contract_value=1000.0000000000, commission=0.10
2025-06-15 23:55:36,881 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=0.10
2025-06-15 23:55:36,884 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-15 23:55:36,884 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-15 23:55:36,884 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 23:55:36,884 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=0.01, StoredMargin=6.509524966679184983910280484
2025-06-15 23:55:36,884 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.9524966679184983910280484
2025-06-15 23:55:36,885 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.01, TotalSellQty=0, NetQty=0.01
2025-06-15 23:55:36,885 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.9524966679184983910280484')], HighestMarginPerLot=650.9524966679184983910280484
2025-06-15 23:55:36,885 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.51, ContributingOrders=1 (based on individual stored margins)
2025-06-15 23:55:36,885 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=6.51, AdditionalMargin=6.51
2025-06-15 23:55:36,889 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '4221279525', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8836000000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': Decimal('6.509524966679184983910280484'), 'commission': Decimal('0.10'), 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'OPEN'}
2025-06-15 23:55:36,905 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-15 23:55:36,918 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-15 23:55:37,104 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-15 23:55:37,251 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '4221279525', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88360000'), 'order_quantity': Decimal('0.01000000'), 'contract_value': Decimal('1000.00000000'), 'margin': Decimal('6.50952497'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-15 23:55:37,587 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 4221279525 (order_status=PROCESSING, margin not updated in DB)
2025-06-15 23:55:37,592 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:55:37,592 - INFO - orders - Using order model: UserOrder
2025-06-15 23:55:37,596 - INFO - orders - Fetched 0 open orders for user 4
2025-06-15 23:55:37,601 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-15 23:55:37,603 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-15 23:56:27,697 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 0.01
2025-06-15 23:56:27,708 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-15 23:56:27,708 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-15 23:56:27,708 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-15 23:56:28,070 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD SELL order, quantity: 0.01
2025-06-15 23:56:28,070 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-15 23:56:28,076 - INFO - orders - [ORDER_MARGIN_CALC] Got SELL price for AUDCAD from cache: 0.8836000000
2025-06-15 23:56:28,076 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-15 23:56:28,076 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 0.01 * 100000.00000000 = 1000.0000000000
2025-06-15 23:56:28,076 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (1000.0000000000 * 0.8836000000) / 100.00 = 8.836000000000000000 (rounded to 8.84)
2025-06-15 23:56:28,077 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-15 23:56:28,077 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 0.01 * 10.0000 = 0.100000
2025-06-15 23:56:28,077 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-15 23:56:28,077 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 8.84 CAD
2025-06-15 23:56:28,077 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.84 CAD to USD for margin for AUDCAD SELL order (user_id: 4, position: )
2025-06-15 23:56:28,077 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:56:28,079 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:56:28,079 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:56:28,079 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:56:28,081 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3582000000'), 'o': Decimal('1.3581700000')}
2025-06-15 23:56:28,081 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3582000000
2025-06-15 23:56:28,082 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.84 CAD / 1.3582000000 = 6.508614342512148431747901635 USD
2025-06-15 23:56:28,082 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 8.84 CAD -> 6.508614342512148431747901635 USD
2025-06-15 23:56:28,082 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD SELL: margin=6.508614342512148431747901635, price=0.8836000000, contract_value=1000.0000000000, commission=0.10
2025-06-15 23:56:28,082 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=0.10
2025-06-15 23:56:28,085 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-15 23:56:28,085 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-15 23:56:28,085 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 23:56:28,085 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=0.01, StoredMargin=6.508614342512148431747901635
2025-06-15 23:56:28,085 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.8614342512148431747901635
2025-06-15 23:56:28,085 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=0.01, NetQty=0.01
2025-06-15 23:56:28,085 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.8614342512148431747901635')], HighestMarginPerLot=650.8614342512148431747901635
2025-06-15 23:56:28,085 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.51, ContributingOrders=1 (based on individual stored margins)
2025-06-15 23:56:28,085 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=6.51, AdditionalMargin=6.51
2025-06-15 23:56:28,087 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '1946553372', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8836000000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': Decimal('6.508614342512148431747901635'), 'commission': Decimal('0.10'), 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'OPEN'}
2025-06-15 23:56:28,113 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-15 23:56:28,129 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-15 23:56:28,264 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-15 23:56:28,383 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '1946553372', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88360000'), 'order_quantity': Decimal('0.01000000'), 'contract_value': Decimal('1000.00000000'), 'margin': Decimal('6.50861434'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-15 23:56:28,686 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 1946553372 (order_status=PROCESSING, margin not updated in DB)
2025-06-15 23:56:28,690 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:56:28,690 - INFO - orders - Using order model: UserOrder
2025-06-15 23:56:28,694 - INFO - orders - Fetched 0 open orders for user 4
2025-06-15 23:56:28,697 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-15 23:56:28,701 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-15 23:56:50,801 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '4740032673', 'order_status': 'OPEN', 'order_type': 'BUY', 'order_price': Decimal('0.8821')}
2025-06-15 23:56:50,820 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.82 CAD to USD for margin (user_id: 4, position: 4740032673)
2025-06-15 23:56:50,820 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:56:50,823 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:56:50,823 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:56:50,823 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:56:50,826 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3581400000'), 'o': Decimal('1.3581200000')}
2025-06-15 23:56:50,826 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3581400000
2025-06-15 23:56:50,826 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.82 CAD / 1.3581400000 = 6.494175858158952685290176270 USD
2025-06-15 23:56:50,831 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-15 23:56:50,831 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-15 23:56:50,831 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 23:56:50,832 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=0.01000000, StoredMargin=6.494175858158952685290176270
2025-06-15 23:56:50,832 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.417585815895268529017627
2025-06-15 23:56:50,832 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.01000000, TotalSellQty=0, NetQty=0.01000000
2025-06-15 23:56:50,832 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.417585815895268529017627')], HighestMarginPerLot=649.417585815895268529017627
2025-06-15 23:56:50,832 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.49, ContributingOrders=1 (based on individual stored margins)
2025-06-15 23:56:50,832 - INFO - orders - Updating user 4 margin from 0E-8 to 6.49
2025-06-15 23:56:50,863 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:56:50,863 - INFO - orders - Using order model: UserOrder
2025-06-15 23:56:50,867 - INFO - orders - Fetched 1 open orders for user 4
2025-06-15 23:56:50,872 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-15 23:56:50,874 - INFO - orders - Updated static orders cache for user 4 with 1 open orders and 0 pending orders
2025-06-15 23:57:12,549 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '1946553372', 'order_status': 'OPEN', 'order_type': 'BUY', 'order_price': Decimal('0.8821')}
2025-06-15 23:57:12,567 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.82 CAD to USD for margin (user_id: 4, position: 1946553372)
2025-06-15 23:57:12,567 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:57:12,571 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:57:12,571 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:57:12,571 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:57:12,574 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3582300000'), 'o': Decimal('1.3582100000')}
2025-06-15 23:57:12,574 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3582300000
2025-06-15 23:57:12,574 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.82 CAD / 1.3582300000 = 6.493745536470259087194363252 USD
2025-06-15 23:57:12,578 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-15 23:57:12,578 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 76): Type=BUY, Qty=0.01000000, StoredMargin=6.49417586
2025-06-15 23:57:12,578 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.417586
2025-06-15 23:57:12,578 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.01000000, TotalSellQty=0, NetQty=0.01000000
2025-06-15 23:57:12,578 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.417586')], HighestMarginPerLot=649.417586
2025-06-15 23:57:12,578 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.49, ContributingOrders=1 (based on individual stored margins)
2025-06-15 23:57:12,578 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 2
2025-06-15 23:57:12,578 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 76): Type=BUY, Qty=0.01000000, StoredMargin=6.49417586
2025-06-15 23:57:12,578 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.417586
2025-06-15 23:57:12,579 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=BUY, Qty=0.01000000, StoredMargin=6.493745536470259087194363252
2025-06-15 23:57:12,579 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=649.3745536470259087194363252
2025-06-15 23:57:12,579 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.02000000, TotalSellQty=0, NetQty=0.02000000
2025-06-15 23:57:12,579 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.417586'), Decimal('649.3745536470259087194363252')], HighestMarginPerLot=649.417586
2025-06-15 23:57:12,579 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=12.99, ContributingOrders=2 (based on individual stored margins)
2025-06-15 23:57:12,579 - INFO - orders - Updating user 4 margin from 6.49000000 to 12.99
2025-06-15 23:57:12,616 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:57:12,616 - INFO - orders - Using order model: UserOrder
2025-06-15 23:57:12,621 - INFO - orders - Fetched 2 open orders for user 4
2025-06-15 23:57:12,624 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-15 23:57:12,627 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 0 pending orders
2025-06-15 23:58:03,982 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '4221279525', 'order_status': 'OPEN', 'order_type': 'SELL', 'order_price': Decimal('0.8821')}
2025-06-15 23:58:03,991 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.82 CAD to USD for margin (user_id: 4, position: 4221279525)
2025-06-15 23:58:03,992 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:58:03,993 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:58:03,993 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:58:03,993 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:58:03,995 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3581000000'), 'o': Decimal('1.3580700000')}
2025-06-15 23:58:03,995 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3581000000
2025-06-15 23:58:03,995 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.82 CAD / 1.3581000000 = 6.494367130550033134526176276 USD
2025-06-15 23:58:03,999 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 2
2025-06-15 23:58:03,999 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 76): Type=BUY, Qty=0.01000000, StoredMargin=6.49417586
2025-06-15 23:58:03,999 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.417586
2025-06-15 23:58:03,999 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 78): Type=BUY, Qty=0.01000000, StoredMargin=6.49374554
2025-06-15 23:58:03,999 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=649.374554
2025-06-15 23:58:03,999 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.02000000, TotalSellQty=0, NetQty=0.02000000
2025-06-15 23:58:03,999 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.417586'), Decimal('649.374554')], HighestMarginPerLot=649.417586
2025-06-15 23:58:03,999 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=12.99, ContributingOrders=2 (based on individual stored margins)
2025-06-15 23:58:03,999 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 3
2025-06-15 23:58:03,999 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 76): Type=BUY, Qty=0.01000000, StoredMargin=6.49417586
2025-06-15 23:58:03,999 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.417586
2025-06-15 23:58:03,999 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 78): Type=BUY, Qty=0.01000000, StoredMargin=6.49374554
2025-06-15 23:58:03,999 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=649.374554
2025-06-15 23:58:03,999 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: NEW_UNSAVED): Type=SELL, Qty=0.01000000, StoredMargin=6.494367130550033134526176276
2025-06-15 23:58:03,999 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=649.4367130550033134526176276
2025-06-15 23:58:03,999 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.02000000, TotalSellQty=0.01000000, NetQty=0.02000000
2025-06-15 23:58:03,999 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.417586'), Decimal('649.374554'), Decimal('649.4367130550033134526176276')], HighestMarginPerLot=649.4367130550033134526176276
2025-06-15 23:58:03,999 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=12.99, ContributingOrders=3 (based on individual stored margins)
2025-06-15 23:58:03,999 - INFO - orders - Updating user 4 margin from 12.99000000 to 12.99
2025-06-15 23:58:04,028 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:58:04,028 - INFO - orders - Using order model: UserOrder
2025-06-15 23:58:04,032 - INFO - orders - Fetched 3 open orders for user 4
2025-06-15 23:58:04,036 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-15 23:58:04,038 - INFO - orders - Updated static orders cache for user 4 with 3 open orders and 0 pending orders
2025-06-15 23:58:20,365 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 0.01
2025-06-15 23:58:20,370 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-15 23:58:20,370 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-15 23:58:20,370 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-15 23:58:21,018 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD SELL order, quantity: 0.01
2025-06-15 23:58:21,018 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-15 23:58:21,020 - INFO - orders - [ORDER_MARGIN_CALC] Got SELL price for AUDCAD from cache: 0.8837000000
2025-06-15 23:58:21,020 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-15 23:58:21,020 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 0.01 * 100000.00000000 = 1000.0000000000
2025-06-15 23:58:21,020 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (1000.0000000000 * 0.8837000000) / 100.00 = 8.837000000000000000 (rounded to 8.84)
2025-06-15 23:58:21,020 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-15 23:58:21,020 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 0.01 * 10.0000 = 0.100000
2025-06-15 23:58:21,020 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-15 23:58:21,020 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 8.84 CAD
2025-06-15 23:58:21,020 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.84 CAD to USD for margin for AUDCAD SELL order (user_id: 4, position: )
2025-06-15 23:58:21,020 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:58:21,021 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:58:21,021 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:58:21,021 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:58:21,023 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3581000000'), 'o': Decimal('1.3580700000')}
2025-06-15 23:58:21,023 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3581000000
2025-06-15 23:58:21,023 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.84 CAD / 1.3581000000 = 6.509093586628377880862970326 USD
2025-06-15 23:58:21,023 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 8.84 CAD -> 6.509093586628377880862970326 USD
2025-06-15 23:58:21,023 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD SELL: margin=6.509093586628377880862970326, price=0.8837000000, contract_value=1000.0000000000, commission=0.10
2025-06-15 23:58:21,023 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=0.10
2025-06-15 23:58:21,026 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 3
2025-06-15 23:58:21,026 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 76): Type=BUY, Qty=0.01000000, StoredMargin=6.49417586
2025-06-15 23:58:21,026 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.417586
2025-06-15 23:58:21,026 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 77): Type=SELL, Qty=0.01000000, StoredMargin=6.49436713
2025-06-15 23:58:21,026 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=649.436713
2025-06-15 23:58:21,027 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: 78): Type=BUY, Qty=0.01000000, StoredMargin=6.49374554
2025-06-15 23:58:21,027 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=649.374554
2025-06-15 23:58:21,027 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.02000000, TotalSellQty=0.01000000, NetQty=0.02000000
2025-06-15 23:58:21,027 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.417586'), Decimal('649.436713'), Decimal('649.374554')], HighestMarginPerLot=649.436713
2025-06-15 23:58:21,027 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=12.99, ContributingOrders=3 (based on individual stored margins)
2025-06-15 23:58:21,027 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 4
2025-06-15 23:58:21,027 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 76): Type=BUY, Qty=0.01000000, StoredMargin=6.49417586
2025-06-15 23:58:21,027 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.417586
2025-06-15 23:58:21,027 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 77): Type=SELL, Qty=0.01000000, StoredMargin=6.49436713
2025-06-15 23:58:21,027 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=649.436713
2025-06-15 23:58:21,027 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: 78): Type=BUY, Qty=0.01000000, StoredMargin=6.49374554
2025-06-15 23:58:21,027 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=649.374554
2025-06-15 23:58:21,027 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4 (ID: NEW_UNSAVED): Type=SELL, Qty=0.01, StoredMargin=6.509093586628377880862970326
2025-06-15 23:58:21,027 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4: MarginPerLot=650.9093586628377880862970326
2025-06-15 23:58:21,027 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.02000000, TotalSellQty=0.02000000, NetQty=0.02000000
2025-06-15 23:58:21,027 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.417586'), Decimal('649.436713'), Decimal('649.374554'), Decimal('650.9093586628377880862970326')], HighestMarginPerLot=650.9093586628377880862970326
2025-06-15 23:58:21,027 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=13.02, ContributingOrders=4 (based on individual stored margins)
2025-06-15 23:58:21,027 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=12.99, MarginAfter=13.02, AdditionalMargin=0.03
2025-06-15 23:58:21,029 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '9032506566', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8837000000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': Decimal('6.509093586628377880862970326'), 'commission': Decimal('0.10'), 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'OPEN'}
2025-06-15 23:58:21,045 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 12.99000000
2025-06-15 23:58:21,056 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-15 23:58:21,188 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-15 23:58:21,299 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '9032506566', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88370000'), 'order_quantity': Decimal('0.01000000'), 'contract_value': Decimal('1000.00000000'), 'margin': Decimal('6.50909359'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-15 23:58:21,629 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 9032506566 (order_status=PROCESSING, margin not updated in DB)
2025-06-15 23:58:21,634 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:58:21,635 - INFO - orders - Using order model: UserOrder
2025-06-15 23:58:21,638 - INFO - orders - Fetched 3 open orders for user 4
2025-06-15 23:58:21,643 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-15 23:58:21,645 - INFO - orders - Updated static orders cache for user 4 with 3 open orders and 0 pending orders
2025-06-15 23:58:48,893 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '9032506566', 'order_status': 'OPEN', 'order_type': 'SELL', 'order_price': Decimal('0.8821')}
2025-06-15 23:58:48,904 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.82 CAD to USD for margin (user_id: 4, position: 9032506566)
2025-06-15 23:58:48,904 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-15 23:58:48,906 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-15 23:58:48,906 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-15 23:58:48,906 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-15 23:58:48,907 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3581300000'), 'o': Decimal('1.3581000000')}
2025-06-15 23:58:48,907 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3581300000
2025-06-15 23:58:48,907 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.82 CAD / 1.3581300000 = 6.494223675200459455280422345 USD
2025-06-15 23:58:48,911 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 3
2025-06-15 23:58:48,911 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 76): Type=BUY, Qty=0.01000000, StoredMargin=6.49417586
2025-06-15 23:58:48,911 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.417586
2025-06-15 23:58:48,911 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 77): Type=SELL, Qty=0.01000000, StoredMargin=6.49436713
2025-06-15 23:58:48,911 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=649.436713
2025-06-15 23:58:48,911 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: 78): Type=BUY, Qty=0.01000000, StoredMargin=6.49374554
2025-06-15 23:58:48,911 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=649.374554
2025-06-15 23:58:48,911 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.02000000, TotalSellQty=0.01000000, NetQty=0.02000000
2025-06-15 23:58:48,911 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.417586'), Decimal('649.436713'), Decimal('649.374554')], HighestMarginPerLot=649.436713
2025-06-15 23:58:48,911 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=12.99, ContributingOrders=3 (based on individual stored margins)
2025-06-15 23:58:48,911 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 4
2025-06-15 23:58:48,911 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 76): Type=BUY, Qty=0.01000000, StoredMargin=6.49417586
2025-06-15 23:58:48,911 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.417586
2025-06-15 23:58:48,911 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 77): Type=SELL, Qty=0.01000000, StoredMargin=6.49436713
2025-06-15 23:58:48,911 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=649.436713
2025-06-15 23:58:48,911 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: 78): Type=BUY, Qty=0.01000000, StoredMargin=6.49374554
2025-06-15 23:58:48,911 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=649.374554
2025-06-15 23:58:48,911 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4 (ID: NEW_UNSAVED): Type=SELL, Qty=0.01000000, StoredMargin=6.494223675200459455280422345
2025-06-15 23:58:48,911 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4: MarginPerLot=649.4223675200459455280422345
2025-06-15 23:58:48,911 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.02000000, TotalSellQty=0.02000000, NetQty=0.02000000
2025-06-15 23:58:48,911 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.417586'), Decimal('649.436713'), Decimal('649.374554'), Decimal('649.4223675200459455280422345')], HighestMarginPerLot=649.436713
2025-06-15 23:58:48,911 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=12.99, ContributingOrders=4 (based on individual stored margins)
2025-06-15 23:58:48,911 - INFO - orders - Updating user 4 margin from 12.99000000 to 12.99
2025-06-15 23:58:48,950 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-15 23:58:48,950 - INFO - orders - Using order model: UserOrder
2025-06-15 23:58:48,955 - INFO - orders - Fetched 4 open orders for user 4
2025-06-15 23:58:48,960 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-15 23:58:48,962 - INFO - orders - Updated static orders cache for user 4 with 4 open orders and 0 pending orders
2025-06-16 00:00:25,917 - INFO - orders - Close order request received - Order ID: 9032506566, User ID: 4, User Type: live
2025-06-16 00:00:25,918 - INFO - orders - Close request details - Price: 0.88359, Type: SELL, Symbol: AUDCAD
2025-06-16 00:00:25,918 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x00000228EA2FF4D0>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-16 00:00:25,918 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-16 00:00:25,918 - INFO - orders - Request to close order 9032506566 for user 4 (User) with price 0.88359. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-16 00:00:25,925 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-16 00:00:25,926 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-16 00:00:28,295 - INFO - orders - Close order request received - Order ID: 1946553372, User ID: 4, User Type: live
2025-06-16 00:00:28,295 - INFO - orders - Close request details - Price: 0.88353, Type: BUY, Symbol: AUDCAD
2025-06-16 00:00:28,295 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x00000228EA59C410>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-16 00:00:28,295 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-16 00:00:28,295 - INFO - orders - Request to close order 1946553372 for user 4 (User) with price 0.88353. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-16 00:00:28,301 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-16 00:00:28,301 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-16 00:00:54,665 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '1946301114', 'order_status': 'CLOSED', 'close_price': Decimal('0.899'), 'swap': Decimal('0'), 'close_message': 'Order closed by service provider.'}
2025-06-16 00:00:54,676 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -16.900000000000000000000000 CAD to USD for PnL (user_id: 4, position: 9032506566)
2025-06-16 00:00:54,677 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-16 00:00:54,678 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-16 00:00:54,678 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-16 00:00:54,678 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-16 00:00:54,680 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3581900000'), 'o': Decimal('1.3581300000')}
2025-06-16 00:00:54,680 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3581900000
2025-06-16 00:00:54,680 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -16.900000000000000000000000 CAD / 1.3581900000 = -12.44303079834191092557006015 USD
2025-06-16 00:00:54,683 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 4
2025-06-16 00:00:54,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 76): Type=BUY, Qty=0.01000000, StoredMargin=6.49417586
2025-06-16 00:00:54,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.417586
2025-06-16 00:00:54,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 77): Type=SELL, Qty=0.01000000, StoredMargin=6.49436713
2025-06-16 00:00:54,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=649.436713
2025-06-16 00:00:54,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: 78): Type=BUY, Qty=0.01000000, StoredMargin=6.49374554
2025-06-16 00:00:54,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=649.374554
2025-06-16 00:00:54,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4 (ID: 79): Type=SELL, Qty=0.01000000, StoredMargin=6.49422368
2025-06-16 00:00:54,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 4: MarginPerLot=649.422368
2025-06-16 00:00:54,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.02000000, TotalSellQty=0.02000000, NetQty=0.02000000
2025-06-16 00:00:54,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.417586'), Decimal('649.436713'), Decimal('649.374554'), Decimal('649.422368')], HighestMarginPerLot=649.436713
2025-06-16 00:00:54,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=12.99, ContributingOrders=4 (based on individual stored margins)
2025-06-16 00:00:54,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 3
2025-06-16 00:00:54,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 76): Type=BUY, Qty=0.01000000, StoredMargin=6.49417586
2025-06-16 00:00:54,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.417586
2025-06-16 00:00:54,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 77): Type=SELL, Qty=0.01000000, StoredMargin=6.49436713
2025-06-16 00:00:54,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=649.436713
2025-06-16 00:00:54,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: 78): Type=BUY, Qty=0.01000000, StoredMargin=6.49374554
2025-06-16 00:00:54,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=649.374554
2025-06-16 00:00:54,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.02000000, TotalSellQty=0.01000000, NetQty=0.02000000
2025-06-16 00:00:54,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.417586'), Decimal('649.436713'), Decimal('649.374554')], HighestMarginPerLot=649.436713
2025-06-16 00:00:54,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=12.99, ContributingOrders=3 (based on individual stored margins)
2025-06-16 00:00:54,722 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 00:00:54,722 - INFO - orders - Using order model: UserOrder
2025-06-16 00:00:54,726 - INFO - orders - Fetched 3 open orders for user 4
2025-06-16 00:00:54,729 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-16 00:00:54,731 - INFO - orders - Updated static orders cache for user 4 with 3 open orders and 0 pending orders
2025-06-16 00:01:16,813 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '4609332762', 'order_status': 'CLOSED', 'close_price': Decimal('0.899'), 'swap': Decimal('0'), 'close_message': 'Order closed by service provider.'}
2025-06-16 00:01:16,826 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 16.900000000000000000000000 CAD to USD for PnL (user_id: 4, position: 1946553372)
2025-06-16 00:01:16,826 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-16 00:01:16,828 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-16 00:01:16,828 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-16 00:01:16,828 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-16 00:01:16,831 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3581300000'), 'o': Decimal('1.3581000000')}
2025-06-16 00:01:16,831 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3581300000
2025-06-16 00:01:16,831 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 16.900000000000000000000000 CAD / 1.3581300000 = 12.44358051143852208551464146 USD
2025-06-16 00:01:16,835 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 3
2025-06-16 00:01:16,835 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 76): Type=BUY, Qty=0.01000000, StoredMargin=6.49417586
2025-06-16 00:01:16,835 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.417586
2025-06-16 00:01:16,835 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 77): Type=SELL, Qty=0.01000000, StoredMargin=6.49436713
2025-06-16 00:01:16,835 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=649.436713
2025-06-16 00:01:16,835 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: 78): Type=BUY, Qty=0.01000000, StoredMargin=6.49374554
2025-06-16 00:01:16,835 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=649.374554
2025-06-16 00:01:16,835 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.02000000, TotalSellQty=0.01000000, NetQty=0.02000000
2025-06-16 00:01:16,835 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.417586'), Decimal('649.436713'), Decimal('649.374554')], HighestMarginPerLot=649.436713
2025-06-16 00:01:16,835 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=12.99, ContributingOrders=3 (based on individual stored margins)
2025-06-16 00:01:16,835 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 2
2025-06-16 00:01:16,835 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 76): Type=BUY, Qty=0.01000000, StoredMargin=6.49417586
2025-06-16 00:01:16,835 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.417586
2025-06-16 00:01:16,835 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 77): Type=SELL, Qty=0.01000000, StoredMargin=6.49436713
2025-06-16 00:01:16,835 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=649.436713
2025-06-16 00:01:16,835 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.01000000, TotalSellQty=0.01000000, NetQty=0.01000000
2025-06-16 00:01:16,835 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.417586'), Decimal('649.436713')], HighestMarginPerLot=649.436713
2025-06-16 00:01:16,835 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.49, ContributingOrders=2 (based on individual stored margins)
2025-06-16 00:01:16,883 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 00:01:16,883 - INFO - orders - Using order model: UserOrder
2025-06-16 00:01:16,887 - INFO - orders - Fetched 2 open orders for user 4
2025-06-16 00:01:16,891 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-16 00:01:16,893 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 0 pending orders
2025-06-16 00:01:41,942 - INFO - orders - Close order request received - Order ID: 4740032673, User ID: 4, User Type: live
2025-06-16 00:01:41,942 - INFO - orders - Close request details - Price: 0.88357, Type: BUY, Symbol: AUDCAD
2025-06-16 00:01:41,942 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x00000228EA2FDD10>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-16 00:01:41,942 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-16 00:01:41,942 - INFO - orders - Request to close order 4740032673 for user 4 (User) with price 0.88357. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-16 00:01:41,949 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-16 00:01:41,950 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-16 00:01:42,498 - INFO - orders - Close order request received - Order ID: 4221279525, User ID: 4, User Type: live
2025-06-16 00:01:42,498 - INFO - orders - Close request details - Price: 0.88364, Type: SELL, Symbol: AUDCAD
2025-06-16 00:01:42,499 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x00000228EA59C410>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-16 00:01:42,499 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-16 00:01:42,499 - INFO - orders - Request to close order 4221279525 for user 4 (User) with price 0.88364. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-16 00:01:42,504 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-16 00:01:42,504 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-16 00:01:57,964 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '3201655466', 'order_status': 'CLOSED', 'close_price': Decimal('0.899'), 'swap': Decimal('0'), 'close_message': 'Order closed by service provider.'}
2025-06-16 00:01:57,977 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 16.900000000000000000000000 CAD to USD for PnL (user_id: 4, position: 4740032673)
2025-06-16 00:01:57,977 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-16 00:01:57,978 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-16 00:01:57,978 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-16 00:01:57,978 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-16 00:01:57,980 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3581200000'), 'o': Decimal('1.3580900000')}
2025-06-16 00:01:57,980 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3581200000
2025-06-16 00:01:57,980 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 16.900000000000000000000000 CAD / 1.3581200000 = 12.44367213501016110505699055 USD
2025-06-16 00:01:57,984 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 2
2025-06-16 00:01:57,984 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 76): Type=BUY, Qty=0.01000000, StoredMargin=6.49417586
2025-06-16 00:01:57,984 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.417586
2025-06-16 00:01:57,984 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 77): Type=SELL, Qty=0.01000000, StoredMargin=6.49436713
2025-06-16 00:01:57,984 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=649.436713
2025-06-16 00:01:57,984 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.01000000, TotalSellQty=0.01000000, NetQty=0.01000000
2025-06-16 00:01:57,984 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.417586'), Decimal('649.436713')], HighestMarginPerLot=649.436713
2025-06-16 00:01:57,984 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.49, ContributingOrders=2 (based on individual stored margins)
2025-06-16 00:01:57,984 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-16 00:01:57,984 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 77): Type=SELL, Qty=0.01000000, StoredMargin=6.49436713
2025-06-16 00:01:57,984 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.436713
2025-06-16 00:01:57,984 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=0.01000000, NetQty=0.01000000
2025-06-16 00:01:57,984 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.436713')], HighestMarginPerLot=649.436713
2025-06-16 00:01:57,984 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.49, ContributingOrders=1 (based on individual stored margins)
2025-06-16 00:01:58,028 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 00:01:58,028 - INFO - orders - Using order model: UserOrder
2025-06-16 00:01:58,033 - INFO - orders - Fetched 1 open orders for user 4
2025-06-16 00:01:58,037 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-16 00:01:58,039 - INFO - orders - Updated static orders cache for user 4 with 1 open orders and 0 pending orders
2025-06-16 00:02:22,071 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '2840467805', 'order_status': 'CLOSED', 'close_price': Decimal('0.899'), 'swap': Decimal('0'), 'close_message': 'Order closed by service provider.'}
2025-06-16 00:02:22,086 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of -16.900000000000000000000000 CAD to USD for PnL (user_id: 4, position: 4221279525)
2025-06-16 00:02:22,086 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-16 00:02:22,089 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-16 00:02:22,089 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-16 00:02:22,089 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-16 00:02:22,090 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3581100000'), 'o': Decimal('1.3580800000')}
2025-06-16 00:02:22,090 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3581100000
2025-06-16 00:02:22,090 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: -16.900000000000000000000000 CAD / 1.3581100000 = -12.44376375993108069302192017 USD
2025-06-16 00:02:22,094 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-16 00:02:22,094 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 77): Type=SELL, Qty=0.01000000, StoredMargin=6.49436713
2025-06-16 00:02:22,094 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.436713
2025-06-16 00:02:22,094 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=0.01000000, NetQty=0.01000000
2025-06-16 00:02:22,094 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.436713')], HighestMarginPerLot=649.436713
2025-06-16 00:02:22,094 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.49, ContributingOrders=1 (based on individual stored margins)
2025-06-16 00:02:22,094 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-16 00:02:22,094 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-16 00:02:22,144 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 00:02:22,144 - INFO - orders - Using order model: UserOrder
2025-06-16 00:02:22,148 - INFO - orders - Fetched 0 open orders for user 4
2025-06-16 00:02:22,151 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-16 00:02:22,153 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-16 00:02:52,299 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-16 00:02:52,302 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-16 00:02:52,302 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-16 00:02:52,302 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-16 00:02:52,678 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 1
2025-06-16 00:02:52,678 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-16 00:02:52,682 - INFO - orders - [ORDER_MARGIN_CALC] Got BUY price for AUDCAD from cache: 0.8836000000
2025-06-16 00:02:52,682 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-16 00:02:52,682 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 1 * 100000.00000000 = 100000.00000000
2025-06-16 00:02:52,682 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (100000.00000000 * 0.8836000000) / 100.00 = 883.6000000000000000 (rounded to 883.60)
2025-06-16 00:02:52,682 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-16 00:02:52,682 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 1 * 10.0000 = 10.0000
2025-06-16 00:02:52,682 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-16 00:02:52,682 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 883.60 CAD
2025-06-16 00:02:52,682 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 883.60 CAD to USD for margin for AUDCAD BUY order (user_id: 4, position: )
2025-06-16 00:02:52,682 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-16 00:02:52,684 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-16 00:02:52,684 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-16 00:02:52,684 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-16 00:02:52,686 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3581200000'), 'o': Decimal('1.3581000000')}
2025-06-16 00:02:52,686 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3581200000
2025-06-16 00:02:52,686 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 883.60 CAD / 1.3581200000 = 650.6052484316555238123288075 USD
2025-06-16 00:02:52,686 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 883.60 CAD -> 650.6052484316555238123288075 USD
2025-06-16 00:02:52,686 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=650.6052484316555238123288075, price=0.8836000000, contract_value=100000.00000000, commission=10.00
2025-06-16 00:02:52,686 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=10.00
2025-06-16 00:02:52,689 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-16 00:02:52,689 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-16 00:02:52,689 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-16 00:02:52,689 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=650.6052484316555238123288075
2025-06-16 00:02:52,689 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.6052484316555238123288075
2025-06-16 00:02:52,689 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1, TotalSellQty=0, NetQty=1
2025-06-16 00:02:52,689 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.6052484316555238123288075')], HighestMarginPerLot=650.6052484316555238123288075
2025-06-16 00:02:52,689 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=650.61, ContributingOrders=1 (based on individual stored margins)
2025-06-16 00:02:52,689 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=650.61, AdditionalMargin=650.61
2025-06-16 00:02:52,691 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '7431254556', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8836000000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('650.6052484316555238123288075'), 'commission': Decimal('10.00'), 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'OPEN'}
2025-06-16 00:02:52,724 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-16 00:02:52,738 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-16 00:02:52,867 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-16 00:02:52,958 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '7431254556', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88360000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('650.60524843'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-16 00:02:53,292 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 7431254556 (order_status=PROCESSING, margin not updated in DB)
2025-06-16 00:02:53,296 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 00:02:53,296 - INFO - orders - Using order model: UserOrder
2025-06-16 00:02:53,299 - INFO - orders - Fetched 0 open orders for user 4
2025-06-16 00:02:53,301 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-16 00:02:53,303 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-16 00:03:24,501 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '7431254556', 'order_status': 'OPEN', 'order_type': 'BUY', 'order_price': Decimal('0.8821')}
2025-06-16 00:03:24,511 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 882.10 CAD to USD for margin (user_id: 4, position: 7431254556)
2025-06-16 00:03:24,511 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-16 00:03:24,513 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-16 00:03:24,513 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-16 00:03:24,513 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-16 00:03:24,514 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3580500000'), 'o': Decimal('1.3580100000')}
2025-06-16 00:03:24,514 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3580500000
2025-06-16 00:03:24,514 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 882.10 CAD / 1.3580500000 = 649.5342586797246051323588969 USD
2025-06-16 00:03:24,517 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-16 00:03:24,517 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-16 00:03:24,517 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-16 00:03:24,517 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=1.00000000, StoredMargin=649.5342586797246051323588969
2025-06-16 00:03:24,517 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.5342586797246051323588969
2025-06-16 00:03:24,517 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-16 00:03:24,517 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.5342586797246051323588969')], HighestMarginPerLot=649.5342586797246051323588969
2025-06-16 00:03:24,517 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=649.53, ContributingOrders=1 (based on individual stored margins)
2025-06-16 00:03:24,517 - INFO - orders - Updating user 4 margin from 0E-8 to 649.53
2025-06-16 00:03:24,543 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 00:03:24,543 - INFO - orders - Using order model: UserOrder
2025-06-16 00:03:24,548 - INFO - orders - Fetched 1 open orders for user 4
2025-06-16 00:03:24,552 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-16 00:03:24,554 - INFO - orders - Updated static orders cache for user 4 with 1 open orders and 0 pending orders
2025-06-16 00:08:59,506 - INFO - orders - Close order request received - Order ID: 7431254556, User ID: 4, User Type: live
2025-06-16 00:08:59,506 - INFO - orders - Close request details - Price: 0.88342, Type: BUY, Symbol: AUDCAD
2025-06-16 00:08:59,506 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x00000228EA59C190>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-16 00:08:59,506 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-16 00:08:59,507 - INFO - orders - Request to close order 7431254556 for user 4 (User) with price 0.88342. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-16 00:08:59,515 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-16 00:08:59,515 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-16 00:11:08,344 - INFO - orders - Close order request received - Order ID: 7431254556, User ID: 4, User Type: live
2025-06-16 00:11:08,345 - INFO - orders - Close request details - Price: 0.88338, Type: BUY, Symbol: AUDCAD
2025-06-16 00:11:08,345 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x00000228EA59C7D0>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-16 00:11:08,345 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-16 00:11:08,345 - INFO - orders - Request to close order 7431254556 for user 4 (User) with price 0.88338. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-16 00:11:08,356 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-16 00:11:08,356 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-16 00:14:25,610 - INFO - orders - Application starting up - Orders logging initialized
2025-06-16 00:15:04,627 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '2344731442', 'order_status': 'CLOSED', 'close_price': Decimal('0.899'), 'swap': Decimal('0'), 'close_message': 'Order closed by service provider.'}
2025-06-16 00:15:04,654 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 1690.000000000000000000000000 CAD to USD for PnL (user_id: 4, position: 7431254556)
2025-06-16 00:15:04,654 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-16 00:15:04,656 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-16 00:15:04,657 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-16 00:15:04,657 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-16 00:15:04,659 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3581500000'), 'o': Decimal('1.3581200000')}
2025-06-16 00:15:04,659 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3581500000
2025-06-16 00:15:04,659 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 1690.000000000000000000000000 CAD / 1.3581500000 = 1244.339726834296653536060082 USD
2025-06-16 00:15:04,666 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-16 00:15:04,666 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 80): Type=BUY, Qty=1.00000000, StoredMargin=649.53425868
2025-06-16 00:15:04,666 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.53425868
2025-06-16 00:15:04,666 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-16 00:15:04,666 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.53425868')], HighestMarginPerLot=649.53425868
2025-06-16 00:15:04,666 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=649.53, ContributingOrders=1 (based on individual stored margins)
2025-06-16 00:15:04,666 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-16 00:15:04,666 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-16 00:15:04,749 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 00:15:04,749 - INFO - orders - Using order model: UserOrder
2025-06-16 00:15:04,754 - INFO - orders - Fetched 0 open orders for user 4
2025-06-16 00:15:04,758 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-16 00:15:04,762 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-16 00:15:20,575 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-16 00:15:20,582 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-16 00:15:20,582 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-16 00:15:20,582 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-16 00:15:20,894 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 1
2025-06-16 00:15:20,894 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-16 00:15:20,898 - INFO - orders - [ORDER_MARGIN_CALC] Got BUY price for AUDCAD from cache: 0.8833700000
2025-06-16 00:15:20,899 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-16 00:15:20,899 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 1 * 100000.00000000 = 100000.00000000
2025-06-16 00:15:20,899 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (100000.00000000 * 0.8833700000) / 100.00 = 883.3700000000000000 (rounded to 883.37)
2025-06-16 00:15:20,899 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-16 00:15:20,899 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 1 * 10.0000 = 10.0000
2025-06-16 00:15:20,899 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-16 00:15:20,899 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 883.37 CAD
2025-06-16 00:15:20,899 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 883.37 CAD to USD for margin for AUDCAD BUY order (user_id: 4, position: )
2025-06-16 00:15:20,899 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-16 00:15:20,901 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-16 00:15:20,901 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-16 00:15:20,901 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-16 00:15:20,903 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3581400000'), 'o': Decimal('1.3581200000')}
2025-06-16 00:15:20,903 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3581400000
2025-06-16 00:15:20,903 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 883.37 CAD / 1.3581400000 = 650.4263183471512509755989810 USD
2025-06-16 00:15:20,903 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 883.37 CAD -> 650.4263183471512509755989810 USD
2025-06-16 00:15:20,903 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=650.4263183471512509755989810, price=0.8833700000, contract_value=100000.00000000, commission=10.00
2025-06-16 00:15:20,903 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=10.00
2025-06-16 00:15:20,906 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-16 00:15:20,906 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-16 00:15:20,906 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-16 00:15:20,906 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=650.4263183471512509755989810
2025-06-16 00:15:20,906 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.4263183471512509755989810
2025-06-16 00:15:20,906 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1, TotalSellQty=0, NetQty=1
2025-06-16 00:15:20,906 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.4263183471512509755989810')], HighestMarginPerLot=650.4263183471512509755989810
2025-06-16 00:15:20,906 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=650.43, ContributingOrders=1 (based on individual stored margins)
2025-06-16 00:15:20,906 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=650.43, AdditionalMargin=650.43
2025-06-16 00:15:20,914 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '2818710742', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8833700000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('650.4263183471512509755989810'), 'commission': Decimal('10.00'), 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'OPEN'}
2025-06-16 00:15:20,985 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-16 00:15:21,011 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-16 00:15:21,162 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-16 00:15:21,378 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '2818710742', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88337000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('650.42631835'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-16 00:15:21,722 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 2818710742 (order_status=PROCESSING, margin not updated in DB)
2025-06-16 00:15:21,733 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 00:15:21,733 - INFO - orders - Using order model: UserOrder
2025-06-16 00:15:21,742 - INFO - orders - Fetched 0 open orders for user 4
2025-06-16 00:15:21,751 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-16 00:15:21,759 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-16 00:15:52,494 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '2818710742', 'order_status': 'CLOSED', 'close_price': Decimal('0.899'), 'swap': Decimal('0'), 'close_message': 'Order closed by service provider.'}
2025-06-16 00:15:52,494 - INFO - orders - Service Provider Execution: Applying generic update for transition from PROCESSING to CLOSED
2025-06-16 00:15:52,540 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 00:15:52,540 - INFO - orders - Using order model: UserOrder
2025-06-16 00:15:52,545 - INFO - orders - Fetched 0 open orders for user 4
2025-06-16 00:15:52,550 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-16 00:15:52,555 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-16 00:17:07,723 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-16 00:17:07,733 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-16 00:17:07,733 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-16 00:17:07,733 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-16 00:17:08,524 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 1
2025-06-16 00:17:08,524 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-16 00:17:08,528 - INFO - orders - [ORDER_MARGIN_CALC] Got BUY price for AUDCAD from cache: 0.8833900000
2025-06-16 00:17:08,528 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-16 00:17:08,528 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 1 * 100000.00000000 = 100000.00000000
2025-06-16 00:17:08,528 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (100000.00000000 * 0.8833900000) / 100.00 = 883.3900000000000000 (rounded to 883.39)
2025-06-16 00:17:08,528 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-16 00:17:08,528 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 1 * 10.0000 = 10.0000
2025-06-16 00:17:08,529 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-16 00:17:08,529 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 883.39 CAD
2025-06-16 00:17:08,529 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 883.39 CAD to USD for margin for AUDCAD BUY order (user_id: 4, position: )
2025-06-16 00:17:08,529 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-16 00:17:08,531 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-16 00:17:08,531 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-16 00:17:08,532 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-16 00:17:08,533 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3581800000'), 'o': Decimal('1.3581600000')}
2025-06-16 00:17:08,534 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3581800000
2025-06-16 00:17:08,534 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 883.39 CAD / 1.3581800000 = 650.4218881149773962214139510 USD
2025-06-16 00:17:08,534 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 883.39 CAD -> 650.4218881149773962214139510 USD
2025-06-16 00:17:08,534 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=650.4218881149773962214139510, price=0.8833900000, contract_value=100000.00000000, commission=10.00
2025-06-16 00:17:08,534 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=10.00
2025-06-16 00:17:08,538 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-16 00:17:08,538 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-16 00:17:08,538 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-16 00:17:08,538 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=650.4218881149773962214139510
2025-06-16 00:17:08,538 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=650.4218881149773962214139510
2025-06-16 00:17:08,538 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1, TotalSellQty=0, NetQty=1
2025-06-16 00:17:08,538 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('650.4218881149773962214139510')], HighestMarginPerLot=650.4218881149773962214139510
2025-06-16 00:17:08,538 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=650.42, ContributingOrders=1 (based on individual stored margins)
2025-06-16 00:17:08,538 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=650.42, AdditionalMargin=650.42
2025-06-16 00:17:08,542 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '2820214002', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8833900000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('650.4218881149773962214139510'), 'commission': Decimal('10.00'), 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'OPEN'}
2025-06-16 00:17:08,566 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-16 00:17:08,582 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-16 00:17:08,729 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-16 00:17:08,889 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '2820214002', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88339000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('650.42188811'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-16 00:17:09,243 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 2820214002 (order_status=PROCESSING, margin not updated in DB)
2025-06-16 00:17:09,255 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 00:17:09,255 - INFO - orders - Using order model: UserOrder
2025-06-16 00:17:09,271 - INFO - orders - Fetched 0 open orders for user 4
2025-06-16 00:17:09,288 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-16 00:17:09,297 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-16 00:17:37,600 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '2820214002', 'order_status': 'OPEN', 'order_type': 'BUY', 'order_price': Decimal('0.8821')}
2025-06-16 00:17:37,615 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 882.10 CAD to USD for margin (user_id: 4, position: 2820214002)
2025-06-16 00:17:37,615 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-16 00:17:37,618 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-16 00:17:37,618 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-16 00:17:37,618 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-16 00:17:37,621 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3580600000'), 'o': Decimal('1.3580100000')}
2025-06-16 00:17:37,621 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3580600000
2025-06-16 00:17:37,621 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 882.10 CAD / 1.3580600000 = 649.5294758699910165972048363 USD
2025-06-16 00:17:37,626 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-16 00:17:37,626 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-16 00:17:37,627 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-16 00:17:37,627 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=1.00000000, StoredMargin=649.5294758699910165972048363
2025-06-16 00:17:37,627 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.5294758699910165972048363
2025-06-16 00:17:37,627 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-16 00:17:37,627 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.5294758699910165972048363')], HighestMarginPerLot=649.5294758699910165972048363
2025-06-16 00:17:37,627 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=649.53, ContributingOrders=1 (based on individual stored margins)
2025-06-16 00:17:37,627 - INFO - orders - Updating user 4 margin from 0E-8 to 649.53
2025-06-16 00:17:37,672 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 00:17:37,672 - INFO - orders - Using order model: UserOrder
2025-06-16 00:17:37,676 - INFO - orders - Fetched 1 open orders for user 4
2025-06-16 00:17:37,681 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-16 00:17:37,683 - INFO - orders - Updated static orders cache for user 4 with 1 open orders and 0 pending orders
2025-06-16 00:21:15,143 - INFO - orders - Add stoploss request received - Order ID: 2820214002, User ID: 4
2025-06-16 00:21:15,153 - INFO - orders - Generated stoploss_id: 4925194800 for order 2820214002
2025-06-16 00:21:15,160 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-16 00:21:15,160 - INFO - orders - Barclays user detected. Sending stoploss request to Firebase for order 2820214002
2025-06-16 00:21:15,919 - INFO - orders - Stoploss request sent to Firebase for order 2820214002
2025-06-16 00:22:54,361 - INFO - orders - Service provider update request received: {"order_id":"4925194800"}
2025-06-16 00:22:54,388 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 00:22:54,389 - INFO - orders - Using order model: UserOrder
2025-06-16 00:22:54,393 - INFO - orders - Fetched 1 open orders for user 4
2025-06-16 00:22:54,397 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-16 00:22:54,400 - INFO - orders - Updated static orders cache for user 4 with 1 open orders and 0 pending orders
2025-06-16 00:23:13,059 - INFO - orders - Service provider update request received: {"order_id":"4925194800","stop_loss":"0.11"}
2025-06-16 00:23:13,100 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 00:23:13,100 - INFO - orders - Using order model: UserOrder
2025-06-16 00:23:13,106 - INFO - orders - Fetched 1 open orders for user 4
2025-06-16 00:23:13,112 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-16 00:23:13,115 - INFO - orders - Updated static orders cache for user 4 with 1 open orders and 0 pending orders
2025-06-16 00:24:07,909 - INFO - orders - Add takeprofit request received - Order ID: 2820214002, User ID: 4
2025-06-16 00:24:07,913 - WARNING - orders - Order 2820214002 not found for user 4
2025-06-16 00:24:07,913 - ERROR - orders - Error adding takeprofit: 404: Order not found
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 1987, in add_takeprofit
    raise HTTPException(status_code=404, detail="Order not found")
fastapi.exceptions.HTTPException: 404: Order not found
2025-06-16 00:24:26,589 - INFO - orders - Add takeprofit request received - Order ID: 4925194800, User ID: 4
2025-06-16 00:24:26,603 - INFO - orders - Generated takeprofit_id: 4897429090 for order 4925194800
2025-06-16 00:24:26,611 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-16 00:24:26,611 - INFO - orders - Barclays user detected. Sending takeprofit request to Firebase for order 4925194800
2025-06-16 00:24:26,640 - ERROR - orders - Error adding takeprofit: 'AddTakeProfitRequest' object has no attribute 'order_price'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 2042, in add_takeprofit
    "order_price": str(request.order_price),
                       ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pydantic\main.py", line 991, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AddTakeProfitRequest' object has no attribute 'order_price'. Did you mean: 'order_type'?
2025-06-16 00:24:55,154 - INFO - orders - Add takeprofit request received - Order ID: 4925194800, User ID: 4
2025-06-16 00:24:55,165 - INFO - orders - Generated takeprofit_id: 7419964137 for order 4925194800
2025-06-16 00:24:55,173 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-16 00:24:55,173 - INFO - orders - Barclays user detected. Sending takeprofit request to Firebase for order 4925194800
2025-06-16 00:24:55,197 - ERROR - orders - Error adding takeprofit: 'AddTakeProfitRequest' object has no attribute 'order_price'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 2042, in add_takeprofit
    "order_price": str(request.order_price),
                       ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pydantic\main.py", line 991, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AddTakeProfitRequest' object has no attribute 'order_price'. Did you mean: 'order_type'?
2025-06-16 00:25:31,906 - INFO - orders - Add takeprofit request received - Order ID: 4925194800, User ID: 4
2025-06-16 00:25:31,940 - INFO - orders - Generated takeprofit_id: 7777284598 for order 4925194800
2025-06-16 00:25:31,952 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-16 00:25:31,952 - INFO - orders - Barclays user detected. Sending takeprofit request to Firebase for order 4925194800
2025-06-16 00:25:31,974 - ERROR - orders - Error adding takeprofit: 'AddTakeProfitRequest' object has no attribute 'order_price'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 2042, in add_takeprofit
    "order_price": str(request.order_price),
                       ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pydantic\main.py", line 991, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AddTakeProfitRequest' object has no attribute 'order_price'. Did you mean: 'order_type'?
2025-06-16 00:31:28,926 - INFO - orders - Application starting up - Orders logging initialized
2025-06-16 00:31:49,278 - INFO - orders - Add takeprofit request received - Order ID: 4925194800, User ID: 4
2025-06-16 00:31:49,313 - INFO - orders - Generated takeprofit_id: 1656728084 for order 4925194800
2025-06-16 00:31:49,334 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-16 00:31:49,334 - INFO - orders - Barclays user detected. Sending takeprofit request to Firebase for order 4925194800
2025-06-16 00:31:49,723 - INFO - orders - Takeprofit request sent to Firebase for order 4925194800
2025-06-16 00:32:38,364 - INFO - orders - Service provider update request received: {"order_id":"1656728084","take_profit":"0.9"}
2025-06-16 00:32:38,437 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 00:32:38,438 - INFO - orders - Using order model: UserOrder
2025-06-16 00:32:38,448 - INFO - orders - Fetched 1 open orders for user 4
2025-06-16 00:32:38,465 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-16 00:32:38,468 - INFO - orders - Updated static orders cache for user 4 with 1 open orders and 0 pending orders
2025-06-16 00:33:06,065 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-16 00:33:17,174 - INFO - orders - Close order request received - Order ID: 1656728084, User ID: 4, User Type: live
2025-06-16 00:33:17,175 - INFO - orders - Close request details - Price: 0.88412, Type: BUY, Symbol: AUDCAD
2025-06-16 00:33:17,176 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x000001CE45B2FD90>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-16 00:33:17,177 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-16 00:33:17,178 - INFO - orders - Request to close order 1656728084 for user 4 (User) with price 0.88412. Frontend provided type: BUY, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-16 00:33:17,192 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-16 00:33:17,192 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-16 00:34:26,506 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '7467301325', 'order_status': 'CLOSED', 'close_price': Decimal('0.899'), 'swap': Decimal('0'), 'close_message': 'Order closed by service provider.'}
2025-06-16 00:34:26,556 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 1690.000000000000000000000000 CAD to USD for PnL (user_id: 4, position: 1656728084)
2025-06-16 00:34:26,556 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-16 00:34:26,559 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-16 00:34:26,560 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-16 00:34:26,560 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-16 00:34:26,569 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3577300000'), 'o': Decimal('1.3576900000')}
2025-06-16 00:34:26,569 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3577300000
2025-06-16 00:34:26,569 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 1690.000000000000000000000000 CAD / 1.3577300000 = 1244.724650703748167897888387 USD
2025-06-16 00:34:26,581 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-16 00:34:26,581 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 82): Type=BUY, Qty=1.00000000, StoredMargin=649.52947587
2025-06-16 00:34:26,581 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.52947587
2025-06-16 00:34:26,581 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-16 00:34:26,581 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.52947587')], HighestMarginPerLot=649.52947587
2025-06-16 00:34:26,581 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=649.53, ContributingOrders=1 (based on individual stored margins)
2025-06-16 00:34:26,582 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-16 00:34:26,582 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-16 00:34:27,048 - INFO - orders - Sent SL cancellation to Firebase for closed order 7467301325
2025-06-16 00:34:27,355 - INFO - orders - Sent TP cancellation to Firebase for closed order 7467301325
2025-06-16 00:34:27,358 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 00:34:27,359 - INFO - orders - Using order model: UserOrder
2025-06-16 00:34:27,365 - INFO - orders - Fetched 0 open orders for user 4
2025-06-16 00:34:27,370 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-16 00:34:27,374 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-16 01:12:02,982 - INFO - orders - Application starting up - Orders logging initialized
2025-06-16 01:12:22,449 - INFO - orders - Application starting up - Orders logging initialized
2025-06-16 02:31:41,583 - INFO - orders - Application starting up - Orders logging initialized
2025-06-16 02:32:39,487 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-16 02:32:53,564 - INFO - orders - Pending order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 0.01
2025-06-16 02:32:53,598 - INFO - orders - Calculated contract_value for pending order: 1000.0000000000 (contract_size: 100000.00000000 * quantity: 0.01)
2025-06-16 02:32:53,602 - INFO - orders - [DEBUG] User data from cache: {'id': 4, 'email': 'dhanush777ss@gmail.com', 'account_number': 'DYY5A', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('7197.51000000'), 'margin': Decimal('0E-8'), 'user_type': 'live', 'first_name': None, 'last_name': None, 'country': 'string', 'phone_number': Decimal('8618025298')}
2025-06-16 02:32:53,602 - INFO - orders - [DEBUG] Group name: Group B
2025-06-16 02:32:53,610 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-06-16 02:32:53,610 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-06-16 02:32:53,610 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-06-16 02:32:53,610 - INFO - orders - User 4 is_barclays_live_user: True (user_type: live, sending_orders_normalized: barclays)
2025-06-16 02:32:53,636 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '8716645888', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.88'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '9154483483', 'takeprofit_id': '8379935821', 'order_user_id': 4, 'order_status': 'PENDING_PROCESSING', 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'open_time': None}
2025-06-16 02:32:53,636 - INFO - orders - [BARCLAYS] Setting initial order_status to PENDING_PROCESSING for Barclays user. Will be updated to PENDING after service provider confirmation.
2025-06-16 02:32:53,637 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 4 at price 0.88
2025-06-16 02:32:53,774 - INFO - orders - Barclays live user detected. Sending pending order to Firebase.
2025-06-16 02:32:53,774 - INFO - orders - [FIREBASE] Prepared Firebase payload for pending order: {'order_id': '8716645888', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_status': 'PENDING_PROCESSING', 'order_price': '0.88000000', 'order_quantity': '0.01000000', 'contract_value': '1000.00000000', 'margin': None, 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'PENDING', 'action': 'pending_order', 'timestamp': '2025-06-16T09:32:53.774922+00:00'}
2025-06-16 02:32:54,077 - INFO - orders - [FIREBASE] Successfully sent pending order 8716645888 to Firebase for Barclays user 4
2025-06-16 02:32:54,077 - INFO - orders - Skipping Redis storage for Barclays user pending order 8716645888
2025-06-16 02:32:54,086 - ERROR - orders - Error updating user data cache after pending order placement: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 811, in place_pending_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache)
                                            ^^^^^^^
NameError: name 'user_id' is not defined
2025-06-16 02:32:54,101 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 02:32:54,101 - INFO - orders - Using order model: UserOrder
2025-06-16 02:32:54,124 - INFO - orders - Fetched 0 open orders for user 4
2025-06-16 02:32:54,138 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-16 02:32:54,149 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-16 02:34:08,720 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '8716645888', 'order_status': 'BUY', 'close_price': Decimal('0.899'), 'swap': Decimal('0'), 'close_message': 'Order closed by service provider.'}
2025-06-16 02:34:08,720 - INFO - orders - Service Provider Execution: Applying generic update for transition from PENDING_PROCESSING to BUY
2025-06-16 02:34:08,772 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 02:34:08,772 - INFO - orders - Using order model: UserOrder
2025-06-16 02:34:08,777 - INFO - orders - Fetched 0 open orders for user 4
2025-06-16 02:34:08,784 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-16 02:34:08,787 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-16 02:34:48,915 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-16 02:34:59,026 - INFO - orders - Pending order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL_LIMIT, Quantity: 0.01
2025-06-16 02:34:59,043 - INFO - orders - Calculated contract_value for pending order: 1000.0000000000 (contract_size: 100000.00000000 * quantity: 0.01)
2025-06-16 02:34:59,047 - INFO - orders - [DEBUG] User data from cache: {'id': 4, 'email': 'dhanush777ss@gmail.com', 'account_number': 'DYY5A', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('7197.51000000'), 'margin': Decimal('0E-8'), 'user_type': 'live', 'first_name': None, 'last_name': None, 'country': 'string', 'phone_number': Decimal('8618025298')}
2025-06-16 02:34:59,048 - INFO - orders - [DEBUG] Group name: Group B
2025-06-16 02:34:59,051 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-06-16 02:34:59,051 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-06-16 02:34:59,051 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-06-16 02:34:59,051 - INFO - orders - User 4 is_barclays_live_user: True (user_type: live, sending_orders_normalized: barclays)
2025-06-16 02:34:59,063 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '8236815681', 'order_company_name': 'AUDCAD', 'order_type': 'SELL_LIMIT', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.99'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '9380826587', 'takeprofit_id': '7513700827', 'order_user_id': 4, 'order_status': 'PENDING_PROCESSING', 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'open_time': None}
2025-06-16 02:34:59,063 - INFO - orders - [BARCLAYS] Setting initial order_status to PENDING_PROCESSING for Barclays user. Will be updated to PENDING after service provider confirmation.
2025-06-16 02:34:59,063 - INFO - orders - Placing PENDING order: SELL_LIMIT for user 4 at price 0.99
2025-06-16 02:34:59,134 - INFO - orders - Barclays live user detected. Sending pending order to Firebase.
2025-06-16 02:34:59,135 - INFO - orders - [FIREBASE] Prepared Firebase payload for pending order: {'order_id': '8236815681', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL_LIMIT', 'order_status': 'PENDING_PROCESSING', 'order_price': '0.99000000', 'order_quantity': '0.01000000', 'contract_value': '1000.00000000', 'margin': None, 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'PENDING', 'action': 'pending_order', 'timestamp': '2025-06-16T09:34:59.134993+00:00'}
2025-06-16 02:34:59,792 - INFO - orders - [FIREBASE] Successfully sent pending order 8236815681 to Firebase for Barclays user 4
2025-06-16 02:34:59,792 - INFO - orders - Skipping Redis storage for Barclays user pending order 8236815681
2025-06-16 02:34:59,801 - ERROR - orders - Error updating user data cache after pending order placement: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 811, in place_pending_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache)
                                            ^^^^^^^
NameError: name 'user_id' is not defined
2025-06-16 02:34:59,806 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 02:34:59,807 - INFO - orders - Using order model: UserOrder
2025-06-16 02:34:59,817 - INFO - orders - Fetched 0 open orders for user 4
2025-06-16 02:34:59,826 - INFO - orders - Fetched 0 pending orders for user 4
2025-06-16 02:34:59,832 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 0 pending orders
2025-06-16 02:35:46,885 - INFO - orders - Service provider update request received: {"order_id":"8236815681","order_status":"PENDING"}
2025-06-16 02:35:46,915 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 02:35:46,915 - INFO - orders - Using order model: UserOrder
2025-06-16 02:35:46,920 - INFO - orders - Fetched 0 open orders for user 4
2025-06-16 02:35:46,925 - INFO - orders - Fetched 1 pending orders for user 4
2025-06-16 02:35:46,928 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 1 pending orders
2025-06-16 02:35:55,997 - INFO - orders - Cancel pending order request received - Order ID: 8236815681, User ID: 4
2025-06-16 02:35:56,006 - INFO - orders - Generated cancel_id: 6209151313 for order 8236815681
2025-06-16 02:35:56,011 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-16 02:35:56,011 - INFO - orders - Barclays user detected. Sending cancel request to Firebase for order 8236815681
2025-06-16 02:35:56,344 - INFO - orders - Cancel request sent to Firebase for order 8236815681
2025-06-16 02:36:13,886 - INFO - orders - Pending order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL_LIMIT, Quantity: 0.01
2025-06-16 02:36:13,907 - INFO - orders - Calculated contract_value for pending order: 1000.0000000000 (contract_size: 100000.00000000 * quantity: 0.01)
2025-06-16 02:36:13,911 - INFO - orders - [DEBUG] User data from cache: {'id': 4, 'email': 'dhanush777ss@gmail.com', 'account_number': 'DYY5A', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('7197.51000000'), 'margin': Decimal('0E-8'), 'user_type': 'live', 'first_name': None, 'last_name': None, 'country': 'string', 'phone_number': Decimal('8618025298')}
2025-06-16 02:36:13,911 - INFO - orders - [DEBUG] Group name: Group B
2025-06-16 02:36:13,913 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-06-16 02:36:13,913 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-06-16 02:36:13,913 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-06-16 02:36:13,913 - INFO - orders - User 4 is_barclays_live_user: True (user_type: live, sending_orders_normalized: barclays)
2025-06-16 02:36:13,922 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '2752839162', 'order_company_name': 'AUDCAD', 'order_type': 'SELL_LIMIT', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '9285891447', 'takeprofit_id': '2503527755', 'order_user_id': 4, 'order_status': 'PENDING_PROCESSING', 'contract_value': Decimal('1000.0000000000'), 'margin': None, 'open_time': None}
2025-06-16 02:36:13,922 - INFO - orders - [BARCLAYS] Setting initial order_status to PENDING_PROCESSING for Barclays user. Will be updated to PENDING after service provider confirmation.
2025-06-16 02:36:13,922 - INFO - orders - Placing PENDING order: SELL_LIMIT for user 4 at price 0.89
2025-06-16 02:36:13,953 - INFO - orders - Barclays live user detected. Sending pending order to Firebase.
2025-06-16 02:36:13,953 - INFO - orders - [FIREBASE] Prepared Firebase payload for pending order: {'order_id': '2752839162', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL_LIMIT', 'order_status': 'PENDING_PROCESSING', 'order_price': '0.89000000', 'order_quantity': '0.01000000', 'contract_value': '1000.00000000', 'margin': None, 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'PENDING', 'action': 'pending_order', 'timestamp': '2025-06-16T09:36:13.953221+00:00'}
2025-06-16 02:36:14,263 - INFO - orders - [FIREBASE] Successfully sent pending order 2752839162 to Firebase for Barclays user 4
2025-06-16 02:36:14,263 - INFO - orders - Skipping Redis storage for Barclays user pending order 2752839162
2025-06-16 02:36:14,267 - ERROR - orders - Error updating user data cache after pending order placement: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 811, in place_pending_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache)
                                            ^^^^^^^
NameError: name 'user_id' is not defined
2025-06-16 02:36:14,269 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 02:36:14,269 - INFO - orders - Using order model: UserOrder
2025-06-16 02:36:14,275 - INFO - orders - Fetched 0 open orders for user 4
2025-06-16 02:36:14,279 - INFO - orders - Fetched 1 pending orders for user 4
2025-06-16 02:36:14,283 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 1 pending orders
2025-06-16 02:36:38,042 - INFO - orders - Service provider update request received: {"order_id":"2752839162","order_status":"PENDING"}
2025-06-16 02:36:38,073 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 02:36:38,073 - INFO - orders - Using order model: UserOrder
2025-06-16 02:36:38,087 - INFO - orders - Fetched 0 open orders for user 4
2025-06-16 02:36:38,092 - INFO - orders - Fetched 2 pending orders for user 4
2025-06-16 02:36:38,095 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 2 pending orders
2025-06-16 03:05:29,137 - INFO - orders - Application starting up - Orders logging initialized
2025-06-16 03:06:01,319 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-16 03:06:09,861 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-16 03:06:09,868 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-16 03:06:09,869 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-16 03:06:09,869 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-16 03:06:10,236 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 0.01
2025-06-16 03:06:10,236 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-16 03:06:10,241 - INFO - orders - [ORDER_MARGIN_CALC] Got BUY price for AUDCAD from cache: 0.8842800000
2025-06-16 03:06:10,242 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-16 03:06:10,242 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 0.01 * 100000.00000000 = 1000.0000000000
2025-06-16 03:06:10,243 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (1000.0000000000 * 0.8842800000) / 100.00 = 8.842800000000000000 (rounded to 8.84)
2025-06-16 03:06:10,243 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-16 03:06:10,243 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 0.01 * 10.0000 = 0.100000
2025-06-16 03:06:10,243 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-16 03:06:10,244 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 8.84 CAD
2025-06-16 03:06:10,244 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.84 CAD to USD for margin for AUDCAD BUY order (user_id: 4, position: )
2025-06-16 03:06:10,244 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-16 03:06:10,248 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-16 03:06:10,248 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-16 03:06:10,248 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-16 03:06:10,252 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3570000000'), 'o': Decimal('1.3569700000')}
2025-06-16 03:06:10,253 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3570000000
2025-06-16 03:06:10,254 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.84 CAD / 1.3570000000 = 6.514369933677229182019159912 USD
2025-06-16 03:06:10,254 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 8.84 CAD -> 6.514369933677229182019159912 USD
2025-06-16 03:06:10,254 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=6.514369933677229182019159912, price=0.8842800000, contract_value=1000.0000000000, commission=0.10
2025-06-16 03:06:10,254 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=0.10
2025-06-16 03:06:10,267 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-16 03:06:10,267 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-16 03:06:10,268 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-16 03:06:10,268 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=0.01, StoredMargin=6.514369933677229182019159912
2025-06-16 03:06:10,268 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=651.4369933677229182019159912
2025-06-16 03:06:10,268 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.01, TotalSellQty=0, NetQty=0.01
2025-06-16 03:06:10,269 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('651.4369933677229182019159912')], HighestMarginPerLot=651.4369933677229182019159912
2025-06-16 03:06:10,269 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.51, ContributingOrders=1 (based on individual stored margins)
2025-06-16 03:06:10,269 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=6.51, AdditionalMargin=6.51
2025-06-16 03:06:10,280 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '7345816290', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8842800000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': Decimal('6.514369933677229182019159912'), 'commission': Decimal('0.10'), 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'OPEN'}
2025-06-16 03:06:10,409 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-16 03:06:10,469 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-16 03:06:11,049 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-16 03:06:11,527 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '7345816290', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88428000'), 'order_quantity': Decimal('0.01000000'), 'contract_value': Decimal('1000.00000000'), 'margin': Decimal('6.51436993'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-16 03:06:11,871 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 7345816290 (order_status=PROCESSING, margin not updated in DB)
2025-06-16 03:06:11,877 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 03:06:11,877 - INFO - orders - Using order model: UserOrder
2025-06-16 03:06:11,885 - INFO - orders - Fetched 0 open orders for user 4
2025-06-16 03:06:11,901 - INFO - orders - Fetched 2 pending orders for user 4
2025-06-16 03:06:11,906 - INFO - orders - Updated static orders cache for user 4 with 0 open orders and 2 pending orders
2025-06-16 03:07:26,420 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '7345816290', 'order_status': 'OPEN', 'order_type': 'BUY', 'order_price': Decimal('0.8821')}
2025-06-16 03:07:26,479 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.82 CAD to USD for margin (user_id: 4, position: 7345816290)
2025-06-16 03:07:26,479 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-16 03:07:26,483 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-16 03:07:26,484 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-16 03:07:26,484 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-16 03:07:26,489 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3570400000'), 'o': Decimal('1.3570000000')}
2025-06-16 03:07:26,490 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3570400000
2025-06-16 03:07:26,490 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.82 CAD / 1.3570400000 = 6.499439957554677828214348877 USD
2025-06-16 03:07:26,500 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-16 03:07:26,500 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-16 03:07:26,501 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-16 03:07:26,501 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=0.01000000, StoredMargin=6.499439957554677828214348877
2025-06-16 03:07:26,501 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.9439957554677828214348877
2025-06-16 03:07:26,502 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.01000000, TotalSellQty=0, NetQty=0.01000000
2025-06-16 03:07:26,502 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.9439957554677828214348877')], HighestMarginPerLot=649.9439957554677828214348877
2025-06-16 03:07:26,502 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.50, ContributingOrders=1 (based on individual stored margins)
2025-06-16 03:07:26,502 - INFO - orders - Updating user 4 margin from 0E-8 to 6.50
2025-06-16 03:07:26,675 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 03:07:26,676 - INFO - orders - Using order model: UserOrder
2025-06-16 03:07:26,696 - INFO - orders - Fetched 1 open orders for user 4
2025-06-16 03:07:26,732 - INFO - orders - Fetched 2 pending orders for user 4
2025-06-16 03:07:26,740 - INFO - orders - Updated static orders cache for user 4 with 1 open orders and 2 pending orders
2025-06-16 03:09:22,089 - INFO - orders - Add takeprofit request received - Order ID: 7345816290, User ID: 4
2025-06-16 03:09:22,127 - INFO - orders - Generated takeprofit_id: 2480048137 for order 7345816290
2025-06-16 03:09:22,138 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-16 03:09:22,142 - INFO - orders - Barclays user detected. Sending takeprofit request to Firebase for order 7345816290
2025-06-16 03:09:22,960 - INFO - orders - Takeprofit request sent to Firebase for order 7345816290
2025-06-16 03:11:16,105 - INFO - orders - Service provider update request received: {"order_id":"2480048137","take_profit":"0.91"}
2025-06-16 03:11:16,203 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 03:11:16,204 - INFO - orders - Using order model: UserOrder
2025-06-16 03:11:16,237 - INFO - orders - Fetched 1 open orders for user 4
2025-06-16 03:11:16,257 - INFO - orders - Fetched 2 pending orders for user 4
2025-06-16 03:11:16,265 - INFO - orders - Updated static orders cache for user 4 with 1 open orders and 2 pending orders
2025-06-16 03:11:32,557 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-16 03:13:32,561 - INFO - orders - Cancel takeprofit request received - Order ID: 7345816290, User ID: 4
2025-06-16 03:13:32,590 - ERROR - orders - Error cancelling takeprofit: 404: Order not found
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 2256, in cancel_takeprofit
    raise HTTPException(status_code=404, detail="Order not found")
fastapi.exceptions.HTTPException: 404: Order not found
2025-06-16 03:14:04,120 - INFO - orders - Cancel takeprofit request received - Order ID: 2480048137, User ID: 4
2025-06-16 03:14:04,170 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-16 03:14:05,055 - INFO - orders - Takeprofit cancel request sent to Firebase for order 2480048137
2025-06-16 03:24:00,462 - INFO - orders - Application starting up - Orders logging initialized
2025-06-16 03:24:06,162 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-16 03:25:21,666 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-16 03:27:47,297 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-16 03:28:38,285 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-16 03:32:02,240 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-16 03:32:19,520 - INFO - orders - Cancel takeprofit request received - Order ID: 2480048137, User ID: 4
2025-06-16 03:32:19,542 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-16 03:32:20,409 - INFO - orders - Takeprofit cancel request sent to Firebase for order 2480048137
2025-06-16 03:32:50,009 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-16 03:32:50,016 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-16 03:32:50,016 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-16 03:32:50,016 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-16 03:32:50,410 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 1
2025-06-16 03:32:50,411 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-16 03:32:50,416 - INFO - orders - [ORDER_MARGIN_CALC] Got BUY price for AUDCAD from cache: 0.8843700000
2025-06-16 03:32:50,416 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-16 03:32:50,416 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 1 * 100000.00000000 = 100000.00000000
2025-06-16 03:32:50,417 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (100000.00000000 * 0.8843700000) / 100.00 = 884.3700000000000000 (rounded to 884.37)
2025-06-16 03:32:50,417 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-16 03:32:50,417 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 1 * 10.0000 = 10.0000
2025-06-16 03:32:50,417 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-16 03:32:50,417 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 884.37 CAD
2025-06-16 03:32:50,417 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 884.37 CAD to USD for margin for AUDCAD BUY order (user_id: 4, position: )
2025-06-16 03:32:50,417 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-16 03:32:50,421 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-16 03:32:50,421 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-16 03:32:50,421 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-16 03:32:50,423 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3571500000'), 'o': Decimal('1.3571100000')}
2025-06-16 03:32:50,423 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3571500000
2025-06-16 03:32:50,423 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 884.37 CAD / 1.3571500000 = 651.6376229598791585307445750 USD
2025-06-16 03:32:50,423 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 884.37 CAD -> 651.6376229598791585307445750 USD
2025-06-16 03:32:50,423 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=651.6376229598791585307445750, price=0.8843700000, contract_value=100000.00000000, commission=10.00
2025-06-16 03:32:50,423 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=10.00
2025-06-16 03:32:50,432 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-16 03:32:50,432 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 86): Type=BUY, Qty=0.01000000, StoredMargin=6.49943996
2025-06-16 03:32:50,433 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.943996
2025-06-16 03:32:50,433 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.01000000, TotalSellQty=0, NetQty=0.01000000
2025-06-16 03:32:50,433 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.943996')], HighestMarginPerLot=649.943996
2025-06-16 03:32:50,433 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.50, ContributingOrders=1 (based on individual stored margins)
2025-06-16 03:32:50,433 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 2
2025-06-16 03:32:50,433 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 86): Type=BUY, Qty=0.01000000, StoredMargin=6.49943996
2025-06-16 03:32:50,433 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.943996
2025-06-16 03:32:50,434 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=651.6376229598791585307445750
2025-06-16 03:32:50,434 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=651.6376229598791585307445750
2025-06-16 03:32:50,434 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1.01000000, TotalSellQty=0, NetQty=1.01000000
2025-06-16 03:32:50,434 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.943996'), Decimal('651.6376229598791585307445750')], HighestMarginPerLot=651.6376229598791585307445750
2025-06-16 03:32:50,434 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=658.15, ContributingOrders=2 (based on individual stored margins)
2025-06-16 03:32:50,434 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=6.50, MarginAfter=658.15, AdditionalMargin=651.65
2025-06-16 03:32:50,440 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '3424248279', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8843700000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('651.6376229598791585307445750'), 'commission': Decimal('10.00'), 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'OPEN'}
2025-06-16 03:32:50,481 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 6.50000000
2025-06-16 03:32:50,499 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-16 03:32:50,710 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-16 03:32:50,889 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '3424248279', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88437000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('651.63762296'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-16 03:32:51,182 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 3424248279 (order_status=PROCESSING, margin not updated in DB)
2025-06-16 03:32:51,192 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 03:32:51,192 - INFO - orders - Using order model: UserOrder
2025-06-16 03:32:51,202 - INFO - orders - Fetched 1 open orders for user 4
2025-06-16 03:32:51,229 - INFO - orders - Fetched 2 pending orders for user 4
2025-06-16 03:32:51,233 - INFO - orders - Updated static orders cache for user 4 with 1 open orders and 2 pending orders
2025-06-16 03:33:58,105 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '3424248279', 'order_status': 'OPEN', 'order_type': 'BUY', 'order_price': Decimal('0.8821')}
2025-06-16 03:33:58,127 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 882.10 CAD to USD for margin (user_id: 4, position: 3424248279)
2025-06-16 03:33:58,127 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-16 03:33:58,129 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-16 03:33:58,130 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-16 03:33:58,130 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-16 03:33:58,133 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3571300000'), 'o': Decimal('1.3570900000')}
2025-06-16 03:33:58,133 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3571300000
2025-06-16 03:33:58,134 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 882.10 CAD / 1.3571300000 = 649.9745787065351145431904092 USD
2025-06-16 03:33:58,139 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-16 03:33:58,139 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 86): Type=BUY, Qty=0.01000000, StoredMargin=6.49943996
2025-06-16 03:33:58,139 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.943996
2025-06-16 03:33:58,139 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0.01000000, TotalSellQty=0, NetQty=0.01000000
2025-06-16 03:33:58,139 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.943996')], HighestMarginPerLot=649.943996
2025-06-16 03:33:58,140 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=6.50, ContributingOrders=1 (based on individual stored margins)
2025-06-16 03:33:58,140 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 2
2025-06-16 03:33:58,140 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 86): Type=BUY, Qty=0.01000000, StoredMargin=6.49943996
2025-06-16 03:33:58,140 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.943996
2025-06-16 03:33:58,140 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=BUY, Qty=1.00000000, StoredMargin=649.9745787065351145431904092
2025-06-16 03:33:58,140 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=649.9745787065351145431904092
2025-06-16 03:33:58,140 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1.01000000, TotalSellQty=0, NetQty=1.01000000
2025-06-16 03:33:58,141 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.943996'), Decimal('649.9745787065351145431904092')], HighestMarginPerLot=649.9745787065351145431904092
2025-06-16 03:33:58,141 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=656.47, ContributingOrders=2 (based on individual stored margins)
2025-06-16 03:33:58,141 - INFO - orders - Updating user 4 margin from 6.50000000 to 656.47
2025-06-16 03:33:58,200 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 03:33:58,201 - INFO - orders - Using order model: UserOrder
2025-06-16 03:33:58,205 - INFO - orders - Fetched 2 open orders for user 4
2025-06-16 03:33:58,211 - INFO - orders - Fetched 2 pending orders for user 4
2025-06-16 03:33:58,215 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 2 pending orders
2025-06-16 03:34:39,833 - INFO - orders - Add stoploss request received - Order ID: 2480048137, User ID: 4
2025-06-16 03:34:39,845 - INFO - orders - Generated stoploss_id: 8909418230 for order 2480048137
2025-06-16 03:34:39,853 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-16 03:34:39,853 - INFO - orders - Barclays user detected. Sending stoploss request to Firebase for order 2480048137
2025-06-16 03:34:40,591 - INFO - orders - Stoploss request sent to Firebase for order 2480048137
2025-06-16 03:36:17,372 - INFO - orders - Add stoploss request received - Order ID: 2480048137, User ID: 4
2025-06-16 03:36:17,385 - INFO - orders - Generated stoploss_id: 5354118832 for order 2480048137
2025-06-16 03:36:17,389 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-16 03:36:17,389 - INFO - orders - Barclays user detected. Sending stoploss request to Firebase for order 2480048137
2025-06-16 03:36:18,018 - INFO - orders - Stoploss request sent to Firebase for order 2480048137
2025-06-16 03:37:00,760 - INFO - orders - Add stoploss request received - Order ID: 2480048137, User ID: 4
2025-06-16 03:37:00,772 - INFO - orders - Generated stoploss_id: 9480966302 for order 2480048137
2025-06-16 03:37:00,787 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-16 03:37:00,787 - INFO - orders - Barclays user detected. Sending stoploss request to Firebase for order 2480048137
2025-06-16 03:37:01,090 - INFO - orders - Stoploss request sent to Firebase for order 2480048137
2025-06-16 03:38:04,435 - INFO - orders - Add stoploss request received - Order ID: 2480048137, User ID: 4
2025-06-16 03:38:04,443 - INFO - orders - Generated stoploss_id: 8019218655 for order 2480048137
2025-06-16 03:38:04,448 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-16 03:38:04,448 - INFO - orders - Barclays user detected. Sending stoploss request to Firebase for order 2480048137
2025-06-16 03:38:04,773 - INFO - orders - Stoploss request sent to Firebase for order 2480048137
2025-06-16 03:39:49,853 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-16 03:46:45,050 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-16 03:47:02,129 - app.api.v1.endpoints.orders - INFO - [get_closed_orders] user_type: live
2025-06-16 03:47:04,820 - app.api.v1.endpoints.orders - INFO - [get_closed_orders] user_type: live
2025-06-16 03:47:05,394 - app.api.v1.endpoints.orders - INFO - [get_closed_orders] user_type: live
2025-06-16 03:47:05,621 - app.api.v1.endpoints.orders - INFO - [get_closed_orders] user_type: live
2025-06-16 03:47:48,273 - INFO - orders - Add stoploss request received - Order ID: 2480048137, User ID: 4
2025-06-16 03:47:48,285 - INFO - orders - Generated stoploss_id: 8303966871 for order 2480048137
2025-06-16 03:47:48,295 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-16 03:47:48,295 - INFO - orders - Barclays user detected. Sending stoploss request to Firebase for order 2480048137
2025-06-16 03:47:48,952 - INFO - orders - Stoploss request sent to Firebase for order 2480048137
2025-06-16 03:48:24,050 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-16 03:50:05,238 - INFO - orders - Add takeprofit request received - Order ID: 3424248279, User ID: 4
2025-06-16 03:50:05,249 - INFO - orders - Generated takeprofit_id: 7872796244 for order 3424248279
2025-06-16 03:50:05,252 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-16 03:50:05,252 - INFO - orders - Barclays user detected. Sending takeprofit request to Firebase for order 3424248279
2025-06-16 03:50:05,861 - INFO - orders - Takeprofit request sent to Firebase for order 3424248279
2025-06-16 03:51:54,750 - INFO - orders - Application starting up - Orders logging initialized
2025-06-16 03:52:07,722 - INFO - orders - Service provider update request received: {"order_id":"7872796244","take_profit":"0.91"}
2025-06-16 03:52:07,781 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 03:52:07,781 - INFO - orders - Using order model: UserOrder
2025-06-16 03:52:07,790 - INFO - orders - Fetched 2 open orders for user 4
2025-06-16 03:52:07,803 - INFO - orders - Fetched 2 pending orders for user 4
2025-06-16 03:52:07,807 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 2 pending orders
2025-06-16 04:13:00,310 - INFO - orders - Application starting up - Orders logging initialized
2025-06-16 04:13:25,292 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-16 04:18:55,904 - INFO - orders - Application starting up - Orders logging initialized
2025-06-16 04:19:02,448 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-16 04:19:23,671 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCHF, Type: BUY, Quantity: 1
2025-06-16 04:19:23,693 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-16 04:19:23,693 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-16 04:19:23,693 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-16 04:19:24,004 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCHF BUY order, quantity: 1
2025-06-16 04:19:24,004 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCHF: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-16 04:19:24,012 - INFO - orders - [ORDER_MARGIN_CALC] Got BUY price for AUDCHF from cache: 0.5289700000
2025-06-16 04:19:24,012 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCHF:
2025-06-16 04:19:24,013 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 1 * 100000.00000000 = 100000.00000000
2025-06-16 04:19:24,013 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (100000.00000000 * 0.5289700000) / 100.00 = 528.9700000000000000 (rounded to 528.97)
2025-06-16 04:19:24,013 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCHF: type=0, value_type=0, rate=10.0000
2025-06-16 04:19:24,013 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 1 * 10.0000 = 10.0000
2025-06-16 04:19:24,013 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCHF: CHF
2025-06-16 04:19:24,013 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CHF to USD: 528.97 CHF
2025-06-16 04:19:24,013 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 528.97 CHF to USD for margin for AUDCHF BUY order (user_id: 4, position: )
2025-06-16 04:19:24,014 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CHFUSD
2025-06-16 04:19:24,019 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-16 04:19:24,020 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CHFUSD, trying inverse
2025-06-16 04:19:24,020 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCHF
2025-06-16 04:19:24,024 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('0.8108300000'), 'o': Decimal('0.8107800000')}
2025-06-16 04:19:24,024 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 0.8108300000
2025-06-16 04:19:24,024 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 528.97 CHF / 0.8108300000 = 652.3808936521835649889619279 USD
2025-06-16 04:19:24,024 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 528.97 CHF -> 652.3808936521835649889619279 USD
2025-06-16 04:19:24,024 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCHF BUY: margin=652.3808936521835649889619279, price=0.5289700000, contract_value=100000.00000000, commission=10.00
2025-06-16 04:19:24,024 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCHF: Calculated commission=10.00
2025-06-16 04:19:24,032 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCHF, Positions count: 0
2025-06-16 04:19:24,033 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCHF. Returning zero margin.
2025-06-16 04:19:24,033 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCHF, Positions count: 1
2025-06-16 04:19:24,033 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCHF, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=652.3808936521835649889619279
2025-06-16 04:19:24,033 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCHF, Pos 1: MarginPerLot=652.3808936521835649889619279
2025-06-16 04:19:24,033 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCHF: TotalBuyQty=1, TotalSellQty=0, NetQty=1
2025-06-16 04:19:24,033 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCHF: AllMarginsPerLot=[Decimal('652.3808936521835649889619279')], HighestMarginPerLot=652.3808936521835649889619279
2025-06-16 04:19:24,033 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCHF: CalculatedTotalMargin=652.38, ContributingOrders=1 (based on individual stored margins)
2025-06-16 04:19:24,034 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCHF: MarginBefore=0.00, MarginAfter=652.38, AdditionalMargin=652.38
2025-06-16 04:19:24,041 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '4256722996', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCHF', 'order_type': 'BUY', 'order_price': Decimal('0.5289700000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('652.3808936521835649889619279'), 'commission': Decimal('10.00'), 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'OPEN'}
2025-06-16 04:19:24,137 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 656.47000000
2025-06-16 04:19:24,159 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-16 04:19:24,359 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-16 04:19:24,620 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '4256722996', 'order_user_id': 4, 'order_company_name': 'AUDCHF', 'order_type': 'BUY', 'order_status': 'PROCESSING', 'order_price': Decimal('0.52897000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('652.38089365'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-16 04:19:24,964 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 4256722996 (order_status=PROCESSING, margin not updated in DB)
2025-06-16 04:19:24,972 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 04:19:24,972 - INFO - orders - Using order model: UserOrder
2025-06-16 04:19:24,986 - INFO - orders - Fetched 2 open orders for user 4
2025-06-16 04:19:25,016 - INFO - orders - Fetched 2 pending orders for user 4
2025-06-16 04:19:25,021 - INFO - orders - Updated static orders cache for user 4 with 2 open orders and 2 pending orders
2025-06-16 04:21:04,220 - INFO - orders - Service Provider Execution: Received update fields: {'order_id': '4256722996', 'order_status': 'OPEN', 'order_type': 'BUY', 'order_price': Decimal('0.8821')}
2025-06-16 04:21:04,244 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 882.10 CHF to USD for margin (user_id: 4, position: 4256722996)
2025-06-16 04:21:04,244 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CHFUSD
2025-06-16 04:21:04,246 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-16 04:21:04,246 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CHFUSD, trying inverse
2025-06-16 04:21:04,247 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCHF
2025-06-16 04:21:04,248 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('0.8108000000'), 'o': Decimal('0.8107500000')}
2025-06-16 04:21:04,248 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 0.8108000000
2025-06-16 04:21:04,248 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 882.10 CHF / 0.8108000000 = 1087.937839171188949185989147 USD
2025-06-16 04:21:04,253 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCHF, Positions count: 0
2025-06-16 04:21:04,253 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCHF. Returning zero margin.
2025-06-16 04:21:04,253 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCHF, Positions count: 1
2025-06-16 04:21:04,254 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCHF, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=1.00000000, StoredMargin=1087.937839171188949185989147
2025-06-16 04:21:04,254 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCHF, Pos 1: MarginPerLot=1087.937839171188949185989147
2025-06-16 04:21:04,254 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCHF: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-16 04:21:04,254 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCHF: AllMarginsPerLot=[Decimal('1087.937839171188949185989147')], HighestMarginPerLot=1087.937839171188949185989147
2025-06-16 04:21:04,254 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCHF: CalculatedTotalMargin=1087.94, ContributingOrders=1 (based on individual stored margins)
2025-06-16 04:21:04,254 - INFO - orders - Updating user 4 margin from 656.47000000 to 1744.41
2025-06-16 04:21:04,308 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 04:21:04,308 - INFO - orders - Using order model: UserOrder
2025-06-16 04:21:04,314 - INFO - orders - Fetched 3 open orders for user 4
2025-06-16 04:21:04,322 - INFO - orders - Fetched 2 pending orders for user 4
2025-06-16 04:21:04,327 - INFO - orders - Updated static orders cache for user 4 with 3 open orders and 2 pending orders
2025-06-16 04:21:19,981 - INFO - orders - Pending order placement request received - User ID: 4, Symbol: AUDCHF, Type: BUY_LIMIT, Quantity: 1
2025-06-16 04:21:20,007 - INFO - orders - Calculated contract_value for pending order: 100000.00000000 (contract_size: 100000.00000000 * quantity: 1)
2025-06-16 04:21:20,012 - INFO - orders - [DEBUG] User data from cache: {'id': 4, 'email': 'dhanush777ss@gmail.com', 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'user_type': 'live', 'account_number': 'DYY5A', 'wallet_balance': Decimal('7197.51000000'), 'margin': Decimal('1744.41000000'), 'first_name': None, 'last_name': None, 'country': 'string', 'phone_number': Decimal('8618025298')}
2025-06-16 04:21:20,013 - INFO - orders - [DEBUG] Group name: Group B
2025-06-16 04:21:20,018 - INFO - orders - [DEBUG] Group settings from cache: {'sending_orders': 'barclays'}
2025-06-16 04:21:20,018 - INFO - orders - [DEBUG] sending_orders value: barclays, type: <class 'str'>
2025-06-16 04:21:20,018 - INFO - orders - [DEBUG] sending_orders_normalized: barclays
2025-06-16 04:21:20,018 - INFO - orders - User 4 is_barclays_live_user: True (user_type: live, sending_orders_normalized: barclays)
2025-06-16 04:21:20,034 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '9954250417', 'order_company_name': 'AUDCHF', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.11'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'stoploss_id': '6818119236', 'takeprofit_id': '6085905592', 'order_user_id': 4, 'order_status': 'PENDING_PROCESSING', 'contract_value': Decimal('100000.00000000'), 'margin': None, 'open_time': None}
2025-06-16 04:21:20,034 - INFO - orders - [BARCLAYS] Setting initial order_status to PENDING_PROCESSING for Barclays user. Will be updated to PENDING after service provider confirmation.
2025-06-16 04:21:20,034 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 4 at price 0.11
2025-06-16 04:21:20,067 - INFO - orders - Barclays live user detected. Sending pending order to Firebase.
2025-06-16 04:21:20,068 - INFO - orders - [FIREBASE] Prepared Firebase payload for pending order: {'order_id': '9954250417', 'order_user_id': 4, 'order_company_name': 'AUDCHF', 'order_type': 'BUY_LIMIT', 'order_status': 'PENDING_PROCESSING', 'order_price': '0.11000000', 'order_quantity': '1.00000000', 'contract_value': '100000.00000000', 'margin': None, 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'PENDING', 'action': 'pending_order', 'timestamp': '2025-06-16T11:21:20.068327+00:00'}
2025-06-16 04:21:20,657 - INFO - orders - [FIREBASE] Successfully sent pending order 9954250417 to Firebase for Barclays user 4
2025-06-16 04:21:20,657 - INFO - orders - Skipping Redis storage for Barclays user pending order 9954250417
2025-06-16 04:21:20,670 - ERROR - orders - Error updating user data cache after pending order placement: name 'user_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 811, in place_pending_order
    await set_user_data_cache(redis_client, user_id, user_data_to_cache)
                                            ^^^^^^^
NameError: name 'user_id' is not defined
2025-06-16 04:21:20,693 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 04:21:20,693 - INFO - orders - Using order model: UserOrder
2025-06-16 04:21:20,712 - INFO - orders - Fetched 3 open orders for user 4
2025-06-16 04:21:20,724 - INFO - orders - Fetched 2 pending orders for user 4
2025-06-16 04:21:20,728 - INFO - orders - Updated static orders cache for user 4 with 3 open orders and 2 pending orders
2025-06-16 04:22:21,234 - INFO - orders - Add stoploss request received - Order ID: 2480048137, User ID: 4
2025-06-16 04:22:21,250 - INFO - orders - Generated stoploss_id: 4704842151 for order 2480048137
2025-06-16 04:22:21,256 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-16 04:22:21,256 - INFO - orders - Barclays user detected. Sending stoploss request to Firebase for order 2480048137
2025-06-16 04:22:21,562 - INFO - orders - Stoploss request sent to Firebase for order 2480048137
2025-06-16 04:24:42,404 - INFO - orders - Cancel pending order request received - Order ID: 2752839162, User ID: 4
2025-06-16 04:24:42,420 - INFO - orders - Generated cancel_id: 6410517103 for order 2752839162
2025-06-16 04:24:42,432 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-16 04:24:42,433 - INFO - orders - Barclays user detected. Sending cancel request to Firebase for order 2752839162
2025-06-16 04:24:42,829 - INFO - orders - Cancel request sent to Firebase for order 2752839162
2025-06-16 04:25:59,076 - INFO - orders - Add takeprofit request received - Order ID: 2480048137, User ID: 4
2025-06-16 04:25:59,088 - INFO - orders - Generated takeprofit_id: 1572035703 for order 2480048137
2025-06-16 04:25:59,094 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-16 04:25:59,094 - INFO - orders - Barclays user detected. Sending takeprofit request to Firebase for order 2480048137
2025-06-16 04:25:59,694 - INFO - orders - Takeprofit request sent to Firebase for order 2480048137
2025-06-16 04:27:16,855 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-16 04:27:24,065 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-16 04:27:24,072 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-16 04:27:24,073 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-16 04:27:24,073 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-16 04:27:24,698 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 0.01
2025-06-16 04:27:24,698 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-16 04:27:24,713 - INFO - orders - [ORDER_MARGIN_CALC] Got BUY price for AUDCAD from cache: 0.8849700000
2025-06-16 04:27:24,713 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-16 04:27:24,714 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 0.01 * 100000.00000000 = 1000.0000000000
2025-06-16 04:27:24,714 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (1000.0000000000 * 0.8849700000) / 100.00 = 8.849700000000000000 (rounded to 8.85)
2025-06-16 04:27:24,714 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-16 04:27:24,714 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 0.01 * 10.0000 = 0.100000
2025-06-16 04:27:24,714 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-16 04:27:24,714 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 8.85 CAD
2025-06-16 04:27:24,714 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 8.85 CAD to USD for margin for AUDCAD BUY order (user_id: 1, position: )
2025-06-16 04:27:24,715 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-16 04:27:24,736 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-16 04:27:24,736 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-16 04:27:24,736 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-16 04:27:24,759 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3571900000'), 'o': Decimal('1.3571500000')}
2025-06-16 04:27:24,759 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3571900000
2025-06-16 04:27:24,760 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 8.85 CAD / 1.3571900000 = 6.520826118671667194718499252 USD
2025-06-16 04:27:24,760 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 8.85 CAD -> 6.520826118671667194718499252 USD
2025-06-16 04:27:24,760 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=6.520826118671667194718499252, price=0.8849700000, contract_value=1000.0000000000, commission=0.10
2025-06-16 04:27:24,760 - app.services.order_processing - INFO - [COMMISSION_CALC] User 1 Symbol AUDCAD: Calculated commission=0.10
2025-06-16 04:27:24,808 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-16 04:27:24,808 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 191): Type=BUY, Qty=0.01000000, StoredMargin=6.47192198
2025-06-16 04:27:24,808 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=647.192198
2025-06-16 04:27:24,808 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0.01000000, TotalSellQty=0, NetQty=0.01000000
2025-06-16 04:27:24,808 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('647.192198')], HighestMarginPerLot=647.192198
2025-06-16 04:27:24,808 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=6.47, ContributingOrders=1 (based on individual stored margins)
2025-06-16 04:27:24,808 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-16 04:27:24,809 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 191): Type=BUY, Qty=0.01000000, StoredMargin=6.47192198
2025-06-16 04:27:24,809 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=647.192198
2025-06-16 04:27:24,820 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=BUY, Qty=0.01, StoredMargin=6.520826118671667194718499252
2025-06-16 04:27:24,820 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=652.0826118671667194718499252
2025-06-16 04:27:24,821 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0.02000000, TotalSellQty=0, NetQty=0.02000000
2025-06-16 04:27:24,821 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('647.192198'), Decimal('652.0826118671667194718499252')], HighestMarginPerLot=652.0826118671667194718499252
2025-06-16 04:27:24,821 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=13.04, ContributingOrders=2 (based on individual stored margins)
2025-06-16 04:27:24,821 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=6.47, MarginAfter=13.04, AdditionalMargin=6.57
2025-06-16 04:27:24,880 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=6.47000000, CalculatedNewMargin=13.04
2025-06-16 04:27:24,929 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '4620665177', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8849700000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': Decimal('6.520826118671667194718499252'), 'commission': Decimal('0.10'), 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'OPEN'}
2025-06-16 04:27:25,033 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 13.04000000
2025-06-16 04:27:25,056 - INFO - orders - User data cache updated for user 1 after placing order
2025-06-16 04:27:25,299 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-16 04:27:25,303 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-16 04:27:25,303 - INFO - orders - Using order model: DemoUserOrder
2025-06-16 04:27:25,312 - INFO - orders - Fetched 2 open orders for user 1
2025-06-16 04:27:25,326 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-16 04:27:25,331 - INFO - orders - Updated static orders cache for user 1 with 2 open orders and 1 pending orders
2025-06-16 04:27:37,675 - INFO - orders - Add stoploss request received - Order ID: 4620665177, User ID: 1
2025-06-16 04:27:37,771 - INFO - orders - Generated stoploss_id: 3869781450 for order 4620665177
2025-06-16 04:27:37,777 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-16 04:27:37,777 - INFO - orders - Non-Barclays user. Adding stoploss to order 4620665177 immediately
2025-06-16 04:27:37,807 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-16 04:27:37,808 - INFO - orders - Using order model: DemoUserOrder
2025-06-16 04:27:37,816 - INFO - orders - Fetched 2 open orders for user 1
2025-06-16 04:27:37,824 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-16 04:27:37,827 - INFO - orders - Updated static orders cache for user 1 with 2 open orders and 1 pending orders
2025-06-16 04:27:54,207 - INFO - orders - Add takeprofit request received - Order ID: 4620665177, User ID: 1
2025-06-16 04:27:54,217 - INFO - orders - Generated takeprofit_id: 7716472791 for order 4620665177
2025-06-16 04:27:54,223 - INFO - orders - User 1 is_barclays_live_user: False
2025-06-16 04:27:54,223 - INFO - orders - Non-Barclays user. Adding takeprofit to order 4620665177 immediately
2025-06-16 04:27:54,251 - INFO - orders - Starting update_user_static_orders for user 1, user_type demo
2025-06-16 04:27:54,252 - INFO - orders - Using order model: DemoUserOrder
2025-06-16 04:27:54,259 - INFO - orders - Fetched 2 open orders for user 1
2025-06-16 04:27:54,269 - INFO - orders - Fetched 1 pending orders for user 1
2025-06-16 04:27:54,272 - INFO - orders - Updated static orders cache for user 1 with 2 open orders and 1 pending orders
2025-06-16 04:28:39,586 - INFO - orders - Application starting up - Orders logging initialized
2025-06-16 04:29:06,016 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-16 04:29:22,524 - INFO - orders - Close order request received - Order ID: 4256722996, User ID: 4, User Type: live
2025-06-16 04:29:22,524 - INFO - orders - Close request details - Price: 0.52841, Type: BUY, Symbol: AUDCHF
2025-06-16 04:29:22,524 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x0000018C937F20D0>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-16 04:29:22,524 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-16 04:29:22,524 - INFO - orders - Request to close order 4256722996 for user 4 (User) with price 0.52841. Frontend provided type: BUY, company: AUDCHF, status: CLOSED, frontend_status: CLOSED.
2025-06-16 04:29:22,534 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-16 04:29:22,534 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-16 04:30:04,866 - INFO - orders - Cancel takeprofit request received - Order ID: 2480048137, User ID: 4
2025-06-16 04:30:04,906 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-16 04:30:05,207 - INFO - orders - Takeprofit cancel request sent to Firebase for order 2480048137
2025-06-16 04:39:38,554 - INFO - orders - Application starting up - Orders logging initialized
2025-06-16 04:40:22,213 - INFO - orders - Close order request received - Order ID: 4256722996, User ID: 4, User Type: live
2025-06-16 04:40:22,214 - INFO - orders - Close request details - Price: 0.52835, Type: BUY, Symbol: AUDCHF
2025-06-16 04:40:22,214 - INFO - orders - user_to_operate_on: <app.database.models.User object at 0x0000016812C774D0>, type: <class 'app.database.models.User'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'address_proof', 'address_proof_image', 'bank_account_number', 'bank_branch_name', 'bank_holder_name', 'bank_ifsc_code', 'city', 'country', 'created_at', 'email', 'fund_manager', 'group_name', 'hashed_password', 'id', 'id_proof', 'id_proof_image', 'isActive', 'is_self_trading', 'is_service_account', 'leverage', 'margin', 'metadata', 'money_requests', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'rock_orders', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_favorites', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-16 04:40:22,219 - INFO - orders - Using order model: user_orders for user 4 (User)
2025-06-16 04:40:22,220 - INFO - orders - Request to close order 4256722996 for user 4 (User) with price 0.52835. Frontend provided type: BUY, company: AUDCHF, status: CLOSED, frontend_status: CLOSED.
2025-06-16 04:40:22,240 - INFO - orders - User group: Group B, sending_orders setting: barclays
2025-06-16 04:40:22,240 - INFO - orders - Live user 4 from group 'Group B' has 'sending_orders' set to 'barclays'. Pushing close request to Firebase and skipping local DB update.
2025-06-16 04:42:59,440 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-16 04:43:31,970 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-16 04:43:31,976 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-16 04:43:31,976 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-16 04:43:31,976 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-16 04:43:32,670 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 1
2025-06-16 04:43:32,670 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-16 04:43:32,674 - INFO - orders - [ORDER_MARGIN_CALC] Got BUY price for AUDCAD from cache: 0.8844000000
2025-06-16 04:43:32,674 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-16 04:43:32,674 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 1 * 100000.00000000 = 100000.00000000
2025-06-16 04:43:32,674 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (100000.00000000 * 0.8844000000) / 100.00 = 884.4000000000000000 (rounded to 884.40)
2025-06-16 04:43:32,675 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-16 04:43:32,675 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 1 * 10.0000 = 10.0000
2025-06-16 04:43:32,675 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-16 04:43:32,675 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 884.40 CAD
2025-06-16 04:43:32,675 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 884.40 CAD to USD for margin for AUDCAD BUY order (user_id: 4, position: )
2025-06-16 04:43:32,675 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-16 04:43:32,678 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-16 04:43:32,679 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-16 04:43:32,679 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-16 04:43:32,682 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3573200000'), 'o': Decimal('1.3572900000')}
2025-06-16 04:43:32,682 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3573200000
2025-06-16 04:43:32,682 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 884.40 CAD / 1.3573200000 = 651.5781098046149765714790912 USD
2025-06-16 04:43:32,682 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 884.40 CAD -> 651.5781098046149765714790912 USD
2025-06-16 04:43:32,683 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=651.5781098046149765714790912, price=0.8844000000, contract_value=100000.00000000, commission=10.00
2025-06-16 04:43:32,683 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=10.00
2025-06-16 04:43:32,694 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 2
2025-06-16 04:43:32,694 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 86): Type=BUY, Qty=0.01000000, StoredMargin=6.49943996
2025-06-16 04:43:32,695 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.943996
2025-06-16 04:43:32,695 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 87): Type=BUY, Qty=1.00000000, StoredMargin=649.97457871
2025-06-16 04:43:32,695 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=649.97457871
2025-06-16 04:43:32,695 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1.01000000, TotalSellQty=0, NetQty=1.01000000
2025-06-16 04:43:32,696 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.943996'), Decimal('649.97457871')], HighestMarginPerLot=649.97457871
2025-06-16 04:43:32,697 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=656.47, ContributingOrders=2 (based on individual stored margins)
2025-06-16 04:43:32,699 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 3
2025-06-16 04:43:32,699 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 86): Type=BUY, Qty=0.01000000, StoredMargin=6.49943996
2025-06-16 04:43:32,699 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.943996
2025-06-16 04:43:32,699 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 87): Type=BUY, Qty=1.00000000, StoredMargin=649.97457871
2025-06-16 04:43:32,699 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=649.97457871
2025-06-16 04:43:32,700 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=651.5781098046149765714790912
2025-06-16 04:43:32,700 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=651.5781098046149765714790912
2025-06-16 04:43:32,701 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=2.01000000, TotalSellQty=0, NetQty=2.01000000
2025-06-16 04:43:32,701 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.943996'), Decimal('649.97457871'), Decimal('651.5781098046149765714790912')], HighestMarginPerLot=651.5781098046149765714790912
2025-06-16 04:43:32,702 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=1309.67, ContributingOrders=3 (based on individual stored margins)
2025-06-16 04:43:32,705 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=656.47, MarginAfter=1309.67, AdditionalMargin=653.20
2025-06-16 04:43:32,715 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '4251998806', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8844000000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('651.5781098046149765714790912'), 'commission': Decimal('10.00'), 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'OPEN'}
2025-06-16 04:43:32,774 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 1744.41000000
2025-06-16 04:43:32,794 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-16 04:43:32,959 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-16 04:43:33,143 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '4251998806', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88440000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('651.57810980'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-16 04:43:33,489 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 4251998806 (order_status=PROCESSING, margin not updated in DB)
2025-06-16 04:43:33,498 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 04:43:33,498 - INFO - orders - Using order model: UserOrder
2025-06-16 04:43:33,516 - INFO - orders - Fetched 3 open orders for user 4
2025-06-16 04:43:33,530 - INFO - orders - Fetched 2 pending orders for user 4
2025-06-16 04:43:33,540 - INFO - orders - Updated static orders cache for user 4 with 3 open orders and 2 pending orders
2025-06-16 04:44:58,298 - INFO - orders - Service provider update request received: {"order_id":"9954250417","order_status":"PENDING"}
2025-06-16 04:44:58,323 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 04:44:58,324 - INFO - orders - Using order model: UserOrder
2025-06-16 04:44:58,327 - INFO - orders - Fetched 3 open orders for user 4
2025-06-16 04:44:58,332 - INFO - orders - Fetched 3 pending orders for user 4
2025-06-16 04:44:58,334 - INFO - orders - Updated static orders cache for user 4 with 3 open orders and 3 pending orders
2025-06-16 04:47:00,602 - INFO - orders - Add stoploss request received - Order ID: 2480048137, User ID: 4
2025-06-16 04:47:00,611 - INFO - orders - Generated stoploss_id: 8305220821 for order 2480048137
2025-06-16 04:47:00,618 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-16 04:47:00,618 - INFO - orders - Barclays user detected. Sending stoploss request to Firebase for order 2480048137
2025-06-16 04:47:01,256 - INFO - orders - Stoploss request sent to Firebase for order 2480048137
2025-06-16 04:48:17,271 - INFO - orders - Add stoploss request received - Order ID: 2480048137, User ID: 4
2025-06-16 04:48:17,291 - INFO - orders - Generated stoploss_id: 2952857571 for order 2480048137
2025-06-16 04:48:17,304 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-16 04:48:17,304 - INFO - orders - Barclays user detected. Sending stoploss request to Firebase for order 2480048137
2025-06-16 04:48:17,980 - INFO - orders - Stoploss request sent to Firebase for order 2480048137
2025-06-16 04:48:44,161 - INFO - orders - Add takeprofit request received - Order ID: 2480048137, User ID: 4
2025-06-16 04:48:44,179 - INFO - orders - Generated takeprofit_id: 6340497845 for order 2480048137
2025-06-16 04:48:44,188 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-16 04:48:44,188 - INFO - orders - Barclays user detected. Sending takeprofit request to Firebase for order 2480048137
2025-06-16 04:48:44,497 - INFO - orders - Takeprofit request sent to Firebase for order 2480048137
2025-06-16 04:49:15,310 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-16 04:49:21,865 - INFO - orders - Cancel takeprofit request received - Order ID: 7872796244, User ID: 4
2025-06-16 04:49:21,880 - INFO - orders - User 4 is_barclays_live_user: True
2025-06-16 04:49:22,253 - INFO - orders - Takeprofit cancel request sent to Firebase for order 7872796244
2025-06-16 04:52:11,330 - INFO - orders - Application starting up - Orders logging initialized
2025-06-16 04:52:17,108 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-16 04:52:31,052 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 3
2025-06-16 04:52:31,059 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-16 04:52:31,059 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-16 04:52:31,060 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-16 04:52:31,388 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 3
2025-06-16 04:52:31,389 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-16 04:52:31,393 - INFO - orders - [ORDER_MARGIN_CALC] Got BUY price for AUDCAD from cache: 0.8847600000
2025-06-16 04:52:31,394 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-16 04:52:31,394 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 3 * 100000.00000000 = 300000.00000000
2025-06-16 04:52:31,394 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (300000.00000000 * 0.8847600000) / 100.00 = 2654.2800000000000000 (rounded to 2654.28)
2025-06-16 04:52:31,394 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-16 04:52:31,394 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 3 * 10.0000 = 30.0000
2025-06-16 04:52:31,394 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-16 04:52:31,395 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 2654.28 CAD
2025-06-16 04:52:31,395 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 2654.28 CAD to USD for margin for AUDCAD BUY order (user_id: 4, position: )
2025-06-16 04:52:31,395 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-16 04:52:31,398 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-16 04:52:31,398 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-16 04:52:31,398 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-16 04:52:31,401 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3569900000'), 'o': Decimal('1.3569600000')}
2025-06-16 04:52:31,401 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3569900000
2025-06-16 04:52:31,402 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 2654.28 CAD / 1.3569900000 = 1956.005571153803638936174917 USD
2025-06-16 04:52:31,402 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 2654.28 CAD -> 1956.005571153803638936174917 USD
2025-06-16 04:52:31,402 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=1956.005571153803638936174917, price=0.8847600000, contract_value=300000.00000000, commission=30.00
2025-06-16 04:52:31,402 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=30.00
2025-06-16 04:52:31,414 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 2
2025-06-16 04:52:31,414 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 86): Type=BUY, Qty=0.01000000, StoredMargin=6.49943996
2025-06-16 04:52:31,414 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.943996
2025-06-16 04:52:31,414 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 87): Type=BUY, Qty=1.00000000, StoredMargin=649.97457871
2025-06-16 04:52:31,415 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=649.97457871
2025-06-16 04:52:31,415 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1.01000000, TotalSellQty=0, NetQty=1.01000000
2025-06-16 04:52:31,415 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.943996'), Decimal('649.97457871')], HighestMarginPerLot=649.97457871
2025-06-16 04:52:31,415 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=656.47, ContributingOrders=2 (based on individual stored margins)
2025-06-16 04:52:31,416 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 3
2025-06-16 04:52:31,416 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 86): Type=BUY, Qty=0.01000000, StoredMargin=6.49943996
2025-06-16 04:52:31,416 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.943996
2025-06-16 04:52:31,416 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 87): Type=BUY, Qty=1.00000000, StoredMargin=649.97457871
2025-06-16 04:52:31,416 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=649.97457871
2025-06-16 04:52:31,416 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: NEW_UNSAVED): Type=BUY, Qty=3, StoredMargin=1956.005571153803638936174917
2025-06-16 04:52:31,417 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=652.001857051267879645391639
2025-06-16 04:52:31,417 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=4.01000000, TotalSellQty=0, NetQty=4.01000000
2025-06-16 04:52:31,417 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.943996'), Decimal('649.97457871'), Decimal('652.001857051267879645391639')], HighestMarginPerLot=652.001857051267879645391639
2025-06-16 04:52:31,417 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=2614.53, ContributingOrders=3 (based on individual stored margins)
2025-06-16 04:52:31,417 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=656.47, MarginAfter=2614.53, AdditionalMargin=1958.06
2025-06-16 04:52:31,437 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '5464550373', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8847600000'), 'order_quantity': Decimal('3'), 'contract_value': Decimal('300000.00000000'), 'margin': Decimal('1956.005571153803638936174917'), 'commission': Decimal('30.00'), 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'OPEN'}
2025-06-16 04:52:31,499 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 1744.41000000
2025-06-16 04:52:31,521 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-16 04:52:31,689 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-16 04:52:31,852 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '5464550373', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88476000'), 'order_quantity': Decimal('3.00000000'), 'contract_value': Decimal('300000.00000000'), 'margin': Decimal('1956.00557115'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-16 04:52:32,205 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 5464550373 (order_status=PROCESSING, margin not updated in DB)
2025-06-16 04:52:32,213 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 04:52:32,213 - INFO - orders - Using order model: UserOrder
2025-06-16 04:52:32,260 - INFO - orders - Fetched 3 open orders for user 4
2025-06-16 04:52:32,282 - INFO - orders - Fetched 3 pending orders for user 4
2025-06-16 04:52:32,288 - INFO - orders - Updated static orders cache for user 4 with 3 open orders and 3 pending orders
2025-06-16 04:53:13,461 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 3
2025-06-16 04:53:13,484 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-16 04:53:13,484 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-16 04:53:13,484 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-16 04:53:13,795 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDCAD BUY order, quantity: 3
2025-06-16 04:53:13,795 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDCAD: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-16 04:53:13,797 - INFO - orders - [ORDER_MARGIN_CALC] Got BUY price for AUDCAD from cache: 0.8847400000
2025-06-16 04:53:13,798 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDCAD:
2025-06-16 04:53:13,799 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 3 * 100000.00000000 = 300000.00000000
2025-06-16 04:53:13,799 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (300000.00000000 * 0.8847400000) / 100.00 = 2654.2200000000000000 (rounded to 2654.22)
2025-06-16 04:53:13,799 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDCAD: type=0, value_type=0, rate=10.0000
2025-06-16 04:53:13,800 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 3 * 10.0000 = 30.0000
2025-06-16 04:53:13,800 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDCAD: CAD
2025-06-16 04:53:13,800 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from CAD to USD: 2654.22 CAD
2025-06-16 04:53:13,801 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 2654.22 CAD to USD for margin for AUDCAD BUY order (user_id: 4, position: )
2025-06-16 04:53:13,802 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: CADUSD
2025-06-16 04:53:13,808 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-16 04:53:13,808 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for CADUSD, trying inverse
2025-06-16 04:53:13,808 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDCAD
2025-06-16 04:53:13,815 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('1.3569600000'), 'o': Decimal('1.3569200000')}
2025-06-16 04:53:13,815 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 1.3569600000
2025-06-16 04:53:13,816 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 2654.22 CAD / 1.3569600000 = 1956.004598514326140785284754 USD
2025-06-16 04:53:13,816 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 2654.22 CAD -> 1956.004598514326140785284754 USD
2025-06-16 04:53:13,816 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDCAD BUY: margin=1956.004598514326140785284754, price=0.8847400000, contract_value=300000.00000000, commission=30.00
2025-06-16 04:53:13,816 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDCAD: Calculated commission=30.00
2025-06-16 04:53:13,829 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 2
2025-06-16 04:53:13,830 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 86): Type=BUY, Qty=0.01000000, StoredMargin=6.49943996
2025-06-16 04:53:13,830 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.943996
2025-06-16 04:53:13,830 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 87): Type=BUY, Qty=1.00000000, StoredMargin=649.97457871
2025-06-16 04:53:13,830 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=649.97457871
2025-06-16 04:53:13,830 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1.01000000, TotalSellQty=0, NetQty=1.01000000
2025-06-16 04:53:13,830 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.943996'), Decimal('649.97457871')], HighestMarginPerLot=649.97457871
2025-06-16 04:53:13,830 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=656.47, ContributingOrders=2 (based on individual stored margins)
2025-06-16 04:53:13,830 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 3
2025-06-16 04:53:13,830 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 86): Type=BUY, Qty=0.01000000, StoredMargin=6.49943996
2025-06-16 04:53:13,830 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=649.943996
2025-06-16 04:53:13,830 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: 87): Type=BUY, Qty=1.00000000, StoredMargin=649.97457871
2025-06-16 04:53:13,830 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=649.97457871
2025-06-16 04:53:13,830 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3 (ID: NEW_UNSAVED): Type=BUY, Qty=3, StoredMargin=1956.004598514326140785284754
2025-06-16 04:53:13,830 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 3: MarginPerLot=652.001532838108713595094918
2025-06-16 04:53:13,830 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=4.01000000, TotalSellQty=0, NetQty=4.01000000
2025-06-16 04:53:13,830 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('649.943996'), Decimal('649.97457871'), Decimal('652.001532838108713595094918')], HighestMarginPerLot=652.001532838108713595094918
2025-06-16 04:53:13,830 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=2614.53, ContributingOrders=3 (based on individual stored margins)
2025-06-16 04:53:13,830 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=656.47, MarginAfter=2614.53, AdditionalMargin=1958.06
2025-06-16 04:53:13,837 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '3265099468', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8847400000'), 'order_quantity': Decimal('3'), 'contract_value': Decimal('300000.00000000'), 'margin': Decimal('1956.004598514326140785284754'), 'commission': Decimal('30.00'), 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'OPEN'}
2025-06-16 04:53:13,871 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 1744.41000000
2025-06-16 04:53:13,886 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-16 04:53:14,026 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-16 04:53:14,197 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '3265099468', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88474000'), 'order_quantity': Decimal('3.00000000'), 'contract_value': Decimal('300000.00000000'), 'margin': Decimal('1956.00459851'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-16 04:53:14,499 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 3265099468 (order_status=PROCESSING, margin not updated in DB)
2025-06-16 04:53:14,509 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 04:53:14,509 - INFO - orders - Using order model: UserOrder
2025-06-16 04:53:14,522 - INFO - orders - Fetched 3 open orders for user 4
2025-06-16 04:53:14,534 - INFO - orders - Fetched 3 pending orders for user 4
2025-06-16 04:53:14,539 - INFO - orders - Updated static orders cache for user 4 with 3 open orders and 3 pending orders
2025-06-16 04:57:15,152 - INFO - orders - Application starting up - Orders logging initialized
2025-06-16 04:57:47,806 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: live
2025-06-16 04:57:59,395 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDJPY, Type: BUY, Quantity: 0.01
2025-06-16 04:57:59,399 - INFO - orders - [DEBUG] group_settings_cache: {'sending_orders': 'barclays'}
2025-06-16 04:57:59,399 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-16 04:57:59,399 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-16 04:57:59,698 - INFO - orders - [ORDER_MARGIN_CALC] Calculating margin for AUDJPY BUY order, quantity: 0.01
2025-06-16 04:57:59,698 - INFO - orders - [ORDER_MARGIN_CALC] Contract size for AUDJPY: 100000.00000000 (raw: 100000.00000000, type: <class 'decimal.Decimal'>)
2025-06-16 04:57:59,702 - INFO - orders - [ORDER_MARGIN_CALC] Got BUY price for AUDJPY from cache: 94.0720000000
2025-06-16 04:57:59,702 - INFO - orders - [ORDER_MARGIN_CALC] Contract value calculation for AUDJPY:
2025-06-16 04:57:59,702 - INFO - orders - [ORDER_MARGIN_CALC] Contract value = quantity * contract_size = 0.01 * 100000.00000000 = 1000.0000000000
2025-06-16 04:57:59,702 - INFO - orders - [ORDER_MARGIN_CALC] Margin calculation: (contract_value * price) / leverage = (1000.0000000000 * 94.0720000000) / 100.00 = 940.720000000000000000 (rounded to 940.72)
2025-06-16 04:57:59,702 - INFO - orders - [ORDER_MARGIN_CALC] Commission settings for AUDJPY: type=0, value_type=0, rate=10.0000
2025-06-16 04:57:59,703 - INFO - orders - [ORDER_MARGIN_CALC] Per lot commission: 0.01 * 10.0000 = 0.100000
2025-06-16 04:57:59,703 - INFO - orders - [ORDER_MARGIN_CALC] Profit currency for AUDJPY: JPY
2025-06-16 04:57:59,703 - INFO - orders - [ORDER_MARGIN_CALC] Converting margin from JPY to USD: 940.72 JPY
2025-06-16 04:57:59,703 - INFO - orders - [CURRENCY_CONVERT] Starting conversion of 940.72 JPY to USD for margin for AUDJPY BUY order (user_id: 4, position: )
2025-06-16 04:57:59,703 - INFO - orders - [CURRENCY_CONVERT] Trying direct conversion with symbol: JPYUSD
2025-06-16 04:57:59,706 - INFO - orders - [CURRENCY_CONVERT] Direct conversion prices from cache: None
2025-06-16 04:57:59,706 - INFO - orders - [CURRENCY_CONVERT] No direct conversion rate found for JPYUSD, trying inverse
2025-06-16 04:57:59,707 - INFO - orders - [CURRENCY_CONVERT] Trying inverse conversion with symbol: USDJPY
2025-06-16 04:57:59,711 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion prices from cache: {'b': Decimal('144.1320000000'), 'o': Decimal('144.1280000000')}
2025-06-16 04:57:59,711 - INFO - orders - [CURRENCY_CONVERT] Found inverse conversion rate (bid): 144.1320000000
2025-06-16 04:57:59,711 - INFO - orders - [CURRENCY_CONVERT] Inverse conversion successful: 940.72 JPY / 144.1320000000 = 6.526794882468848000444037410 USD
2025-06-16 04:57:59,711 - INFO - orders - [ORDER_MARGIN_CALC] Margin after USD conversion: 940.72 JPY -> 6.526794882468848000444037410 USD
2025-06-16 04:57:59,711 - INFO - orders - [ORDER_MARGIN_CALC] Final results for AUDJPY BUY: margin=6.526794882468848000444037410, price=94.0720000000, contract_value=1000.0000000000, commission=0.10
2025-06-16 04:57:59,711 - app.services.order_processing - INFO - [COMMISSION_CALC] User 4 Symbol AUDJPY: Calculated commission=0.10
2025-06-16 04:57:59,720 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDJPY, Positions count: 0
2025-06-16 04:57:59,720 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDJPY. Returning zero margin.
2025-06-16 04:57:59,721 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDJPY, Positions count: 1
2025-06-16 04:57:59,721 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDJPY, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=0.01, StoredMargin=6.526794882468848000444037410
2025-06-16 04:57:59,721 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDJPY, Pos 1: MarginPerLot=652.6794882468848000444037410
2025-06-16 04:57:59,721 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDJPY: TotalBuyQty=0.01, TotalSellQty=0, NetQty=0.01
2025-06-16 04:57:59,721 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDJPY: AllMarginsPerLot=[Decimal('652.6794882468848000444037410')], HighestMarginPerLot=652.6794882468848000444037410
2025-06-16 04:57:59,721 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDJPY: CalculatedTotalMargin=6.53, ContributingOrders=1 (based on individual stored margins)
2025-06-16 04:57:59,721 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDJPY: MarginBefore=0.00, MarginAfter=6.53, AdditionalMargin=6.53
2025-06-16 04:57:59,731 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '1107488801', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDJPY', 'order_type': 'BUY', 'order_price': Decimal('94.0720000000'), 'order_quantity': Decimal('0.01'), 'contract_value': Decimal('1000.0000000000'), 'margin': Decimal('6.526794882468848000444037410'), 'commission': Decimal('0.10'), 'stop_loss': None, 'take_profit': None, 'stoploss_id': None, 'takeprofit_id': None, 'status': 'OPEN'}
2025-06-16 04:57:59,793 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 1744.41000000
2025-06-16 04:57:59,847 - INFO - orders - User data cache updated for user 4 after placing order
2025-06-16 04:58:00,042 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-16 04:58:00,160 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '1107488801', 'order_user_id': 4, 'order_company_name': 'AUDJPY', 'order_type': 'BUY', 'order_status': 'PROCESSING', 'order_price': Decimal('94.07200000'), 'order_quantity': Decimal('0.01000000'), 'contract_value': Decimal('1000.00000000'), 'margin': Decimal('6.52679488'), 'stop_loss': None, 'take_profit': None, 'status': 'OPEN'}
2025-06-16 04:58:00,438 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 1107488801 (order_status=PROCESSING, margin not updated in DB)
2025-06-16 04:58:00,447 - INFO - orders - Starting update_user_static_orders for user 4, user_type live
2025-06-16 04:58:00,447 - INFO - orders - Using order model: UserOrder
2025-06-16 04:58:00,469 - INFO - orders - Fetched 3 open orders for user 4
2025-06-16 04:58:00,502 - INFO - orders - Fetched 3 pending orders for user 4
2025-06-16 04:58:00,510 - INFO - orders - Updated static orders cache for user 4 with 3 open orders and 3 pending orders
